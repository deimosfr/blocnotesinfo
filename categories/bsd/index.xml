<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BSD on Tech Notebook</title><link>https://wiki.deimos.fr/categories/bsd/</link><description>Recent content in BSD on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 28 Apr 2025 18:51:06 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/categories/bsd/index.xml" rel="self" type="application/rss+xml"/><item><title>Activating the Serial Port on FreeBSD</title><link>https://wiki.deimos.fr/Activer_le_port_s%C3%A9rie_sous_FreeBSD/</link><pubDate>Sat, 19 May 2012 23:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Activer_le_port_s%C3%A9rie_sous_FreeBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>By default, the serial port is not activated. If you have a Soekris device, for example, it&amp;rsquo;s essential to activate it. Let&amp;rsquo;s see how to do this.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To activate the standard output on the serial port (only stdout):&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7c79418" class="language-bash ">
 &lt;code>echo &amp;#34;-h&amp;#34; &amp;gt; /boot.config&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Alternatively, you can choose to activate the serial port only if no keyboard is connected to the machine:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="33a2463" class="language-bash ">
 &lt;code>echo &amp;#34;-P&amp;#34; &amp;gt; /boot.config&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Next, you&amp;rsquo;ll need to configure the stdin part (keyboard) by enabling this line by changing it to &amp;ldquo;on&amp;rdquo;:&lt;/p></description></item><item><title>Configure Network on NetBSD</title><link>https://wiki.deimos.fr/Configurer_le_r%C3%A9seau_sous_NetBSD/</link><pubDate>Fri, 15 Mar 2013 22:32:00 +0100</pubDate><guid>https://wiki.deimos.fr/Configurer_le_r%C3%A9seau_sous_NetBSD/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/netbsd-logo.png" alt="NetBSD" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>6.0.1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.netbsd.org/" rel="external" target="_blank">NetBSD Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>15/03/2013&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The network is an essential part of system configuration. I will cover some aspects of it here.&lt;/p></description></item><item><title>Smartmontools: Hard Drive Monitoring</title><link>https://wiki.deimos.fr/Smartmontool_:_Surveillance_des_disques_dur/</link><pubDate>Fri, 14 Jan 2011 20:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/Smartmontool_:_Surveillance_des_disques_dur/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Smartmontools is a tool for analyzing hard drives and their most critical physical characteristics. It consists of two parts: smartd daemon, which checks parameters every 30 minutes and writes the results to &lt;code>/var/log/syslog&lt;/code>, and the smartctl command which requires root privileges and is used to display all the information.&lt;/p>
&lt;h2 id="activation--installation-of-smartmontools">Activation / Installation of smartmontools &lt;a href="#activation--installation-of-smartmontools" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="debian">Debian &lt;a href="#debian" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Installation requires root privileges. The package name varies depending on your Debian version. The example below is for Sarge.&lt;/p></description></item><item><title>Check Connections Per IP</title><link>https://wiki.deimos.fr/Connaitre_le_nombre_de_connections_par_IP/</link><pubDate>Sun, 06 Dec 2009 16:35:00 +0100</pubDate><guid>https://wiki.deimos.fr/Connaitre_le_nombre_de_connections_par_IP/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is a command line to run on your server if you think your server is under attack. It prints out a list of open connections to your server and sorts them by amount.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="linux">Linux &lt;a href="#linux" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1c9d5e9" class="language-bash ">
 &lt;code>netstat -ntu &lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="bsd">BSD &lt;a href="#bsd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="94fb764" class="language-bash ">
 &lt;code>netstat -na &lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>OpenBSD Configuration and Installation via Serial Port on Soekris</title><link>https://wiki.deimos.fr/Configuration_et_installation_via_port_s%C3%A9rie_d%27OpenBSD_sur_Soekris/</link><pubDate>Sun, 25 Oct 2009 20:14:00 +0200</pubDate><guid>https://wiki.deimos.fr/Configuration_et_installation_via_port_s%C3%A9rie_d%27OpenBSD_sur_Soekris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You&amp;rsquo;ve just bought a Soekris board without thinking too much about it&amp;hellip; don&amp;rsquo;t worry, it works like a charm :-).&lt;/p>
&lt;p>I&amp;rsquo;m going to explain how I was able to put OpenBSD on my Soekris with a CompactFlash drive.&lt;/p>
&lt;h2 id="materials-used">Materials Used &lt;a href="#materials-used" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For my installation, I needed:&lt;/p>
&lt;ul>
&lt;li>A DB9 Female/Female serial cable (also called NULL-MODEM)&lt;/li>
&lt;li>A USB to serial port cable (I no longer have serial ports on my machines)&lt;/li>
&lt;li>A network cable connected to interface 1 (the first one) of the Soekris for the PXE boot to work&lt;/li>
&lt;li>A Compact Flash card (Kingston Elite Pro 16GB 133X) (SanDisk is preferred for compatibility reasons)&lt;/li>
&lt;li>And finally, the Soekris 5501-70&lt;/li>
&lt;/ul>
&lt;h2 id="prerequisites">Prerequisites &lt;a href="#prerequisites" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Before starting, certain things need to be set up. I won&amp;rsquo;t explain how all the services below work, so I&amp;rsquo;ll simply provide my configurations. However, I invite you to check out:&lt;/p></description></item><item><title>Getting Hardware Information from a Machine</title><link>https://wiki.deimos.fr/Obtenir_les_informations_hardware_d'une_machine/</link><pubDate>Wed, 26 Aug 2009 13:30:00 +0200</pubDate><guid>https://wiki.deimos.fr/Obtenir_les_informations_hardware_d'une_machine/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On machines (especially remote ones), it&amp;rsquo;s often useful to obtain information such as available RAM, etc.&lt;/p>
&lt;p>In short, we might need other information, and I&amp;rsquo;m not sure where to put all of this data.&lt;/p>
&lt;h2 id="linux">Linux &lt;a href="#linux" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="dmesg">dmesg &lt;a href="#dmesg" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>This command shows what is written during kernel boot and all kernel calls (module loading, etc.). On some distributions, it&amp;rsquo;s even written in the logs in &lt;code>/var/log/*&lt;/code>. Here&amp;rsquo;s an example output:&lt;/p></description></item><item><title>OpenBSD Configuration Guide (Very Complete)</title><link>https://wiki.deimos.fr/Guide_de_configuration_d%27OpenBSD_%5C%28Tr%C3%A8s_complet%5C%29/</link><pubDate>Sun, 18 Jan 2009 03:34:00 +0200</pubDate><guid>https://wiki.deimos.fr/Guide_de_configuration_d%27OpenBSD_%5C%28Tr%C3%A8s_complet%5C%29/</guid><description>&lt;p>Here is a fairly complete documentation on setting up PF, OpenNTPD, and more:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/openbsd.pdf">OpenBSD Configuration Guide&lt;/a>&lt;/p></description></item><item><title>MFS: Using a RAM Filesystem</title><link>https://wiki.deimos.fr/MFS_:_Utiliser_un_filesystem_en_RAM/</link><pubDate>Mon, 05 Jan 2009 02:37:00 +0200</pubDate><guid>https://wiki.deimos.fr/MFS_:_Utiliser_un_filesystem_en_RAM/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>MFS allows you to place a partition in RAM. The advantage is speed. The disadvantage is that you lose all modifications made to it after each reboot. With a simple rsync setup, this can be resolved, which I&amp;rsquo;ll show you how to do.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="partition-tmp">Partition /tmp &lt;a href="#partition-tmp" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>The tmp directory is interesting to move into RAM since the data there is temporary anyway and doesn&amp;rsquo;t need to be stored on the filesystem. Edit the fstab file:&lt;/p></description></item><item><title>Activating Kernel Modules</title><link>https://wiki.deimos.fr/Activer_modules_son_kernel/</link><pubDate>Sun, 04 May 2008 06:48:00 +0200</pubDate><guid>https://wiki.deimos.fr/Activer_modules_son_kernel/</guid><description>&lt;h2 id="bsd-systems">BSD Systems &lt;a href="#bsd-systems" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s the type of command you can use to disable ACPI (among other features) in your BSD kernel:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7073c27" class="language-bash ">
 &lt;code>config -ef /bsd
disable acpi
quit&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To re-enable it, simply replace &lt;code>disable&lt;/code> with &lt;code>enable&lt;/code>.&lt;/p></description></item><item><title>Configure Network on OpenBSD</title><link>https://wiki.deimos.fr/Configurer_le_r%C3%A9seau_sous_OpenBSD/</link><pubDate>Mon, 17 Mar 2008 07:22:00 +0100</pubDate><guid>https://wiki.deimos.fr/Configurer_le_r%C3%A9seau_sous_OpenBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>I won&amp;rsquo;t go into too much detail, as that&amp;rsquo;s what the OpenBSD website is for. This is just a quick reference for recalling how to rapidly configure networking.&lt;/p>
&lt;h2 id="basic-configuration">Basic Configuration &lt;a href="#basic-configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="ifconfig">ifconfig &lt;a href="#ifconfig" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>To list available network cards and view defined IP addresses:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="11981fe" class="language-bash ">
 &lt;code>$ ifconfig
lo0: flags=8049&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST&amp;gt; mtu 33224
 inet 127.0.0.1 netmask 0xff000000
 inet6 ::1 prefixlen 128
 inet6 fe80::1%lo0 prefixlen 64 scopeid 0x5
lo1: flags=8008&amp;lt;LOOPBACK,MULTICAST&amp;gt; mtu 33224
fxp0: flags=8843&amp;lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu 1500
 address: 00:04:ac:dd:39:6a
 media: Ethernet autoselect (100baseTX full-duplex)
 status: active
 inet 10.0.0.38 netmask 0xffffff00 broadcast 10.0.0.255
 inet6 fe80::204:acff:fedd:396a%fxp0 prefixlen 64 scopeid 0x1
pflog0: flags=0&amp;lt;&amp;gt; mtu 33224
pfsync0: flags=0&amp;lt;&amp;gt; mtu 2020
sl0: flags=c010&amp;lt;POINTOPOINT,LINK2,MULTICAST&amp;gt; mtu 296
sl1: flags=c010&amp;lt;POINTOPOINT,LINK2,MULTICAST&amp;gt; mtu 296
ppp0: flags=8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1500
ppp1: flags=8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1500
tun0: flags=10&amp;lt;POINTOPOINT&amp;gt; mtu 3000
tun1: flags=10&amp;lt;POINTOPOINT&amp;gt; mtu 3000
enc0: flags=0&amp;lt;&amp;gt; mtu 1536
bridge0: flags=0&amp;lt;&amp;gt; mtu 1500
bridge1: flags=0&amp;lt;&amp;gt; mtu 1500
vlan0: flags=0&amp;lt;&amp;gt; mtu 1500
 address: 00:00:00:00:00:00
vlan1: flags=0&amp;lt;&amp;gt; mtu 1500
 address: 00:00:00:00:00:00
gre0: flags=9010&amp;lt;POINTOPOINT,LINK0,MULTICAST&amp;gt; mtu 1450
carp0: flags=0&amp;lt;&amp;gt; mtu 1500
carp1: flags=0&amp;lt;&amp;gt; mtu 1500
gif0: flags=8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1280
gif1: flags=8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1280
gif2: flags=8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1280
gif3: flags=8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1280&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Here&amp;rsquo;s a listing of available interfaces with their explanations:&lt;/p></description></item><item><title>Recovering your OpenBSD after a bad manipulation</title><link>https://wiki.deimos.fr/R%C3%A9cup%C3%A9rer_son_OpenBSD_apr%C3%A8s_une_mauvaise_manip/</link><pubDate>Sun, 20 Jan 2008 07:58:00 +0200</pubDate><guid>https://wiki.deimos.fr/R%C3%A9cup%C3%A9rer_son_OpenBSD_apr%C3%A8s_une_mauvaise_manip/</guid><description>&lt;h2 id="1-concrete-case">1. Concrete case &lt;a href="#1-concrete-case" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>While manipulating my external partitions, I accidentally executed:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="bcc0a4a" class="language-bash ">
 &lt;code># rm -fr /dev&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>At boot time I get:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="42151d5" class="language-bash ">
 &lt;code>&amp;#34;/dev/console not found&amp;#34;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>How to fix this problem?&lt;/p>
&lt;h2 id="2-solutions">2. Solutions &lt;a href="#2-solutions" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>
&lt;p>A simple method with minimal manipulation is to boot from a ramdisk (your /bsd.rd file that you should have, or an installation CD) and perform an Upgrade.&lt;/p>
&lt;p>This won&amp;rsquo;t overwrite your configuration files, just the files provided in the base system excluding etc42.tgz and xetc42.tgz.&lt;/p></description></item><item><title>Migration: Migrating Linux accounts to BSD</title><link>https://wiki.deimos.fr/Migration_:_Migrer_des_comptes_linux_vers_BSD/</link><pubDate>Fri, 23 Nov 2007 11:16:00 +0200</pubDate><guid>https://wiki.deimos.fr/Migration_:_Migrer_des_comptes_linux_vers_BSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is a solution that allows you to easily migrate Linux accounts to BSD. &lt;strong>The only constraint is that you must not have two identical logins or identifiers after this migration.&lt;/strong>&lt;/p>
&lt;h2 id="linux">Linux &lt;a href="#linux" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Commands to execute (as root) on your Linux machine for exporting:&lt;/p>
&lt;ul>
&lt;li>Gathering data from /etc/passwd and /etc/shadow files:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="0f336fd" class="language-bash ">
 &lt;code>pwunconv&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Transforming the /etc/passwd file to be usable by BSD systems (grep -v &amp;lsquo;root|daemon&amp;rsquo; excludes root and daemon users):&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9d9bba0" class="language-bash ">
 &lt;code>cat /etc/passwd | grep -v &amp;#39;^root\|^daemon&amp;#39; | awk -F: &amp;#39;{printf(&amp;#34;%s:%s:%s:%s::0:0:%s:%s:%s\n&amp;#34;, $1,$2,$3,$4,$5,$6,$7);}&amp;#39; &amp;gt; ~/linux_passwd&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Separate the data from /etc/passwd and /etc/shadow again:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9d952b7" class="language-bash ">
 &lt;code>pwconv&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="bsd">BSD &lt;a href="#bsd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Retrieve the generated file on your BSD system, then for importing:&lt;/p></description></item><item><title>Modifying Your Generic Kernel</title><link>https://wiki.deimos.fr/Modifier_son_kernel_g%C3%A9n%C3%A9rique/</link><pubDate>Tue, 13 Nov 2007 09:15:00 +0200</pubDate><guid>https://wiki.deimos.fr/Modifier_son_kernel_g%C3%A9n%C3%A9rique/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For those coming from the Linux world, they&amp;rsquo;ll find that this is super simple on BSD. In my case, I have a multicore server, and after installing BSD, it only detects one core. It&amp;rsquo;s a shame to run with just one core when you have several. I&amp;rsquo;ll explain here the procedure to switch to multicore, but this works with other kernel modifications as well!&lt;/p>
&lt;h2 id="single-core-to-multicore">Single Core to Multicore &lt;a href="#single-core-to-multicore" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>During installation, you need to select the &amp;ldquo;bsd.mp&amp;rdquo; kernel. When the machine reboots after installation, it boots on the single-core kernel. We will therefore move the current kernel and replace it with the multicore one. To do this, it&amp;rsquo;s very simple:&lt;/p></description></item><item><title>Encrypting Swap Partition</title><link>https://wiki.deimos.fr/Encrypter_sa_swap/</link><pubDate>Wed, 01 Aug 2007 22:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Encrypter_sa_swap/</guid><description>&lt;p>Since OpenBSD 3.7, swap is automatically encrypted. If you&amp;rsquo;re using an earlier version and wish to enable encryption, there are two solutions:&lt;/p>
&lt;h2 id="without-rebooting">Without Rebooting &lt;a href="#without-rebooting" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To enable swap encryption without rebooting, use the following command:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c3166a9" class="language-bash ">
 &lt;code>sysctl -w vm.swapencrypt.enable=1&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="with-rebooting">With Rebooting &lt;a href="#with-rebooting" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To enable swap encryption permanently (requires a reboot), edit the &lt;code>/etc/sysctl.conf&lt;/code> file and uncomment this line:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="2b90011" class="language-bash ">
 &lt;code>vm.swapencrypt.enable=1&lt;/code>
 &lt;/pre>
 &lt;/div></description></item></channel></rss>