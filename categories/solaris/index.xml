<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Solaris on Tech Notebook</title><link>https://wiki.deimos.fr/categories/solaris/</link><description>Recent content in Solaris on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 May 2025 20:33:41 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/categories/solaris/index.xml" rel="self" type="application/rss+xml"/><item><title>Configure Network on Solaris</title><link>https://wiki.deimos.fr/Configurer_le_r%C3%A9seau_sur_Solaris/</link><pubDate>Mon, 06 May 2013 14:01:00 +0200</pubDate><guid>https://wiki.deimos.fr/Configurer_le_r%C3%A9seau_sur_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Solaris can be challenging! Especially when you come from a Linux/BSD world and find that all the network commands are strange.&lt;/p>
&lt;h2 id="detecting-network-cards">Detecting Network Cards &lt;a href="#detecting-network-cards" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To detect network cards that are present and especially connected, here&amp;rsquo;s a very useful command:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c390117" class="language-bash ">
 &lt;code>$ dladm show-dev
igb0 link: up speed: 1000 Mbps duplex: full
igb1 link: up speed: 1000 Mbps duplex: full
igb2 link: up speed: 1000 Mbps duplex: full
igb3 link: up speed: 1000 Mbps duplex: full
clprivnet0 link: unknown speed: 0 Mbps duplex: unknown&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Or you can use &lt;code>dladm show-links&lt;/code> to get more detailed information about the connection status.&lt;/p></description></item><item><title>Pkg-get: Setting up a Repository System for Solaris</title><link>https://wiki.deimos.fr/Pkg-get_:_Mise_en_place_d%27un_syst%C3%A8me_de_repository_pour_Solaris/</link><pubDate>Wed, 23 Jan 2013 10:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Pkg-get_:_Mise_en_place_d%27un_syst%C3%A8me_de_repository_pour_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Package installation in Solaris is quite basic by default, and recompiling sources is not always simple or fast. This is why I suggest using pkg-get, which is a very practical utility that allows you to install your desired packages for Solaris (SPARC or x86) in just a few seconds or minutes.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="new-method">New Method &lt;a href="#new-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>The new method makes things much simpler:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="b723748" class="language-bash ">
 &lt;code>pkgadd -d http://get.opencsw.org/now&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Then add &lt;code>/opt/csw/bin&lt;/code> to your path:&lt;/p></description></item><item><title>Tmpfs: Mounting a RAM filesystem on Solaris</title><link>https://wiki.deimos.fr/Tmpfs_:_monter_un_filesystem_en_RAM_sous_Solaris/</link><pubDate>Sun, 19 Feb 2012 09:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Tmpfs_:_monter_un_filesystem_en_RAM_sous_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>TmpFS (Temporary File System) is the generic name given to any temporary Unix file system. Any file created in such a filesystem disappears when the system is shut down.&lt;/p>
&lt;p>The default implementation of tmpfs in Linux 2.6.x kernels is based on ramfs, which uses the caching mechanism to optimize memory management.
It is also available on Solaris 10.&lt;/p>
&lt;p>However, tmpfs additionally offers a memory size limit that is set at mount time and can be modified on-the-fly with the &amp;ldquo;remount&amp;rdquo; option for security purposes. Tmpfs also allows the system to use swap space when necessary, which provides an additional guarantee.&lt;/p></description></item><item><title>Automating Installation of Many Packages</title><link>https://wiki.deimos.fr/Automatiser_l'installation_de_beaucoup_de_packages/</link><pubDate>Wed, 15 Feb 2012 18:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Automatiser_l'installation_de_beaucoup_de_packages/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Pkgadd isn&amp;rsquo;t particularly user-friendly; it has plenty of options but they&amp;rsquo;re a bit too hidden for my taste. For work, I needed to deploy approximately 1000 packages on several machines. However, with each package installation, I had to enter &amp;lsquo;y&amp;rsquo; and press enter, which quickly becomes tedious.&lt;/p>
&lt;p>To solve this problem, I looked at the man page and found the &lt;code>-n&lt;/code> argument, which is useful since it lets you bypass interactive mode. The drawback is that it doesn&amp;rsquo;t work perfectly. So I searched a bit on the internet and found the response file. This is a file where we pass options. These options are tested during a package installation, and here we force them by default to avoid being bothered.&lt;/p></description></item><item><title>Solaris Package Management</title><link>https://wiki.deimos.fr/Gestion_des_packages_Solaris/</link><pubDate>Wed, 15 Feb 2012 18:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/Gestion_des_packages_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Packages, like in all distributions, are a simple way to install software. Here we will examine all the ways to manage these packages.&lt;/p>
&lt;h2 id="locations">Locations &lt;a href="#locations" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To find out what is installed on your system, simply look at the &lt;code>/var/sadm/install/contents&lt;/code> file:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="fab774b" class="language-bash ">
 &lt;code>more /var/sadm/install/contents&lt;/code>
 &lt;/pre>
 &lt;/div>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7668fbe" class="language- ">
 &lt;code>(output edited for brevity)
/bin=./usr/bin s none SUNWcsr
/dev d none 0755 root sys SUNWcsr SUNWcsd
/dev/allkmem=../devices/pseudo/mm@0:allkmem s none SUNWcsd
/dev/arp=../devices/pseudo/arp@0:arp s none SUNWcsd
/etc/ftpd/ftpusers e ftpusers 0644 root sys 198 16387 1094222536 SUNWftpr
/etc/passwd e passwd 0644 root sys 580 48298 1094222123 SUNWcsr&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To find where a specific software is installed on the system, you can do this:&lt;/p></description></item><item><title>How to Check the Number of Active CPU Cores on Solaris</title><link>https://wiki.deimos.fr/Connaitre_le_nombre_de_cores_CPU_actifs_sur_Solaris/</link><pubDate>Mon, 06 Feb 2012 10:10:00 +0200</pubDate><guid>https://wiki.deimos.fr/Connaitre_le_nombre_de_cores_CPU_actifs_sur_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On certain machines (especially HP), it&amp;rsquo;s very practical for licensing issues to be able to limit the number of cores. Afterwards, it&amp;rsquo;s important to verify that the state is what you expect.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To get the list of active cores:&lt;/p>



 
 
 

 
 
 
 
 
 
 
 

 
 

 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 

 
 

 &lt;div class="prism-codeblock hl_lines linenos">
 &lt;pre id="7f00d31" class="language-bash line-numbers" data-line="2,4" data-line-offset="1">
 &lt;code>&amp;gt; psrinfo -pv
The physical processor has 1 virtual processor (0) x86 (chipid 0x0 GenuineIntel family 6 model 44 step 2 clock 2800 MHz)
 Intel(r) Xeon(r) CPU X5660 @ 2.80GHz
The physical processor has 1 virtual processor (1) x86 (chipid 0x1 GenuineIntel family 6 model 44 step 2 clock 2800 MHz)
 Intel(r) Xeon(r) CPU X5660 @ 2.80GHz&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Here we can see that I only have one virtual CPU per processor (so 2 total).&lt;/p></description></item><item><title>Adding Swap Space on Solaris</title><link>https://wiki.deimos.fr/ajout-de-swap-sous-solaris/</link><pubDate>Mon, 30 Jan 2012 12:09:00 +0200</pubDate><guid>https://wiki.deimos.fr/ajout-de-swap-sous-solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The purpose of this documentation is to quickly describe how to create swap space on Solaris. There are other documentation sources such as &lt;a href="https://wiki.deimos.fr/Management_des_disques_sous_Solaris/">Disk Management in Solaris&lt;/a> that describe in depth how disks work on Solaris, but that&amp;rsquo;s not the goal here.&lt;/p>
&lt;p>We&amp;rsquo;ll look at three methods to add swap space:&lt;/p>
&lt;ul>
&lt;li>On UFS&lt;/li>
&lt;li>On ZFS&lt;/li>
&lt;li>Using a swap file&lt;/li>
&lt;/ul>
&lt;h2 id="swap-on-ufs">Swap on UFS &lt;a href="#swap-on-ufs" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If you want to add swap space on a UFS disk, you&amp;rsquo;ll need to create a partition. Let&amp;rsquo;s first see what we have:&lt;/p></description></item><item><title>NTP: Creating an NTP Server</title><link>https://wiki.deimos.fr/NTP_:_Cr%C3%A9ation_d%27un_serveur_NTP/</link><pubDate>Thu, 06 Oct 2011 11:10:00 +0200</pubDate><guid>https://wiki.deimos.fr/NTP_:_Cr%C3%A9ation_d%27un_serveur_NTP/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The NTP server is a time server. It provides time based on atomic clock references.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="debian">Debian &lt;a href="#debian" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Super quick:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9efd17a" class="language-bash ">
 &lt;code>apt-get install ntp&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="solaris">Solaris &lt;a href="#solaris" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>On Solaris, NTP is normally installed by default. Otherwise, search for packages containing &lt;em>ntpd&lt;/em>.
You will need to copy the server configuration file:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="0a56674" class="language-bash ">
 &lt;code>cp /etc/inet/ntp.server /etc/inet/ntp.conf&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is some information before diving into configuration files:&lt;/p>
&lt;ul>
&lt;li>stratum: indicates that it&amp;rsquo;s not very reliable data&lt;/li>
&lt;li>127.127.1.0: time given by the machine (BIOS)&lt;/li>
&lt;li>peer: defines a server of the same stratum as the server (same level/same geographic location), which allows for more reliability. Using 1 server + peers provides a more refined configuration than having only geographically distant servers.&lt;/li>
&lt;/ul>
&lt;h3 id="debian-1">Debian &lt;a href="#debian-1" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Here&amp;rsquo;s the configuration file for a time server (&lt;code>/etc/inet/ntp.conf&lt;/code>):&lt;/p></description></item><item><title>IPMP Configuration</title><link>https://wiki.deimos.fr/Configuration_de_l'IPMP/</link><pubDate>Wed, 06 Apr 2011 09:41:00 +0200</pubDate><guid>https://wiki.deimos.fr/Configuration_de_l'IPMP/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>IP Network Multipathing (IPMP) enables you to detect interface failures and transparently switch network access for a system with multiple interfaces on the same IP link. IPMP also allows load balancing of packets for systems with multiple interfaces.&lt;/p>
&lt;p>The equivalent on Linux is called bonding and on BSD, it&amp;rsquo;s called trunking.&lt;/p>
&lt;p>IPMP improves the reliability, availability, and network performance of systems with multiple physical interfaces. Sometimes a physical interface or the networking hardware connected to that interface fails or requires maintenance. Traditionally, it is then impossible to contact the system through any of the IP addresses associated with the failed interface. Additionally, any existing connections to the system using those IP addresses are disrupted.&lt;/p></description></item><item><title>IP Filter: Using the Firewall on Solaris</title><link>https://wiki.deimos.fr/IP_Filter_:_Utilisation_du_firewall_sous_Solaris/</link><pubDate>Tue, 28 Dec 2010 07:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/IP_Filter_:_Utilisation_du_firewall_sous_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>IPFilter (commonly referred to as ipf) is an open source software package that provides firewall services and network address translation (NAT) for many UNIX-like operating systems. The author and software maintainer is Darren Reed. IPFilter supports both IPv4 and IPv6 protocols, and is a stateful firewall.&lt;/p>
&lt;p>IPFilter is delivered with FreeBSD, NetBSD and Solaris 10. It used to be a part of OpenBSD, but it was removed in May 2001 due to problems with the license of IP Filter, after negotiations between Theo de Raadt and Reed broke down. At first glance, the license looks a lot like BSD Licenses, but does not allow redistribution of modified versions. Reed came back with another proposal but it was already too late. The software was removed from OpenBSD.&lt;/p></description></item><item><title>Collectd: Installation and Configuration</title><link>https://wiki.deimos.fr/Collectd_:_Installation_et_configuration_de_Collectd/</link><pubDate>Wed, 06 Oct 2010 08:20:00 +0200</pubDate><guid>https://wiki.deimos.fr/Collectd_:_Installation_et_configuration_de_Collectd/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Collectd gathers statistics about the system it is running on and stores this information. Those statistics can then be used to find current performance bottlenecks (i.e. performance analysis) and predict future system load (i.e. capacity planning). Or if you just want pretty graphs of your private server and are fed up with some homegrown solution you&amp;rsquo;re at the right place, too ;).&lt;/p>
&lt;p>After this installation, you&amp;rsquo;ll likely want access through a web interface. Feel free to continue with &lt;a href="https://wiki.deimos.fr/Serveurs.html#Collectd" rel="external" target="_blank">these documentations&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>.&lt;/p></description></item><item><title>Finding a Process Running on a Specific Port on Solaris</title><link>https://wiki.deimos.fr/Trouver_le_process_qui_tourne_sur_un_certain_port_sur_Solaris/</link><pubDate>Thu, 05 Aug 2010 13:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/Trouver_le_process_qui_tourne_sur_un_certain_port_sur_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Since &lt;code>netstat -auntpl&lt;/code> doesn&amp;rsquo;t exist on Solaris, I had to do some research to find out how to determine which process is listening on a specific port.&lt;/p>
&lt;h2 id="solutions-1">Solutions 1 &lt;a href="#solutions-1" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You&amp;rsquo;ll need to create a small script:&lt;/p>
&lt;p>(&lt;code>get_process_from_port.sh&lt;/code>)&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="4fa8d23" class="language-bash ">
 &lt;code>#!/bin/ksh

line=&amp;#39;---------------------------------------------&amp;#39;
pids=$(/usr/bin/ps -ef | sed 1d | awk &amp;#39;{print $2}&amp;#39;)

if [ $# -eq 0 ]; then
 read ans?&amp;#34;Enter port you would like to know pid for: &amp;#34;
else
 ans=$1
fi

for f in $pids
do
 /usr/proc/bin/pfiles $f 2&amp;gt;/dev/null | /usr/xpg4/bin/grep -q &amp;#34;port: $ans&amp;#34;
 if [ $? -eq 0 ]; then
 echo $line
 echo &amp;#34;Port: $ans is being used by PID:\c&amp;#34;
 /usr/bin/ps -ef -o pid -o args | egrep -v &amp;#34;grep|pfiles&amp;#34; | grep $f
 fi
done
exit 0&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Run the script and enter the port number when prompted.&lt;/p></description></item><item><title>Setting up a quorum server</title><link>https://wiki.deimos.fr/Mise_en_place_d'un_quorum_server/</link><pubDate>Mon, 26 Jul 2010 12:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_d'un_quorum_server/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;strong>THIS IS NEEDED ONLY FOR A 2 NODES CLUSTER WITHOUT A DISKS ARRAY!&lt;/strong>&lt;/p>
&lt;p>You generally need it when you have 2 servers without a SAN, so you need a third machine with this service installed and launched for your quorum.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Normally the Quorum Server software is installed with the Sun Cluster Software.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Just configure the file &lt;code>/etc/scqsd/scqsd.conf&lt;/code> with this line:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f006c1a" class="language-bash ">
 &lt;code>/usr/cluster/lib/sc/scqsd -d /var/scqsd -i quorum_name -p 9001&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>quorum_name: is the instance name of the quorum server&lt;/li>
&lt;li>9001: is the default listening port of quorum server&lt;/li>
&lt;/ul>
&lt;p>After that, just launch the quorum server instance:&lt;/p></description></item><item><title>Installation of Sun Cluster</title><link>https://wiki.deimos.fr/Installation_of_Sun_Cluster_(old)/</link><pubDate>Mon, 26 Jul 2010 12:01:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_of_Sun_Cluster_(old)/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This is not very complicated. You just have to follow this documentation&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For the installation, download the Availability Suite on &lt;a href="https://www.sun.com" rel="external" target="_blank">Sun Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>.&lt;/p></description></item><item><title>Mount an ISO image on Solaris</title><link>https://wiki.deimos.fr/Monter_une_image_ISO_sous_Solaris/</link><pubDate>Tue, 15 Jun 2010 07:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/Monter_une_image_ISO_sous_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Many software packages can be downloaded in the form of an ISO image. Rather than burning the image to a CD-ROM to access its contents, it is easy to mount the image directly into the filesystem using the lofiadm and mount commands.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Given an ISO image in &lt;code>/export/temp/software.iso&lt;/code>, a loopback file device (&lt;code>/dev/lofi/1&lt;/code>) is created with the following command:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="cb8756e" class="language-bash ">
 &lt;code>lofiadm -a /export/temp/software.iso /dev/lofi/1&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>The lofi device creates a block device version of a file. This block device can be mounted to &lt;code>/mnt&lt;/code> with the following command:&lt;/p></description></item><item><title>Managing Solaris Processes</title><link>https://wiki.deimos.fr/Manager_les_processes_Solaris/</link><pubDate>Mon, 12 Apr 2010 09:52:00 +0200</pubDate><guid>https://wiki.deimos.fr/Manager_les_processes_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>A process is any program that is running on the system. All processes are assigned a unique process identification (PID) number, which is used by the kernel to track and manage the process. The PID numbers are used by the root and regular users to identify and control their processes.&lt;/p>
&lt;h2 id="prstat">prstat &lt;a href="#prstat" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The prstat command examines and displays information about active processes on the system.&lt;/p>
&lt;p>This command enables you to view information by specific processes, user identification (UID) numbers, central processing unit (CPU) IDs, or processor sets. By default, the prstat command displays information about all processes sorted by CPU usage. To use the prstat command, perform the command:&lt;/p></description></item><item><title>Upgrading SUN Cluster</title><link>https://wiki.deimos.fr/Upgrader_SUN_Cluster/</link><pubDate>Sat, 13 Feb 2010 14:37:00 +0200</pubDate><guid>https://wiki.deimos.fr/Upgrader_SUN_Cluster/</guid><description>&lt;h2 id="1-introduction">1. Introduction &lt;a href="#1-introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Upgrading a cluster is not an easy task. I&amp;rsquo;ll explain here the steps to follow.&lt;/p>
&lt;h2 id="2-preparing-environment">2. Preparing environment &lt;a href="#2-preparing-environment" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>First of all, you need to be sure you don&amp;rsquo;t have any running services (You should do those step for all your servers).&lt;/p>
&lt;p>Then you need to boot in a non cluster mode:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="edce713" class="language-bash ">
 &lt;code>reboot -- -x&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>You also need to download the latest version of Sun Cluster and unzip it in &lt;code>/export/home/patchs/&lt;/code> for example.&lt;/p></description></item><item><title>ACL: Implementing NT-Style Permissions on Solaris</title><link>https://wiki.deimos.fr/ACL_Implementation_droits_type_NT_sur_Solaris/</link><pubDate>Wed, 10 Feb 2010 13:13:00 +0200</pubDate><guid>https://wiki.deimos.fr/ACL_Implementation_droits_type_NT_sur_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>With respect to a computer filesystem, an access control list (&lt;a href="https://en.wikipedia.org/wiki/Access_control_list" rel="external" target="_blank">ACL&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>) is a list of permissions attached to an object. An ACL specifies which users or system processes are granted access to objects, as well as what operations are allowed to be performed on given objects. In a typical ACL, each entry in the list specifies a subject and an operation (e.g. the entry (Alice, delete) on the ACL for file WXY gives Alice permission to delete file WXY).&lt;/p></description></item><item><title>Changing Solaris Locales</title><link>https://wiki.deimos.fr/Changer_les_locales_de_Solaris/</link><pubDate>Mon, 08 Feb 2010 16:22:00 +0200</pubDate><guid>https://wiki.deimos.fr/Changer_les_locales_de_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You may encounter messages like &amp;ldquo;couldn&amp;rsquo;t set locale correctly&amp;rdquo; which can quickly become annoying to see in the display.&lt;/p>
&lt;h2 id="problem-explanation">Problem Explanation &lt;a href="#problem-explanation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This occurs because the locales installed on the machine do not match those in your shell&amp;rsquo;s environment variables.&lt;/p>
&lt;p>To see what you have in your shell:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3776f44" class="language-bash ">
 &lt;code>&amp;gt; env &lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And to see what&amp;rsquo;s available on the system, it&amp;rsquo;s just as simple:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1b0ecce" class="language-bash ">
 &lt;code>&amp;gt; ls /usr/lib/locale
C&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="solution">Solution &lt;a href="#solution" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For my part, I live in France, so I need the locales for my country. I&amp;rsquo;m going to install the Western European locales. For this, you&amp;rsquo;ll need the Solaris DVD in the drive:&lt;/p></description></item><item><title>Running Multiple MySQL Instances on Solaris</title><link>https://wiki.deimos.fr/Lancer_plusieurs_instances_de_MySQL_sur_Solaris/</link><pubDate>Fri, 29 Jan 2010 06:12:00 +0200</pubDate><guid>https://wiki.deimos.fr/Lancer_plusieurs_instances_de_MySQL_sur_Solaris/</guid><description>&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Download MySQL&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1d66a35" class="language-bash ">
 &lt;code>wget http://dev.mysql.com/get/Downloads/MySQL-5.1/mysql-5.1.41-solaris10-x86_64.pkg.gz/from/http://mir2.ovh.net/ftp.mysql.com/&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Create the MySQL user&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="2bf9848" class="language-bash ">
 &lt;code>groupadd mysql
useradd -g mysql -s /bin/false -d /var/empty mysql&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Verify that the user is properly created&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9a060f8" class="language-bash ">
 &lt;code># finger mysql
Login name: mysql
Directory: /var/empty Shell: /bin/sh
Never logged in.
No unread mail
No Plan.&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Decompress the MySQL archive and install it&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7cb8898" class="language-bash ">
 &lt;code>gunzip mysql-5.1.41-solaris10-x86_64.pkg.gz
pkgadd -d mysql-5.1.41-solaris10-x86_64.pkg&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="mycnf">my.cnf &lt;a href="#mycnf" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Create two distinct configuration files by changing:&lt;/p></description></item><item><title>Configuration and Usage of Solaris Zones (Containers)</title><link>https://wiki.deimos.fr/Configuration_et_utilisation_des_Zones_Solaris_(Containers)/</link><pubDate>Fri, 11 Dec 2009 21:43:00 +0200</pubDate><guid>https://wiki.deimos.fr/Configuration_et_utilisation_des_Zones_Solaris_(Containers)/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Zones or Containers are:&lt;/p>
&lt;ul>
&lt;li>Virtual instance of Solaris&lt;/li>
&lt;li>Software partition for the OS&lt;/li>
&lt;/ul>
&lt;p>A large SunFire server with hardware domains allows many isolated systems to be created. Zones achieve this in software and is far more flexible - it is easy to move individual CPUs between zones as needed, or to configure a more sophisticated way to share CPUs and memory.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>There are two general zone types to pick from during zone creation. They are,&lt;/p></description></item><item><title>Installing HA Zones with ZFS and Solaris Cluster</title><link>https://wiki.deimos.fr/Installation_de_Zones_HA_avec_ZFS_et_Solaris_Cluster/</link><pubDate>Mon, 30 Nov 2009 21:11:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_de_Zones_HA_avec_ZFS_et_Solaris_Cluster/</guid><description>&lt;p>Here is excellent and quick-to-implement documentation:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/installing_ha_containers_with_zfs_using_the_solaris_10_os_and_solaris_cluster_3.2_software.pdf">Installing HA Containers With ZFS Using the Solaris 10 OS and Solaris Cluster 3.2 Software&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/zone-cluster-virtual-cluster.pdf">Zone Cluster - How to Deploy virtual Clusters and why&lt;/a>&lt;/p></description></item><item><title>Modifying Network Card Parameters</title><link>https://wiki.deimos.fr/Modifier_les_param%C3%A8tres_des_cartes_r%C3%A9seaux/</link><pubDate>Sat, 28 Nov 2009 16:20:00 +0200</pubDate><guid>https://wiki.deimos.fr/Modifier_les_param%C3%A8tres_des_cartes_r%C3%A9seaux/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Project Brussels from the OpenSolaris project revamped how link properties are managed, and their push to get rid of ndd and device-specific properties is now well underway!&lt;/p>
&lt;h2 id="show-properties">Show properties &lt;a href="#show-properties" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Link properties are actually pretty cool, and they can be displayed with the dladm utilities &amp;ldquo;show-linkprop&amp;rdquo; option:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="980ca91" class="language-bash ">
 &lt;code>$ dladm show-linkprop e1000g0

LINK PROPERTY PERM VALUE DEFAULT POSSIBLE
e1000g0 speed r- 0 0 --
e1000g0 autopush -- -- -- --
e1000g0 zone rw -- -- --
e1000g0 duplex r- half half half,full
e1000g0 state r- down up up,down
e1000g0 adv_autoneg_cap rw 1 1 1,0
e1000g0 mtu rw 1500 1500 --
e1000g0 flowctrl rw bi bi no,tx,rx,bi
e1000g0 adv_1000fdx_cap r- 1 1 1,0
e1000g0 en_1000fdx_cap rw 1 1 1,0
e1000g0 adv_1000hdx_cap r- 0 1 1,0
e1000g0 en_1000hdx_cap r- 0 1 1,0
e1000g0 adv_100fdx_cap r- 1 1 1,0
e1000g0 en_100fdx_cap rw 1 1 1,0
e1000g0 adv_100hdx_cap r- 1 1 1,0
e1000g0 en_100hdx_cap rw 1 1 1,0
e1000g0 adv_10fdx_cap r- 1 1 1,0
e1000g0 en_10fdx_cap rw 1 1 1,0
e1000g0 adv_10hdx_cap r- 1 1 1,0
e1000g0 en_10hdx_cap rw 1 1 1,0
e1000g0 maxbw rw -- -- --
e1000g0 cpus rw -- -- --
e1000g0 priority rw high high low,medium,high&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>As you can see in the above output, the typical speed, duplex, mtu and flowctrl properties are listed. In addition to those, the &amp;ldquo;maxbw&amp;rdquo; and &amp;ldquo;cpus&amp;rdquo; properties that were introduced with the recent crossbow putback are visible. The &amp;ldquo;maxbw&amp;rdquo; property is especially useful, since it allows you to limit how much bandwidth is available to an interface. Here is an example that caps bandwidth for an interface at 2Mb/s:&lt;/p></description></item><item><title>Managing Updates with Update Manager and smpatch</title><link>https://wiki.deimos.fr/G%C3%A9rer_ses_updates_avec_Update_Manager_et_smpatch/</link><pubDate>Sat, 21 Nov 2009 07:11:00 +0200</pubDate><guid>https://wiki.deimos.fr/G%C3%A9rer_ses_updates_avec_Update_Manager_et_smpatch/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>As I love Debian and some of my servers are running on Solaris, I had to get in touch with Solaris update solutions. They have a GUI called Solaris Update Manager and the CLI version called smpatch.&lt;/p>
&lt;p>As it is on servers, I don&amp;rsquo;t have a graphical interface and I need to run updates with command lines. That&amp;rsquo;s what I&amp;rsquo;ll specifically talk about in this documentation. List of interesting binaries:&lt;/p></description></item><item><title>Multipathing Management on Solaris</title><link>https://wiki.deimos.fr/Multipathing_management_on_Solaris/</link><pubDate>Fri, 06 Nov 2009 16:40:00 +0200</pubDate><guid>https://wiki.deimos.fr/Multipathing_management_on_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Multipathing allows for connection to multiple links. For example, a disk array connected via fiber to machines can have 2 fibers per machine.&lt;/p>
&lt;p>To manage this type of configuration, you need to use multipathing.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To check if your multipath is enabled, it&amp;rsquo;s simple. Look at your devices, they should look like this:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="d1b6073" class="language- ">
 &lt;code>/dev/dsk/c3t2000002037CD9F72d0s0&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>instead of this:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="ba6a140" class="language- ">
 &lt;code>/dev/dsk/c1t1d0s0&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If this is not the case, then perform the actions that follow.&lt;/p></description></item><item><title>Getting Hardware Information from a Machine</title><link>https://wiki.deimos.fr/Obtenir_les_informations_hardware_d'une_machine/</link><pubDate>Wed, 26 Aug 2009 13:30:00 +0200</pubDate><guid>https://wiki.deimos.fr/Obtenir_les_informations_hardware_d'une_machine/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On machines (especially remote ones), it&amp;rsquo;s often useful to obtain information such as available RAM, etc.&lt;/p>
&lt;p>In short, we might need other information, and I&amp;rsquo;m not sure where to put all of this data.&lt;/p>
&lt;h2 id="linux">Linux &lt;a href="#linux" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="dmesg">dmesg &lt;a href="#dmesg" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>This command shows what is written during kernel boot and all kernel calls (module loading, etc.). On some distributions, it&amp;rsquo;s even written in the logs in &lt;code>/var/log/*&lt;/code>. Here&amp;rsquo;s an example output:&lt;/p></description></item><item><title>Jumpstart: Automating Solaris Installations Without Networks</title><link>https://wiki.deimos.fr/Jumpstart:_automatiser_les_installations_Solaris_sans_r%C3%A9seaux/</link><pubDate>Fri, 21 Aug 2009 15:17:00 +0200</pubDate><guid>https://wiki.deimos.fr/Jumpstart:_automatiser_les_installations_Solaris_sans_r%C3%A9seaux/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For my job, I had to automate Solaris installations. Jumpstart exists for this purpose. The problem is that in a new datacenter, you don&amp;rsquo;t always have what you need. That&amp;rsquo;s the real issue. That&amp;rsquo;s why I researched documentation on the internet, which often doesn&amp;rsquo;t work properly, and I&amp;rsquo;ll try to create a comprehensible guide that works (hopefully).&lt;/p>
&lt;h2 id="prerequisites">Prerequisites &lt;a href="#prerequisites" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You&amp;rsquo;ll need a fresh Solaris installation on which you&amp;rsquo;ll do minimal configuration. Also install anything else you&amp;rsquo;re interested in.&lt;/p></description></item><item><title>Monitoring Superuser Access</title><link>https://wiki.deimos.fr/Monitorer_les_acc%C3%A8s_au_superuser/</link><pubDate>Wed, 04 Feb 2009 18:34:00 +0200</pubDate><guid>https://wiki.deimos.fr/Monitorer_les_acc%C3%A8s_au_superuser/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>When the operating system is installed, a superuser is created, with an UID of 0. The usage of the su command is recorded in &lt;code>/var/adm/sulog&lt;/code>.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To record in the first place you need to do the following.
In the file &lt;code>/etc/default/su&lt;/code>, uncomment the entry:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="11f017f" class="language-bash ">
 &lt;code>SULOG=/var/adm/sulog.&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Save it.&lt;/p>
&lt;p>The entries look like this (&lt;code>/var/adm/sulog&lt;/code>):&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="48efe0e" class="language-bash ">
 &lt;code>MO 02/18 14:21 &amp;#43; pts/0 nrocha-root
TU 02/19 14:45 - pts/0 root-nrocha
WE 02/20 19:47 &amp;#43; pts/0 amaria-nrocha&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>The first three columns show the time the event occurred.&lt;/li>
&lt;li>The fourth column shows a - for failed access and a + for successful access.&lt;/li>
&lt;li>The fifth column shows which port the access was made from.&lt;/li>
&lt;li>The last column shows the name of the user who tried to switch users and the switched user.&lt;/li>
&lt;/ul>
&lt;p>Note: This procedure was tested on the Solaris 10 OS.&lt;/p></description></item><item><title>DTrace: Real-time Problem Detection</title><link>https://wiki.deimos.fr/DTrace_:_d%C3%A9tection_de_probl%C3%A8mes_en_temps_r%C3%A9el/</link><pubDate>Fri, 26 Dec 2008 18:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/DTrace_:_d%C3%A9tection_de_probl%C3%A8mes_en_temps_r%C3%A9el/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://fr.wikipedia.org/wiki/DTrace" rel="external" target="_blank">DTrace&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is a tracing system designed by Sun Microsystems for real-time problem detection at both kernel and application levels. It has been available since November 2003 and was integrated as part of Solaris 10 in January 2005. DTrace is the first component of the OpenSolaris project whose code was released under the Common Development and Distribution License (CDDL).&lt;/p></description></item><item><title>Make Unsupported Network Cards Work with Solaris</title><link>https://wiki.deimos.fr/make-unsupported-network-cards-work-with-solaris/</link><pubDate>Sun, 21 Dec 2008 16:12:00 +0200</pubDate><guid>https://wiki.deimos.fr/make-unsupported-network-cards-work-with-solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>I recently faced an issue with network card recognition for my home server. I have two D-Link DGE-530T gigabit network cards, and unfortunately, they don&amp;rsquo;t work out of the box with Solaris. No need to panic though - as the drivers exist under BSD license, they have been ported and some even packaged.&lt;/p>
&lt;p>This was my case for these DLINK cards. I&amp;rsquo;ll share the approach I followed to get my two cards working, and I&amp;rsquo;ll provide reference links in case you have other network cards that need to be recognized.&lt;/p></description></item><item><title>Encrypting a Password with MD5</title><link>https://wiki.deimos.fr/Crypter_un_mot_de_passe_en_MD5/</link><pubDate>Wed, 17 Dec 2008 16:51:00 +0200</pubDate><guid>https://wiki.deimos.fr/Crypter_un_mot_de_passe_en_MD5/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>MD5 hashing allows you to verify the integrity of a file. In short, it creates a fingerprint that helps you verify (after a transfer, for example) whether the file arrived correctly and is not corrupted.&lt;/p>
&lt;p>Today, MD5 encryption has been broken, and it&amp;rsquo;s possible to simulate a fake fingerprint. Therefore, you should be careful about how you use it. Personally, I use it to verify the integrity of downloaded files (as it&amp;rsquo;s a very common method). For example, when I download Sun Cluster, I verify the MD5 hash to ensure the installation is complete and not corrupted.&lt;/p></description></item><item><title>Changing Hostname on Solaris</title><link>https://wiki.deimos.fr/Changer_le_hostname_de_sa_solaris/</link><pubDate>Fri, 05 Dec 2008 14:18:00 +0200</pubDate><guid>https://wiki.deimos.fr/Changer_le_hostname_de_sa_solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>While there are things about Solaris that can be frustrating, this is one aspect where it&amp;rsquo;s impressive! You don&amp;rsquo;t need to restart your machine to change the hostname - it updates live. I have to admit that&amp;rsquo;s pretty cool.&lt;/p>
&lt;h2 id="temporary-method">Temporary Method &lt;a href="#temporary-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s the temporary method (which will be lost after reboot):&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7fd31ba" class="language-bash ">
 &lt;code>hostname machine_name&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And to verify:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="817dad2" class="language-bash ">
 &lt;code>hostname&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="manual-method">Manual Method &lt;a href="#manual-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The method provided here doesn&amp;rsquo;t use any utilities.&lt;/p></description></item><item><title>Setting up VNC server on Solaris</title><link>https://wiki.deimos.fr/Mise_en_place_de_vncserver_sur_Solaris/</link><pubDate>Wed, 03 Dec 2008 15:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_de_vncserver_sur_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Solaris, my love! You who never have packages and are never very convenient to use! In short, my difficult love! And yes, VNC server is doable! Recompiling manually is too difficult and time-consuming, so I opted for packages. But even that isn&amp;rsquo;t all roses!&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="method-1">Method 1 &lt;a href="#method-1" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Add this line to your profile:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="5ad5131" class="language-bash ">
 &lt;code>PATH=$PATH:/usr/openwin/bin:/usr/X11/bin&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="method-2">Method 2 &lt;a href="#method-2" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>For prerequisites, you need pkg-get! Then let&amp;rsquo;s get started:&lt;/p></description></item><item><title>Using the Web Console</title><link>https://wiki.deimos.fr/Utiliser_la_webconsole/</link><pubDate>Thu, 27 Nov 2008 15:55:00 +0200</pubDate><guid>https://wiki.deimos.fr/Utiliser_la_webconsole/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The web console is a tool that allows you to access SUN application management via a web interface. For example, it&amp;rsquo;s possible to administer ZFS pools and partitions or manage your cluster entirely through a web interface.&lt;/p>
&lt;p>This is very convenient for the average user and even more so when you can save time by delegating recurring tasks to a third party (non-experienced) person. That&amp;rsquo;s why I find the web console very useful. To use it, simply connect to this address: https://127.0.0.1:6789&lt;/p></description></item><item><title>Removing User Limitations</title><link>https://wiki.deimos.fr/Enlever_les_limitation_utilisateurs/</link><pubDate>Tue, 21 Oct 2008 17:23:00 +0200</pubDate><guid>https://wiki.deimos.fr/Enlever_les_limitation_utilisateurs/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>At work, I experienced an issue with JVM memory where Xmx and Xms were set to 4.5GB, and part of the memory was going to swap until a Full GC triggered, at which point the reserved memory (RSS) that had gone to swap returned to RAM.&lt;/p>
&lt;p>The warning messages I received were:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="2974d4e" class="language- ">
 &lt;code>pages faults&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>I searched quite a bit before finding a solution.&lt;/p>
&lt;h2 id="removing-user-limitations">Removing User Limitations &lt;a href="#removing-user-limitations" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>First, for the JVM, you need to add an option at launch:&lt;/p></description></item><item><title>Convert MySQL RC Script to SMF</title><link>https://wiki.deimos.fr/Convertir_le_script_RC_de_MySQL_vers_un_SMF/</link><pubDate>Sun, 20 Apr 2008 08:10:00 +0200</pubDate><guid>https://wiki.deimos.fr/Convertir_le_script_RC_de_MySQL_vers_un_SMF/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Solaris 10 and later now supplies MySQL as part of the OS, provided you&amp;rsquo;ve installed the &amp;ldquo;SUNWmysql[rtu]&amp;rdquo; pkgs, but it&amp;rsquo;s started via a legacy RC script still. This document details how to create an SMF manifest to start MySQL instead.&lt;/p>
&lt;p>Note: This process is only needed if you are running Solaris 10, or you wish to use the MySQL 4.x installation that is supplied with Nevada. Later builds of Nevada (I believe snv_79 and later) now come with MySQL 5.0 and includes a service manifest for this version.&lt;/p></description></item><item><title>SSH: Setting up SSH Server on a Minimal Solaris Installation</title><link>https://wiki.deimos.fr/SSH_:_Mise_en_place_du_serveur_SSH_Solaris_sur_une_installation_minimale/</link><pubDate>Sat, 05 Apr 2008 10:16:00 +0200</pubDate><guid>https://wiki.deimos.fr/SSH_:_Mise_en_place_du_serveur_SSH_Solaris_sur_une_installation_minimale/</guid><description>&lt;p>If you need to manage a Solaris 10 box with a minimal install, and SSH is not available, you can install it off of the 2nd CD. Rather than figure out the path to your CDROM (see this article), it was easier in our case to just tar up the needed packages and FTP them to our Solaris box:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7de8f50" class="language-bash ">
 &lt;code>root@srv-3 Product # cp -R SUNWsshcu SUNWsshdr SUNWsshdu SUNWsshr 
SUNWsshu /home/srv-1/sshpkg/
root@srv-3 Product # cd /home/srv-1/sshpkg/
root@srv-3 sshpkg # ls
SUNWsshcu SUNWsshdr SUNWsshdu SUNWsshr SUNWsshu
root@srv-3 sshpkg # tar -cf ../ssh.tar *
root@srv-3 sshpkg # tar -tf ../ssh.tar
SUNWsshcu/
SUNWsshcu/archive/
.
.
.
SUNWsshu/reloc/
SUNWsshu/reloc/usr/
SUNWsshu/reloc/usr/bin/
SUNWsshu/reloc/usr/lib/
SUNWsshu/reloc/usr/lib/ssh/
root@srv-3 sshpkg #&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>On the Solaris side, FTP these to /tmp, then from tmp:&lt;/p></description></item><item><title>Authenticating Solaris Accounts on Active Directory</title><link>https://wiki.deimos.fr/Authentification_de_comptes_Solaris_sur_un_Active_Directory/</link><pubDate>Sat, 08 Sep 2007 11:13:00 +0200</pubDate><guid>https://wiki.deimos.fr/Authentification_de_comptes_Solaris_sur_un_Active_Directory/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Implementation of authentication on Solaris from an Active Directory (AD).&lt;/p>
&lt;p>What this implementation allows for user management on a machine:&lt;/p>
&lt;ul>
&lt;li>Solaris accounts need to be created with an identifier identical to the AD one, with disk space.&lt;/li>
&lt;li>Password verification is done via AD.&lt;/li>
&lt;/ul>
&lt;p>This document is based on a scenario of implementing this type of authentication on Solaris 9.&lt;/p>
&lt;p>The concepts described here apply to all UNIX operating systems that support Kerberos version 5 protocol.&lt;/p></description></item><item><title>How to Determine Your System Architecture</title><link>https://wiki.deimos.fr/Connaitre_son_architecture/</link><pubDate>Wed, 08 Aug 2007 12:30:00 +0200</pubDate><guid>https://wiki.deimos.fr/Connaitre_son_architecture/</guid><description>&lt;p>Here&amp;rsquo;s a simple but very useful trick. The &lt;code>isainfo&lt;/code> command allows you to determine the architecture of a machine:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="190584a" class="language-bash ">
 &lt;code>$ isainfo -v
64-bit amd64 applications
 pause sse2 sse fxsr amd_3dnowx amd_3dnow amd_mmx mmx cmov amd_sysc cx8 
 tsc fpu 
32-bit i386 applications
 pause sse2 sse fxsr amd_3dnowx amd_3dnow amd_mmx mmx cmov amd_sysc cx8 
 tsc fpu&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>I can see here that my system is 64-bit and also has compatibility for 32-bit applications.&lt;/p></description></item><item><title>Some information about the machine</title><link>https://wiki.deimos.fr/Quelques_infos_sur_la_b%C3%A9cane/</link><pubDate>Fri, 16 Mar 2007 14:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/Quelques_infos_sur_la_b%C3%A9cane/</guid><description>&lt;p>To know the available CPUs on the machine:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="45f71f8" class="language-bash ">
 &lt;code>psrinfo -v&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To have all the information about the machine:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="78f29a8" class="language-bash ">
 &lt;code>sysdef&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>Get Unix Format Time on Solaris</title><link>https://wiki.deimos.fr/Obtenir_l'heure_au_format_Unix_sous_Solaris/</link><pubDate>Tue, 06 Mar 2007 16:45:00 +0200</pubDate><guid>https://wiki.deimos.fr/Obtenir_l'heure_au_format_Unix_sous_Solaris/</guid><description>&lt;h2 id="getting-unix-format-time-on-solaris">Getting Unix Format Time on Solaris &lt;a href="#getting-unix-format-time-on-solaris" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is a little script to obtain Unix format on Solaris (Epoch Time):&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="eabf39e" class="language-bash ">
 &lt;code>#!/bin/sh
/usr/bin/truss /usr/bin/date 2&amp;gt;&amp;amp;1 | nawk -F= &amp;#39;/^time\(\)/ {gsub(/ /,&amp;#34;&amp;#34;,$2);print $2}&amp;#39;
exit $?&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And finally, let&amp;rsquo;s see it in action:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f8e6970" class="language-bash ">
 &lt;code># ./edate
1149276150&lt;/code>
 &lt;/pre>
 &lt;/div></description></item></channel></rss>