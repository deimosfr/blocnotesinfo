<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dpkg on Tech Notebook</title><link>https://wiki.deimos.fr/tags/dpkg/</link><description>Recent content in Dpkg on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 May 2025 20:33:41 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/dpkg/index.xml" rel="self" type="application/rss+xml"/><item><title>Advanced Usage of Debian Packages</title><link>https://wiki.deimos.fr/Utilisation_avanc%C3%A9e_des_packages_Debian/</link><pubDate>Fri, 11 Dec 2009 21:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Utilisation_avanc%C3%A9e_des_packages_Debian/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Quite possibly the most distinguishing feature of Debian-based Linux distributions (such as Ubuntu, Mepis, Knoppix, etc) is their package system â€“ APT. Also known as the Advanced Package Tool, APT was first introduced in Debian 2.1 in 1999. APT is not so much a specific program as it is a collection of separate, related packages.&lt;/p>
&lt;p>With APT, Linux gained the ability to install and manage software packages in a much simpler and more efficient way than was previously possible. Before its introduction, most software had to be installed either by manually compiling the source code, or using individual packages with no automatic dependency handling (such as RPM files). This could mean hours of &amp;ldquo;dependency hell&amp;rdquo; even to install a fairly trivial program.&lt;/p></description></item></channel></rss>