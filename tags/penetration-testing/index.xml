<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Penetration Testing on Tech Notebook</title><link>https://wiki.deimos.fr/tags/penetration-testing/</link><description>Recent content in Penetration Testing on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 04 Apr 2025 17:45:45 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/penetration-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Scapy: Data Frames and Packets</title><link>https://wiki.deimos.fr/Scapy_:_Trames_et_paquets_de_donn%C3%A9es/</link><pubDate>Tue, 09 Oct 2007 06:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/Scapy_:_Trames_et_paquets_de_donn%C3%A9es/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Scapy is a utility that allows you to forge, receive and send packets or data frames over a network for a multitude of protocols. In this introduction, you&amp;rsquo;ll discover this Python utility that enables traffic capture, network mapping, ARP cache poisoning, VLAN hopping, or passive operating system fingerprinting.&lt;/p>
&lt;p>Scapy is a program developed in Python by Philippe Biondi (EADS CCR); it notably allows you to forge, receive and transmit packets and/or data frames via a network to or from an IT infrastructure for a multitude of different network protocols (IP, TCP, UDP, ARP, SNMP, ICMP, DNS, DHCP, &amp;hellip;) with precision and speed.&lt;/p></description></item><item><title>Penetration Testing</title><link>https://wiki.deimos.fr/Tests_d'intrusion/</link><pubDate>Tue, 28 Nov 2006 22:23:00 +0200</pubDate><guid>https://wiki.deimos.fr/Tests_d'intrusion/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Once a network is installed and configured, it continuously evolves. New systems are added, old and faithful machines disappear - everything changes constantly. Users can also make modifications to the network without the administrator&amp;rsquo;s knowledge.&lt;/p>
&lt;p>To verify the state of a network, an administrator must behave like a hacker and attempt to penetrate their own defenses. This article presents the methodology to follow.&lt;/p>
&lt;p>It&amp;rsquo;s important to test the security of your own network by putting yourself in the hacker&amp;rsquo;s position to discover potential vulnerabilities. These tests are broken down into several steps:&lt;/p></description></item></channel></rss>