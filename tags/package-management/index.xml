<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Package Management on Tech Notebook</title><link>https://wiki.deimos.fr/tags/package-management/</link><description>Recent content in Package Management on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 04 Apr 2025 17:45:45 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/package-management/index.xml" rel="self" type="application/rss+xml"/><item><title>FreeBSD Package System</title><link>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_FreeBSD/</link><pubDate>Fri, 18 Jul 2014 19:39:00 +0200</pubDate><guid>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_FreeBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>FreeBSD is one of the most widely used BSD distributions for servers as it is very up-to-date and offers a very comprehensive port system (more than 16,000 ports available). Additionally, it integrates advanced functions at the source level.&lt;/p>
&lt;p>This allows you, for example, to modify parameters to best adapt to your needs, similar to Gentoo.&lt;/p>
&lt;h2 id="precompiled-packages">Precompiled Packages &lt;a href="#precompiled-packages" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="new-method">New Method &lt;a href="#new-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>The latest method involves using pkgng. To set it up, you need to convert the current database:&lt;/p></description></item><item><title>APT: Adding Release Preferences for Specific Packages</title><link>https://wiki.deimos.fr/apt-ajouter-des-preferences-de-release-sur-certains-packages/</link><pubDate>Sun, 29 Dec 2013 17:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/apt-ajouter-des-preferences-de-release-sur-certains-packages/</guid><description>&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>29/12/2013&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You may have encountered a situation where you&amp;rsquo;re running the stable version of your system, but you&amp;rsquo;d like to use a more up-to-date package from testing, for example. This is possible! :-)&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="sourcelist">source.list &lt;a href="#sourcelist" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>I&amp;rsquo;ve chosen backuppc as an example. Let&amp;rsquo;s say I&amp;rsquo;m using the stable version, and I&amp;rsquo;d like to permanently install the testing version. I need to edit my &lt;code>/etc/apt/source.list&lt;/code> file so it contains what&amp;rsquo;s necessary to download from both stable and testing repositories:&lt;/p></description></item><item><title>Apt &amp; Aptitude: Useful Commands</title><link>https://wiki.deimos.fr/apt-aptitude-les-commandes-utiles/</link><pubDate>Tue, 07 May 2013 11:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/apt-aptitude-les-commandes-utiles/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Being an Ubuntu/Debian user (yes, I use and advocate both), I have fallen in love with the Advanced Packaging Tool, also known as apt. Before Ubuntu, I played in the world of RPM hell, with distros such as Red Hat itself, Mandrake (as it was called back then), and even SuSE. I would find some piece of software, try to install it, only to find that it would choke, saying that it relied on some certain dependencies. I would install the dependencies, only to find conflicting versions with newer software. Hell indeed. So when I discovered the Debian way of installing software, I wondered why no one had mentioned it to me before. It was heaven. This is the way to software, I thought.&lt;/p></description></item><item><title>Pkg-get: Setting up a Repository System for Solaris</title><link>https://wiki.deimos.fr/Pkg-get_:_Mise_en_place_d%27un_syst%C3%A8me_de_repository_pour_Solaris/</link><pubDate>Wed, 23 Jan 2013 10:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Pkg-get_:_Mise_en_place_d%27un_syst%C3%A8me_de_repository_pour_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Package installation in Solaris is quite basic by default, and recompiling sources is not always simple or fast. This is why I suggest using pkg-get, which is a very practical utility that allows you to install your desired packages for Solaris (SPARC or x86) in just a few seconds or minutes.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="new-method">New Method &lt;a href="#new-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>The new method makes things much simpler:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="b723748" class="language-bash ">
 &lt;code>pkgadd -d http://get.opencsw.org/now&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Then add &lt;code>/opt/csw/bin&lt;/code> to your path:&lt;/p></description></item><item><title>Yum: Package Management in Red Hat</title><link>https://wiki.deimos.fr/Yum_:_utilisation_des_packages_sous_RedHat/</link><pubDate>Fri, 02 Mar 2012 19:08:00 +0200</pubDate><guid>https://wiki.deimos.fr/Yum_:_utilisation_des_packages_sous_RedHat/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Yum, which stands for Yellow dog Updater Modified, is a package manager for Linux distributions like Fedora and Red Hat Enterprise Linux, created by Yellow Dog Linux.&lt;/p>
&lt;p>It allows you to manage the installation and updating of software installed on a distribution. It&amp;rsquo;s a layer on top of RPM that handles downloads and dependencies, similar to Debian&amp;rsquo;s APT or Mandriva&amp;rsquo;s Urpmi.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Installing a package:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3aa0288" class="language-bash ">
 &lt;code>yum install &amp;lt;package&amp;gt;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Reinstalling a package:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="53caaae" class="language-bash ">
 &lt;code>yum reinstall &amp;lt;package&amp;gt;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Installing a local RPM:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e002e93" class="language-bash ">
 &lt;code>yum localinstall &amp;lt;package.rpm&amp;gt;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Removing a package:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7c7dc35" class="language-bash ">
 &lt;code>yum remove &amp;lt;package&amp;gt;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Updating packages or a specific package:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="51a281e" class="language-bash ">
 &lt;code>yum update &amp;lt;package&amp;gt;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Getting information about a package:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c079b69" class="language-bash ">
 &lt;code>yum info &amp;lt;package&amp;gt;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Installing a package group:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="db4834e" class="language-bash ">
 &lt;code>yum groupinstall &amp;lt;group&amp;gt;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Viewing available packages (installed or not):&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="d0179a7" class="language-bash ">
 &lt;code>yum list&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>or&lt;/p></description></item><item><title>Adding Red Hat DVD as a Repository</title><link>https://wiki.deimos.fr/ajouter-le-dvd-red-hat-comme-repository/</link><pubDate>Tue, 21 Feb 2012 16:21:00 +0200</pubDate><guid>https://wiki.deimos.fr/ajouter-le-dvd-red-hat-comme-repository/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You don&amp;rsquo;t have a Red Hat subscription or simply no internet connection to connect to the NRH, yet you have the installation DVD that contains all the packages you need!&lt;/p>
&lt;p>Here&amp;rsquo;s how to add the DVD to the repository.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="dvd">DVD &lt;a href="#dvd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Create a file in /etc/yum.repos.d/redhatcd.repo&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="6736735" class="language-bash ">
 &lt;code>cp /media/RHEL/media.repo /etc/yum.repos.d/redhatcd.repo&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And adapt it with this content:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="0cde3f7" class="language-bash ">
 &lt;code>[InstallMedia]
name=Red Hat Enterprise Linux 6.1
mediaid=1305068199.328169
metadata_expire=-1
gpgcheck=0
cost=500
baseurl=file:///media/RHEL/Server&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Now we&amp;rsquo;ll clear the cache:&lt;/p></description></item><item><title>Solaris Package Management</title><link>https://wiki.deimos.fr/Gestion_des_packages_Solaris/</link><pubDate>Wed, 15 Feb 2012 18:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/Gestion_des_packages_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Packages, like in all distributions, are a simple way to install software. Here we will examine all the ways to manage these packages.&lt;/p>
&lt;h2 id="locations">Locations &lt;a href="#locations" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To find out what is installed on your system, simply look at the &lt;code>/var/sadm/install/contents&lt;/code> file:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="fab774b" class="language-bash ">
 &lt;code>more /var/sadm/install/contents&lt;/code>
 &lt;/pre>
 &lt;/div>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7668fbe" class="language- ">
 &lt;code>(output edited for brevity)
/bin=./usr/bin s none SUNWcsr
/dev d none 0755 root sys SUNWcsr SUNWcsd
/dev/allkmem=../devices/pseudo/mm@0:allkmem s none SUNWcsd
/dev/arp=../devices/pseudo/arp@0:arp s none SUNWcsd
/etc/ftpd/ftpusers e ftpusers 0644 root sys 198 16387 1094222536 SUNWftpr
/etc/passwd e passwd 0644 root sys 580 48298 1094222123 SUNWcsr&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To find where a specific software is installed on the system, you can do this:&lt;/p></description></item><item><title>Advanced Usage of Debian Packages</title><link>https://wiki.deimos.fr/Utilisation_avanc%C3%A9e_des_packages_Debian/</link><pubDate>Fri, 11 Dec 2009 21:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Utilisation_avanc%C3%A9e_des_packages_Debian/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Quite possibly the most distinguishing feature of Debian-based Linux distributions (such as Ubuntu, Mepis, Knoppix, etc) is their package system – APT. Also known as the Advanced Package Tool, APT was first introduced in Debian 2.1 in 1999. APT is not so much a specific program as it is a collection of separate, related packages.&lt;/p>
&lt;p>With APT, Linux gained the ability to install and manage software packages in a much simpler and more efficient way than was previously possible. Before its introduction, most software had to be installed either by manually compiling the source code, or using individual packages with no automatic dependency handling (such as RPM files). This could mean hours of &amp;ldquo;dependency hell&amp;rdquo; even to install a fairly trivial program.&lt;/p></description></item><item><title>Find all dependencies related to a package</title><link>https://wiki.deimos.fr/Trouver_toutes_les_d%C3%A9pendances_li%C3%A9es_%C3%A0_un_package/</link><pubDate>Wed, 24 Sep 2008 15:00:00 +0200</pubDate><guid>https://wiki.deimos.fr/Trouver_toutes_les_d%C3%A9pendances_li%C3%A9es_%C3%A0_un_package/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Sometimes it&amp;rsquo;s very practical to find all dependencies of a package. Here&amp;rsquo;s a useful command for this purpose.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Installation:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e871358" class="language-bash ">
 &lt;code>apt-get install apt-rdepends&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Example search:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e3a52f4" class="language-bash ">
 &lt;code>$ apt-rdepends libapache2-mod-php5
Reading package lists... Done
Building dependency tree... Done
libapache2-mod-php5
 Depends: apache2-mpm-itk
 Depends: apache2-mpm-prefork (&amp;gt;&amp;gt; 2.0.52)
 Depends: apache2.2-common
 Depends: libbz2-1.0
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libcomerr2 (&amp;gt;= 1.33-3)
 Depends: libdb4.4
 Depends: libkrb53 (&amp;gt;= 1.4.2)
 Depends: libmagic1
 Depends: libpcre3 (&amp;gt;= 4.5)
 Depends: libssl0.9.8 (&amp;gt;= 0.9.8c-1)
 Depends: libxml2 (&amp;gt;= 2.6.27)
 Depends: mime-support (&amp;gt;= 2.03-1)
 Depends: php5-common (= 5.2.0-8&amp;#43;etch1)
 Depends: ucf
 Depends: zlib1g (&amp;gt;= 1:1.2.1)
apache2-mpm-itk
 Depends: apache2.2-common (= 2.2.3-4&amp;#43;etch5)
 Depends: libapr1
 Depends: libaprutil1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libcap1
 Depends: libdb4.4
 Depends: libexpat1 (&amp;gt;= 1.95.8)
 Depends: libldap2 (&amp;gt;= 2.1.17-1)
 Depends: libpcre3 (&amp;gt;= 4.5)
 Depends: libpq4 (&amp;gt;= 8.1.4)
 Depends: libsqlite3-0 (&amp;gt;= 3.3.8)
 Depends: libuuid1
apache2.2-common
 Depends: apache2-utils
 Depends: libmagic1
 Depends: lsb-base
 Depends: mime-support
 Depends: net-tools
 Depends: procps
apache2-utils
 Depends: libapr1
 Depends: libaprutil1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libdb4.4
 Depends: libexpat1 (&amp;gt;= 1.95.8)
 Depends: libldap2 (&amp;gt;= 2.1.17-1)
 Depends: libpcre3 (&amp;gt;= 4.5)
 Depends: libpq4 (&amp;gt;= 8.1.4)
 Depends: libsqlite3-0 (&amp;gt;= 3.3.8)
 Depends: libssl0.9.8 (&amp;gt;= 0.9.8c-1)
 Depends: libuuid1
libapr1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libuuid1
libc6
 Depends: tzdata
tzdata
libuuid1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libaprutil1
 Depends: libapr1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libdb4.4
 Depends: libexpat1 (&amp;gt;= 1.95.8)
 Depends: libldap2 (&amp;gt;= 2.1.17-1)
 Depends: libpq4 (&amp;gt;= 8.1.4)
 Depends: libsqlite3-0 (&amp;gt;= 3.3.7)
 Depends: libuuid1
libdb4.4
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libexpat1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libldap2
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libgnutls13 (&amp;gt;= 1.4.0-0)
 Depends: libsasl2-2
libgnutls13
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libgcrypt11 (&amp;gt;= 1.2.2)
 Depends: libgpg-error0 (&amp;gt;= 1.4)
 Depends: liblzo1
 Depends: libopencdk8 (&amp;gt;= 0.5.8)
 Depends: libtasn1-3 (&amp;gt;= 0.3.4)
 Depends: zlib1g (&amp;gt;= 1:1.2.1)
libgcrypt11
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libgpg-error0 (&amp;gt;= 1.2)
libgpg-error0
 Depends: libc6 (&amp;gt;= 2.3.6-6)
liblzo1
 Depends: libc6 (&amp;gt;= 2.3.5-1)
libopencdk8
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libgcrypt11 (&amp;gt;= 1.2.2)
 Depends: libgpg-error0 (&amp;gt;= 1.4)
 Depends: zlib1g (&amp;gt;= 1:1.2.1)
zlib1g
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libtasn1-3
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libsasl2-2
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libdb4.2
libdb4.2
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libpq4
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libcomerr2 (&amp;gt;= 1.33-3)
 Depends: libkrb53 (&amp;gt;= 1.4.2)
 Depends: libssl0.9.8 (&amp;gt;= 0.9.8c-1)
libcomerr2
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libkrb53
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libcomerr2 (&amp;gt;= 1.33-3)
libssl0.9.8
 Depends: debconf (&amp;gt;= 0.5)
 Depends: debconf-2.0
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: zlib1g (&amp;gt;= 1:1.2.1)
debconf
 Depends: debconf-english
 Depends: debconf-i18n
 PreDepends: perl-base (&amp;gt;= 5.6.1-4)
debconf-english
 Depends: debconf
debconf-i18n
 Depends: debconf
 Depends: liblocale-gettext-perl
 Depends: libtext-charwidth-perl
 Depends: libtext-iconv-perl
 Depends: libtext-wrapi18n-perl
liblocale-gettext-perl
 Depends: libc6 (&amp;gt;= 2.3.2.ds1-21)
 PreDepends: perl-base (&amp;gt;= 5.8.7-3)
 PreDepends: perlapi-5.8.7
perl-base
 PreDepends: libc6 (&amp;gt;= 2.3.6-6)
perlapi-5.8.7
libtext-charwidth-perl
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: perl-base (&amp;gt;= 5.8.8-6)
 Depends: perlapi-5.8.8
perlapi-5.8.8
libtext-iconv-perl
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: perl-base (&amp;gt;= 5.8.8-6)
 Depends: perlapi-5.8.8
libtext-wrapi18n-perl
 Depends: libtext-charwidth-perl
debconf-2.0
libsqlite3-0
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libpcre3
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libmagic1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: zlib1g (&amp;gt;= 1:1.2.1)
lsb-base
 Depends: ncurses-bin
 Depends: sed
ncurses-bin
 PreDepends: libc6 (&amp;gt;= 2.3.6-6)
 PreDepends: libncurses5 (&amp;gt;= 5.4-5)
libncurses5
 Depends: libc6 (&amp;gt;= 2.3.6-6)
sed
 PreDepends: libc6 (&amp;gt;= 2.3.6-6)
mime-support
net-tools
 Depends: libc6 (&amp;gt;= 2.3.2.ds1-21)
procps
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libncurses5 (&amp;gt;= 5.4-5)
 Depends: lsb-base (&amp;gt;= 3.0-10)
libcap1
 Depends: libc6 (&amp;gt;= 2.3.2.ds1-4)
apache2-mpm-prefork
 Depends: apache2.2-common (= 2.2.3-4)
 Depends: libapr1
 Depends: libaprutil1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libdb4.4
 Depends: libexpat1 (&amp;gt;= 1.95.8)
 Depends: libldap2 (&amp;gt;= 2.1.17-1)
 Depends: libpcre3 (&amp;gt;= 4.5)
 Depends: libpq4 (&amp;gt;= 8.1.4)
 Depends: libsqlite3-0 (&amp;gt;= 3.3.8)
 Depends: libuuid1
libbz2-1.0
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libxml2
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: zlib1g (&amp;gt;= 1:1.2.1)
php5-common
 Depends: sed (&amp;gt;= 4.1.1-1)
ucf
 Depends: coreutils (&amp;gt;= 5.91)
 Depends: debconf (&amp;gt;= 1.2.0)
 Depends: debconf-2.0
coreutils
 PreDepends: libacl1 (&amp;gt;= 2.2.11-1)
 PreDepends: libc6 (&amp;gt;= 2.3.6-6)
 PreDepends: libselinux1 (&amp;gt;= 1.32)
libacl1
 Depends: libattr1 (&amp;gt;= 2.4.4-1)
 Depends: libc6 (&amp;gt;= 2.3.6-6)
libattr1
 Depends: libc6 (&amp;gt;= 2.3.5-1)
libselinux1
 Depends: libc6 (&amp;gt;= 2.3.6-6)
 Depends: libsepol1 (&amp;gt;= 1.14)
libsepol1
 Depends: libc6 (&amp;gt;= 2.3.6-6)&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>OpenBSD Package System</title><link>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_OpenBSD/</link><pubDate>Tue, 27 Nov 2007 18:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_OpenBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Transitioning to OpenBSD isn&amp;rsquo;t very straightforward when coming from the Linux world (PS: if you&amp;rsquo;re coming from Windows, it&amp;rsquo;s better to stay there or switch to Linux first).&lt;/p>
&lt;p>In OpenBSD, there are two package systems:&lt;/p>
&lt;ul>
&lt;li>The first one is provided by the base OpenBSD system (pkg), containing packages with almost no security vulnerabilities (just a reminder: only 2 vulnerabilities discovered in 10 years). These packages are pre-compiled.&lt;/li>
&lt;li>The second contains many more software applications (port), but according to OpenBSD, they can compromise system stability and security. That said, it&amp;rsquo;s still preferable to use these rather than compiling yourself from various sources since these packages have still been validated by the OpenBSD team. These packages are compiled on demand.&lt;/li>
&lt;/ul>
&lt;h2 id="pgk">PGK &lt;a href="#pgk" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="preparation">Preparation &lt;a href="#preparation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>First, you need to &lt;a href="https://www.openbsd.org/fr/ftp.html" rel="external" target="_blank">choose an FTP server&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> to specify the repository. I chose a French server:&lt;/p></description></item><item><title>Gentoo: Using Portage</title><link>https://wiki.deimos.fr/Gentoo_:_Utilisation_des_portages/</link><pubDate>Sat, 24 Feb 2007 14:40:00 +0200</pubDate><guid>https://wiki.deimos.fr/Gentoo_:_Utilisation_des_portages/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The Gentoo Portage system is an excellent resource (in terms of software) when used correctly. However, incorrect use can lead to a bloated system with unidentifiable packages and files that cannot be updated. This guide will help users properly manage Gentoo portages to have a better system.&lt;/p>
&lt;h2 id="installing-packages">Installing packages &lt;a href="#installing-packages" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>First, what do we mean by &amp;ldquo;Emerge&amp;rdquo;? The description of the &lt;strong>emerge&lt;/strong> command (available in English &lt;a href="https://gentoo-wiki.com/MAN_emerge" rel="external" target="_blank">here&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>), indicates that &lt;strong>emerge&lt;/strong> is the command-line program that serves as the interface to the Portage system. This command allows packages to be installed on the system.
This installation includes (these steps are fully automated):&lt;/p></description></item><item><title>Gentoo: Getting Started</title><link>https://wiki.deimos.fr/Gentoo_:_Bien_commencer_avec_Gentoo/</link><pubDate>Thu, 18 Jan 2007 08:34:00 +0200</pubDate><guid>https://wiki.deimos.fr/Gentoo_:_Bien_commencer_avec_Gentoo/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Gentoo is a Linux distribution known as a source-based distribution. It was designed to be modular, portable, and optimized for the user&amp;rsquo;s hardware. As such, all programs must be compiled from source code. However, many software packages available in precompiled form for different architectures can also be used. This is managed through Gentoo&amp;rsquo;s Portage system.&lt;/p>
&lt;p>Its particularity is the complete (or partial) compilation of a GNU/Linux system from sources, similar to Linux From Scratch but automated.&lt;/p></description></item></channel></rss>