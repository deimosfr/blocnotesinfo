<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mac OS X on Tech Notebook</title><link>https://wiki.deimos.fr/tags/mac-os-x/</link><description>Recent content in Mac OS X on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 04 Apr 2025 17:45:45 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/mac-os-x/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to XHTML</title><link>https://wiki.deimos.fr/Introduction_au_XHTML/</link><pubDate>Sun, 30 Sep 2012 07:38:00 +0200</pubDate><guid>https://wiki.deimos.fr/Introduction_au_XHTML/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>XHTML is a markup language used for writing World Wide Web pages. Originally designed as the successor to HTML, XHTML is based on the syntax defined by XML, which is more recent and simpler than the syntax defined by SGML on which HTML is based.&lt;/p>
&lt;p>Like many XML-based languages, XHTML begins with the letter X, which represents the word &amp;ldquo;extensible&amp;rdquo;. Thus, the first document officially describing XHTML is called &amp;ldquo;XHTMLâ„¢ 1.0 The Extensible HyperText Markup Language&amp;rdquo;. However, the abbreviation XHTML is a trademark of the World Wide Web Consortium (W3C) and is the only one used in the specifications that followed version 1.0.&lt;/p></description></item><item><title>Proxychains: Proxy Any Outbound Connection</title><link>https://wiki.deimos.fr/Proxychains_:_proxyfier_n%27importe_quelle_connexion_vers_l%27ext%C3%A9rieur/</link><pubDate>Mon, 14 May 2012 09:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/Proxychains_:_proxyfier_n%27importe_quelle_connexion_vers_l%27ext%C3%A9rieur/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Ah, those proxy servers at work or school! They can be quite troublesome! Sometimes you really need temporary access to the outside world. Depending on the commands you use, you may or may not have the ability to configure proxy usage by modifying a configuration file, an environment variable, etc.&lt;/p>
&lt;p>The benefit of &lt;a href="https://proxychains.sourceforge.net/" rel="external" target="_blank">proxychains&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is that configuration is done only once, in its own configuration file. Then you use the syntax &lt;code>proxychains &amp;lt;command&amp;gt; &amp;lt;args&amp;gt;&lt;/code> and your command will use the proxy specified in the proxychains configuration file!&lt;/p></description></item><item><title>Crontab: Usage</title><link>https://wiki.deimos.fr/Crontab_:_utilisation/</link><pubDate>Mon, 01 Aug 2011 05:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/Crontab_:_utilisation/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>In short: crontab is used to execute periodic tasks automatically.
In detail: crond is a daemon that runs on most Linux distributions and manages certain periodic tasks. A cronjob is a periodic task defined by the user, which will be executed by the system (or predefined by the authors of the Linux distribution you&amp;rsquo;re using).&lt;/p>
&lt;p>Let&amp;rsquo;s consider a simple example: we want to send ourselves the same email every morning&amp;hellip;&lt;/p></description></item><item><title>Introduction to Shell Scripting</title><link>https://wiki.deimos.fr/Introduction_au_Script_Shell/</link><pubDate>Tue, 03 May 2011 11:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/Introduction_au_Script_Shell/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Bourne-again shell is the free command interpreter of the GNU project. Its name is a play on words (Bourne again / born again) referring to the historic Unix shell, the Bourne shell. Based on the latter, it brings many improvements, notably from the Korn shell and the C shell.&lt;/p>
&lt;p>The original author is Brian Fox of the Free Software Foundation, later succeeded by Chet Ramey. The original Bourne shell was written by Steve Bourne.&lt;/p></description></item><item><title>Introduction to C</title><link>https://wiki.deimos.fr/Introduction_au_C/</link><pubDate>Tue, 18 Jan 2011 12:50:00 +0200</pubDate><guid>https://wiki.deimos.fr/Introduction_au_C/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The history of the C language is intimately linked to that of the UNIX operating system. In 1965, Ken Thompson, from Bell Labs, developed an operating system that he called MULTICS (Multiplexed Information and Computing System) in order to run a game he had created, which gave birth in 1970 to the UNICS operating system (Uniplexed Information and Computing System), quickly renamed UNIX.&lt;/p>
&lt;p>At the time, assembly language was the only language that allowed the development of an operating system. Ken Thompson then developed a higher-level language, the B language (whose name comes from BCPL, a subset of the CPL language, itself derived from Algol, a language that was popular at the time), to facilitate the writing of operating systems. It was a weakly typed language (an untyped language, as opposed to a typed language, is a language that manipulates objects in their binary form, without any notion of type (character, integer, real, etc.)) and too dependent on the PDP-7 (the machine on which UNIX was developed) to allow UNIX to be ported to other machines. So Denis Ritchie (who was, along with Ken Thompson, one of the creators of UNIX) and Brian Kernighan improved the B language to give birth to the C language. In 1973, UNIX was rewritten entirely in C. For 5 years, the C language was limited to internal use at Bell until the day Brian Kernighan and Denis Ritchie published a first definition of the language in a book entitled &amp;ldquo;The C Programming Language&amp;rdquo;. This was the beginning of a revolution in the world of computing.&lt;/p></description></item><item><title>DrawIt: A VIM Extension for Creating ASCII Diagrams</title><link>https://wiki.deimos.fr/DrawIt_:_Une_extension_VIM_pour_faire_des_diagrammes_en_ASCII/</link><pubDate>Sat, 05 Jun 2010 20:40:00 +0200</pubDate><guid>https://wiki.deimos.fr/DrawIt_:_Une_extension_VIM_pour_faire_des_diagrammes_en_ASCII/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/ascii-drawing-in-vim-editor-300x257.png" alt="Drawit VIM" loading="lazy">

&lt;/p>
&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://vim.sourceforge.net/scripts/script.php?script_id=40" rel="external" target="_blank">DrawIt&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> allows you to create ASCII diagrams. It&amp;rsquo;s very practical and avoids the hassle of using unnecessary tools.&lt;/p>
&lt;p>If you want to convert your ASCII diagrams to images, use &lt;a href="https://ditaa.sourceforge.net/" rel="external" target="_blank">Ditaa&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>.&lt;/p></description></item><item><title>Clearing DNS Cache on Mac OS X</title><link>https://wiki.deimos.fr/Vider_son_cache_DNS_sur_Mac_OS_X/</link><pubDate>Sun, 06 Dec 2009 16:42:00 +0200</pubDate><guid>https://wiki.deimos.fr/Vider_son_cache_DNS_sur_Mac_OS_X/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Just like on Windows systems, there&amp;rsquo;s a solution to clear the DNS cache on Mac OS X.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9995f6e" class="language-bash ">
 &lt;code>dscacheutil -flushcache&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>Hdiutil: Creating a DVD ISO from a VIDEO TS folder</title><link>https://wiki.deimos.fr/Hdiutil_:_Cr%C3%A9er_un_ISO_DVD_depuis_un_dossier_VIDEO_TS/</link><pubDate>Sat, 28 Nov 2009 16:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/Hdiutil_:_Cr%C3%A9er_un_ISO_DVD_depuis_un_dossier_VIDEO_TS/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You may sometimes need to create a DVD from a VIDEO_TS folder. This is the solution.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="a04ccd6" class="language-bash ">
 &lt;code>$ hdiutil makehybrid -udf -udf-volume-name DVD_NAME -o MY_DVD.iso /path/&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>&lt;code>/path/&lt;/code> is the root folder of the DVD, not the VIDEO_TS folder.&lt;/p></description></item><item><title>Creating an Apple Time Machine Network on FreeBSD</title><link>https://wiki.deimos.fr/Cr%C3%A9er_un_Apple_Time_Machine_r%C3%A9seaux_sous_FreeBSD/</link><pubDate>Wed, 28 Jan 2009 02:29:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cr%C3%A9er_un_Apple_Time_Machine_r%C3%A9seaux_sous_FreeBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s a quick guide on how to set up Time Machine on Mac OS X to back up to a networked machine running FreeBSD.&lt;/p>
&lt;h2 id="on-the-freebsd-server">On the FreeBSD server &lt;a href="#on-the-freebsd-server" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Build &amp;amp; Install net/netatalk from ports.&lt;/li>
&lt;li>Edit &lt;code>/usr/local/etc/AppleVolumes.default&lt;/code>&lt;/li>
&lt;li>Append: &amp;ldquo;/your_time_machine_path TimeMachine allow:your_user_name cnidscheme:cdb options:usedots&amp;rdquo; and replace your path and your username in the proper places.&lt;/li>
&lt;li>Optionally, remove the &amp;ldquo;~&amp;rdquo; already present in that file if you don&amp;rsquo;t want to share users home directories.&lt;/li>
&lt;li>Add &amp;ldquo;netatalk_enable=&amp;ldquo;YES&amp;rdquo;&amp;rdquo; and &amp;ldquo;afpd_enable=&amp;ldquo;YES&amp;rdquo;&amp;rdquo; to &lt;code>/etc/rc.conf&lt;/code>.&lt;/li>
&lt;li>&lt;code>/usr/local/etc/rc.d/netatalk start&lt;/code> (nothing will be printed).&lt;/li>
&lt;/ul>
&lt;h2 id="mac-os-x-machine-client-running-leopard-of-course">Mac OS X machine client (running Leopard, of course) &lt;a href="#mac-os-x-machine-client-running-leopard-of-course" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Mount your remote volume. Command+K on the Finder and then type: &amp;ldquo;afp://&lt;machine IP address or local hostname if you have a local DNS server>&amp;rdquo;. You can&amp;rsquo;t type the machine name because we&amp;rsquo;re not using multicast DNS.&lt;/li>
&lt;li>Build a sparse bundle image using &amp;ldquo;Disk utility&amp;rdquo; (HFS+ case-sensitive formatted). Usually, the size should be something that gives you enough room for expansion. If you want to backup your whole MacBook/iMac/etc. disk, you can set the sparse bundle image size the same as the disk your are backing up.&lt;/li>
&lt;li>The name of this image is important. It should be &amp;ldquo;Your_Computer_Name_MACAddress.sparsebundle&amp;rdquo;. Check your computer name from the &amp;ldquo;Sharing&amp;rdquo; section of &amp;ldquo;System Preferences&amp;rdquo; and the MAC address comes from the interface you&amp;rsquo;ll be using to do the backup. I really recommend using your Wired interface. Check the MAC address via ifconfig(1) or via the &amp;ldquo;Network&amp;rdquo; section of &amp;ldquo;System Preferences&amp;rdquo;. E.g., if you&amp;rsquo;re John Doe, have a MacBook and your MAC address is 00:01:02:03:04:05, your file should be named &amp;ldquo;John Doe&amp;rsquo;s MacBook_000102030405.sparsebundle&amp;rdquo;.&lt;/li>
&lt;li>On the Terminal, type &amp;ldquo;defaults write com.apple.systempreferences TMShowUnsupportedNetworkVolumes 1&amp;rdquo;. This is the crucial thing.&lt;/li>
&lt;li>Go to &amp;ldquo;System Preferences&amp;rdquo;, &amp;ldquo;Time Machine&amp;rdquo; and enable it. The networked volume will now show up on the list.&lt;/li>
&lt;li>Before selecting the volume on which you&amp;rsquo;ll dump the backup, copy the sparse bundle file you&amp;rsquo;ve created to your networked volume called &amp;ldquo;TimeMachine&amp;rdquo;.&lt;/li>
&lt;li>Select the networked Volume from the Time Machine volumes list.&lt;/li>
&lt;li>Initiate the backup!&lt;/li>
&lt;/ul>
&lt;p>Enjoy!&lt;/p></description></item><item><title>Installing Mac OS X and Ubuntu in Dual Boot</title><link>https://wiki.deimos.fr/Installer_Mac_OS_X_et_ubuntu_en_dual_boot/</link><pubDate>Sun, 05 Oct 2008 09:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installer_Mac_OS_X_et_ubuntu_en_dual_boot/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If you want to have Ubuntu alongside your Mac OS X on the same hard drive and be able to choose which OS to launch at boot time, then this article is for you.&lt;/p>
&lt;h2 id="setup">Setup &lt;a href="#setup" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here are the steps:&lt;/p>
&lt;ul>
&lt;li>Install Mac OS X&lt;/li>
&lt;li>Install &lt;a href="https://refit.sourceforge.net/" rel="external" target="_blank">Refit&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> and enable it:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="4b5b7d8" class="language-bash ">
 &lt;code>sudo /efi/refit/enable-always.sh&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Once completed, launch Boot Camp and decide how much space you want to allocate&lt;/li>
&lt;li>Reboot from the Ubuntu CD&lt;/li>
&lt;li>Install &lt;a href="https://www.ubuntu-fr.org/" rel="external" target="_blank">Ubuntu&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/li>
&lt;li>When Ubuntu reboots, go back to Mac OS X (as it&amp;rsquo;s impossible to boot Ubuntu for now)&lt;/li>
&lt;li>Reinstall &lt;a href="https://refit.sourceforge.net/" rel="external" target="_blank">Refit&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> over the existing installation, then enable it again:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="04b0da1" class="language-bash ">
 &lt;code>sudo /efi/refit/enable-always.sh&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Now you can reboot to boot into Ubuntu :-)&lt;/li>
&lt;/ul></description></item><item><title>Creating a VPN with OpenSSH</title><link>https://wiki.deimos.fr/Cr%C3%A9er_un_VPN_avec_OpenSSH/</link><pubDate>Sat, 26 Jul 2008 12:20:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cr%C3%A9er_un_VPN_avec_OpenSSH/</guid><description>&lt;h2 id="1-introduction">1 Introduction &lt;a href="#1-introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Most SSH clients have the ability to perform local and remote port forwarding. This is a pretty neat use of SSH if you haven&amp;rsquo;t ever seen it before. OpenSSH can take it one step further and provide a full VPN solution encrypting all network traffic on all ports between two machines. This is pretty powerful stuff. This is useful for a quick-and-dirty way to encrypt all traffic between two machines. For a longer term solution, you might want to check out how to configure IPsec or use OpenVPN. All three solutions have some really cool features and benefits.&lt;/p></description></item><item><title>Installing OSX from an External Drive</title><link>https://wiki.deimos.fr/Installer_OSX_depuis_un_disque_externe/</link><pubDate>Sat, 27 Oct 2007 13:46:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installer_OSX_depuis_un_disque_externe/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Maybe your machine doesn&amp;rsquo;t have a DVD drive or it&amp;rsquo;s simply not working. How can you install OSX again? The solution is here&amp;hellip;&lt;/p>
&lt;h2 id="instructions">Instructions &lt;a href="#instructions" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Create a disk image using Disk Utility (on Mac A)&lt;/li>
&lt;li>Transfer the .dmg file to the target computer (Mac B) via FireWire or Ethernet&lt;/li>
&lt;li>You&amp;rsquo;ll need an external FireWire hard drive, name it &amp;ldquo;Mac OS X Install DVD&amp;rdquo; with Disk Utility&lt;/li>
&lt;li>Select the newly created partition and click on the Restore tab&lt;/li>
&lt;li>Drag and drop the Tiger disk image into &lt;strong>Source&lt;/strong> and the new partition into &lt;strong>Destination&lt;/strong>. Then click on Restore&lt;/li>
&lt;li>Once the restoration is complete, go to System Preferences / Startup Disk, choose the new partition as the startup disk, then restart&lt;/li>
&lt;/ul>
&lt;p>










&lt;img src="https://wiki.deimos.fr/images/dmg-01-tm.jpg" alt="External OSX Installation" loading="lazy">

&lt;/p></description></item><item><title>Creating an ISO Image</title><link>https://wiki.deimos.fr/Cr%C3%A9er_une_image_ISO/</link><pubDate>Tue, 14 Aug 2007 06:19:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cr%C3%A9er_une_image_ISO/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Creating an ISO image in Windows can be somewhat tedious in some cases (e.g., bootable CDs, etc.). In Linux, one might think it would be complicated, but it&amp;rsquo;s actually very simple.&lt;/p>
&lt;h2 id="method-using-cat">Method using cat &lt;a href="#method-using-cat" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The easiest method:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="acfd655" class="language-bash ">
 &lt;code>cat /dev/hda &amp;gt; ~/image.iso&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>hda: corresponds to your CD device (using &lt;code>/dev/cdrom&lt;/code> should also work)&lt;/p>
&lt;h2 id="method-using-dd">Method using dd &lt;a href="#method-using-dd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s another method that&amp;rsquo;s not much more complicated:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="752f01a" class="language-bash ">
 &lt;code>dd if=/dev/cdrom of=winxp.iso&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And if you want compression afterward:&lt;/p></description></item><item><title>Compiling with GCC on Multiple Architectures (e.g., PPC and Intel)</title><link>https://wiki.deimos.fr/Compiler_avec_gcc_sur_plusieurs_architectures_(ex:_PPC_et_Intel)/</link><pubDate>Thu, 12 Jul 2007 07:20:00 +0200</pubDate><guid>https://wiki.deimos.fr/Compiler_avec_gcc_sur_plusieurs_architectures_(ex:_PPC_et_Intel)/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This type of compilation happens in two phases. The first phase is to compile separately for Intel and PPC architectures. The second phase is to create a binary that combines both architecture binaries.&lt;/p>
&lt;h2 id="creating-binaries-for-different-architectures">Creating Binaries for Different Architectures &lt;a href="#creating-binaries-for-different-architectures" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On Intel, I can compile with gcc like this:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e06f246" class="language-bash ">
 &lt;code>gcc -arch ppc -isysroot /Developer/SDKs/MacOSX10.4u.sdk prog.c&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>For the Makefile, edit it and look for the following options to specify the architecture:&lt;/p></description></item><item><title>Environment Variables</title><link>https://wiki.deimos.fr/Env_:_variables_d'environnements/</link><pubDate>Wed, 21 Feb 2007 15:03:00 +0200</pubDate><guid>https://wiki.deimos.fr/Env_:_variables_d'environnements/</guid><description>&lt;p>For environment variables, when you don&amp;rsquo;t use them often, it&amp;rsquo;s not always easy to remember the commands.&lt;/p>
&lt;p>To display your PATH:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="19b224f" class="language-bash ">
 &lt;code>echo $PATH&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To display all environment variables:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="8c82b34" class="language-bash ">
 &lt;code>env&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To add something to your PATH:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="61fa5de" class="language-bash ">
 &lt;code>PATH=$PATH:/path/to/add&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To add a new environment variable:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="88216bf" class="language-bash ">
 &lt;code>MYVAR=/toto
export $MYVAR&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Check with the &lt;code>env&lt;/code> command and it works! :-)&lt;/p></description></item><item><title>Emacs: Quick Reference Card</title><link>https://wiki.deimos.fr/Emacs_:_Quick_Reference_Card/</link><pubDate>Wed, 09 Aug 2006 09:29:00 +0200</pubDate><guid>https://wiki.deimos.fr/Emacs_:_Quick_Reference_Card/</guid><description>&lt;p>As I&amp;rsquo;m not an Emacs user, I can&amp;rsquo;t personally vouch for the quality of this Quick Reference Card. But since the Vi one is good, this one should theoretically be as well :).&lt;/p>
&lt;p>Here is the &lt;a href="https://wiki.deimos.fr/pdf/emacsqrc.pdf">Emacs Quick Reference Card PDF&lt;/a>.&lt;/p></description></item><item><title>Switching to Case-Sensitive File System on Mac OS X</title><link>https://wiki.deimos.fr/switch_mac_os_case_sensitive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.deimos.fr/switch_mac_os_case_sensitive/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On Mac OS X, the default file system is case-insensitive. However, you can switch to a case-sensitive file system if needed. This is particularly useful for certain applications or development environments that require case sensitivity.&lt;/p>

&lt;div class="alert alert-warning d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">
 
 &lt;span class="material-icons size-20 me-2">
 warning
 &lt;/span>&lt;/div>
 
 &lt;div class="w-100">Switching to a case-sensitive file system can cause issues with applications that expect a case-insensitive file system. This is why moving to a case-sensitive file system is not recommended.&lt;/div>
 &lt;/div>
&lt;p>Instead, it is preferable to create a dedicated volume (not a partition) with a case-sensitive file system. This way, you can keep your main volume case-insensitive while having a separate volume for applications that require case sensitivity. The other advantage is that you won&amp;rsquo;t encounter any issue with TimeMachine backups and restoring your system (you can&amp;rsquo;t restore a case-sensitive volume to a case-insensitive one without a long and painful procedure).&lt;/p></description></item></channel></rss>