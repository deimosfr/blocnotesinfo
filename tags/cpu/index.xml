<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CPU on Tech Notebook</title><link>https://wiki.deimos.fr/tags/cpu/</link><description>Recent content in CPU on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 May 2025 20:33:41 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/cpu/index.xml" rel="self" type="application/rss+xml"/><item><title>Process Latency and Kernel Timing</title><link>https://wiki.deimos.fr/Latence_des_process_et_kernel_timing/</link><pubDate>Sun, 05 Jan 2014 04:42:00 +0200</pubDate><guid>https://wiki.deimos.fr/Latence_des_process_et_kernel_timing/</guid><description>&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>Kernel 2.6.32+&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Red Hat 6.3&lt;br>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.kernel.org" rel="external" target="_blank">Kernel Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>05/01/2014&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="the-clocks">The Clocks &lt;a href="#the-clocks" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>There are several clocks that allow you to obtain or manipulate time operations:&lt;/p></description></item><item><title>CPUBurn: Stress Testing Your CPU</title><link>https://wiki.deimos.fr/Cpuburn_:_stresser_son_CPU/</link><pubDate>Tue, 20 Aug 2013 13:14:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cpuburn_:_stresser_son_CPU/</guid><description>&lt;p>There are plenty of system stress testing applications for Windows, but what about Linux? Here is a simple way to stress test your CPU in Linux and monitor various system statistics while doing it. This can be used for testing an overclocked system or just to burn in a new CPU.&lt;/p>
&lt;h2 id="installing-cpuburn">Installing CPUBurn &lt;a href="#installing-cpuburn" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>First install cpuburn:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1db6758" class="language-bash ">
 &lt;code>aptitude install cpuburn&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>You can run CPU Burn-In with:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="8f4fead" class="language-bash ">
 &lt;code>burnP6&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="using-stress">Using Stress &lt;a href="#using-stress" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You can also use stress:&lt;/p></description></item><item><title>Cpulimit: Limit CPU Usage</title><link>https://wiki.deimos.fr/Cpulimit:_limit_CPU_usage/</link><pubDate>Mon, 06 May 2013 13:13:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cpulimit:_limit_CPU_usage/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Software version&lt;/td>
 &lt;td>1.7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Operating System&lt;/td>
 &lt;td>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Website&lt;/td>
 &lt;td>&lt;a href="https://github.com/opsengine/cpulimit" rel="external" target="_blank">Cpulimit Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Last Update&lt;/td>
 &lt;td>06/05/2013&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Cpulimit&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> is a tool which limits the CPU usage of a process (expressed in percentage, not in CPU time). It is useful to control batch jobs, when you don&amp;rsquo;t want them to eat too many CPU cycles. The goal is prevent a process from running for more than a specified time ratio. It does not change the nice value or other scheduling priority settings, but the real CPU usage. Also, it is able to adapt itself to the overall system load, dynamically and quickly.&lt;/p></description></item><item><title>How to Check the Number of Active CPU Cores on Solaris</title><link>https://wiki.deimos.fr/Connaitre_le_nombre_de_cores_CPU_actifs_sur_Solaris/</link><pubDate>Mon, 06 Feb 2012 10:10:00 +0200</pubDate><guid>https://wiki.deimos.fr/Connaitre_le_nombre_de_cores_CPU_actifs_sur_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On certain machines (especially HP), it&amp;rsquo;s very practical for licensing issues to be able to limit the number of cores. Afterwards, it&amp;rsquo;s important to verify that the state is what you expect.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To get the list of active cores:&lt;/p>



 
 
 

 
 
 
 
 
 
 
 

 
 

 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 

 
 

 &lt;div class="prism-codeblock hl_lines linenos">
 &lt;pre id="7f00d31" class="language-bash line-numbers" data-line="2,4" data-line-offset="1">
 &lt;code>&amp;gt; psrinfo -pv
The physical processor has 1 virtual processor (0) x86 (chipid 0x0 GenuineIntel family 6 model 44 step 2 clock 2800 MHz)
 Intel(r) Xeon(r) CPU X5660 @ 2.80GHz
The physical processor has 1 virtual processor (1) x86 (chipid 0x1 GenuineIntel family 6 model 44 step 2 clock 2800 MHz)
 Intel(r) Xeon(r) CPU X5660 @ 2.80GHz&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Here we can see that I only have one virtual CPU per processor (so 2 total).&lt;/p></description></item><item><title>Monitoring CPU Temperature on FreeBSD</title><link>https://wiki.deimos.fr/Monitorer_la_temperature_des_processeurs_sous_FreeBSD/</link><pubDate>Sun, 12 Sep 2010 06:29:00 +0200</pubDate><guid>https://wiki.deimos.fr/Monitorer_la_temperature_des_processeurs_sous_FreeBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s how to monitor the temperature of all your CPU cores on FreeBSD.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Fortunately, there&amp;rsquo;s nothing to install. We&amp;rsquo;ll simply load the temperature module:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9db2712" class="language-bash ">
 &lt;code>kldload coretemp&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If you want to enable it each time your machine boots:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="67000ed" class="language-bash ">
 &lt;code># /boot/loader.conf
coretemp_load=&amp;#34;YES&amp;#34;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>PS: For AMD users, there are also the k8temp and amdtemp modules available.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Now, you can easily check your temperatures:&lt;/p></description></item><item><title>Freeze a Machine by CPU Overload</title><link>https://wiki.deimos.fr/Faire_freezer_une_machine_par_overload_CPU/</link><pubDate>Sun, 20 Sep 2009 15:41:00 +0200</pubDate><guid>https://wiki.deimos.fr/Faire_freezer_une_machine_par_overload_CPU/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is a solution to max out your CPU so much that your machine will freeze.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Simply run this in a terminal:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c588ae8" class="language-bash ">
 &lt;code>:(){ :|:&amp;amp; };:&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>Modifying CPU Frequency</title><link>https://wiki.deimos.fr/Modifier_la_fr%C3%A9quence_de_son_processeur/</link><pubDate>Sun, 02 Aug 2009 15:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Modifier_la_fr%C3%A9quence_de_son_processeur/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>So, you have an irritatingly loud CPU fan which is making you consider whether or not launching your laptop through the nearest window is a good idea. And you want to save the planet too! Well, before you do that, why not give CPU frequency scaling a go. Look at laptop mode!&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You&amp;rsquo;ll need to install the package:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="4636d00" class="language-bash ">
 &lt;code>apt-get install laptop-mode-tools&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If you&amp;rsquo;re on ubuntu, you can look at &lt;strong>ubuntu-laptop-mode package&lt;/strong>.&lt;/p></description></item><item><title>How to Determine Your System Architecture</title><link>https://wiki.deimos.fr/Connaitre_son_architecture/</link><pubDate>Wed, 08 Aug 2007 12:30:00 +0200</pubDate><guid>https://wiki.deimos.fr/Connaitre_son_architecture/</guid><description>&lt;p>Here&amp;rsquo;s a simple but very useful trick. The &lt;code>isainfo&lt;/code> command allows you to determine the architecture of a machine:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="190584a" class="language-bash ">
 &lt;code>$ isainfo -v
64-bit amd64 applications
 pause sse2 sse fxsr amd_3dnowx amd_3dnow amd_mmx mmx cmov amd_sysc cx8 
 tsc fpu 
32-bit i386 applications
 pause sse2 sse fxsr amd_3dnowx amd_3dnow amd_mmx mmx cmov amd_sysc cx8 
 tsc fpu&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>I can see here that my system is 64-bit and also has compatibility for 32-bit applications.&lt;/p></description></item></channel></rss>