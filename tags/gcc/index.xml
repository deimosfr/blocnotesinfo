<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gcc on Tech Notebook</title><link>https://wiki.deimos.fr/tags/gcc/</link><description>Recent content in Gcc on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 May 2025 20:33:41 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/gcc/index.xml" rel="self" type="application/rss+xml"/><item><title>Better Understanding and Using the C Language Preprocessor</title><link>https://wiki.deimos.fr/Mieux_conna%C3%AEtre_et_utiliser_le_pr%C3%A9processeur_du_langage_C/</link><pubDate>Sun, 06 Dec 2009 15:40:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mieux_conna%C3%AEtre_et_utiliser_le_pr%C3%A9processeur_du_langage_C/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>In the C language, preprocessing is the preliminary stage before compilation. It&amp;rsquo;s a powerful mechanism that allows conditional compilation, file inclusion, and macro definition. Although these features appear simple at first glance, they must be used carefully to avoid compilation errors or, worse, program malfunctions. Additionally, the GCC preprocessor has additional features that can be very useful.&lt;/p>
&lt;h2 id="a-little-known-compiler-failure">A Little-Known Compiler Failure &lt;a href="#a-little-known-compiler-failure" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Thanks to the C macro processor, it&amp;rsquo;s possible to define and use constants as follows:&lt;/p></description></item><item><title>Compiling with GCC on Multiple Architectures (e.g., PPC and Intel)</title><link>https://wiki.deimos.fr/Compiler_avec_gcc_sur_plusieurs_architectures_(ex:_PPC_et_Intel)/</link><pubDate>Thu, 12 Jul 2007 07:20:00 +0200</pubDate><guid>https://wiki.deimos.fr/Compiler_avec_gcc_sur_plusieurs_architectures_(ex:_PPC_et_Intel)/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This type of compilation happens in two phases. The first phase is to compile separately for Intel and PPC architectures. The second phase is to create a binary that combines both architecture binaries.&lt;/p>
&lt;h2 id="creating-binaries-for-different-architectures">Creating Binaries for Different Architectures &lt;a href="#creating-binaries-for-different-architectures" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On Intel, I can compile with gcc like this:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e06f246" class="language-bash ">
 &lt;code>gcc -arch ppc -isysroot /Developer/SDKs/MacOSX10.4u.sdk prog.c&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>For the Makefile, edit it and look for the following options to specify the architecture:&lt;/p></description></item><item><title>Failed Compilations</title><link>https://wiki.deimos.fr/Compilations_foireuses/</link><pubDate>Sat, 05 Aug 2006 19:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/Compilations_foireuses/</guid><description>&lt;p>Another failed compilation? As usual, you&amp;rsquo;re missing a library. I&amp;rsquo;ve listed here the minimum packages you should have to avoid problems.&lt;/p>
&lt;p>If you get a message like this during compilation:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1739999" class="language-bash ">
 &lt;code>checking for C compiler default output... configure: error: C compiler cannot create executables&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>This is typically the kind of error you might encounter. Install the following packages:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="29ee5f8" class="language-bash ">
 &lt;code>gcc libc6 libc6-dev make autoconf&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Also consider:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="fe06264" class="language-bash ">
 &lt;code>glibc2 glibc2-dev&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>For Debian users like me:&lt;/p></description></item></channel></rss>