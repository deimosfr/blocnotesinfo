<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>System Administration on Tech Notebook</title><link>https://wiki.deimos.fr/tags/system-administration/</link><description>Recent content in System Administration on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 28 Apr 2025 18:51:06 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/system-administration/index.xml" rel="self" type="application/rss+xml"/><item><title>Nagios: Installation and Configuration</title><link>https://wiki.deimos.fr/Nagios_:_Installation_et_configuration/</link><pubDate>Mon, 08 Sep 2014 05:57:00 +0200</pubDate><guid>https://wiki.deimos.fr/Nagios_:_Installation_et_configuration/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/nagios_logo.png" alt="Nagios" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>Nagios 3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>08/09/2014&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Nagios is a very powerful tool that allows you to test various services such as SMTP, PING, and many other things through plugins. It enables you to know if your platforms are still operational.&lt;/p>
&lt;p>In short, it can alert you in different ways. Try it, you&amp;rsquo;ll see, it&amp;rsquo;s magical :-)&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The installation is quite simple:&lt;/p></description></item><item><title>FreeBSD Package System</title><link>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_FreeBSD/</link><pubDate>Fri, 18 Jul 2014 19:39:00 +0200</pubDate><guid>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_FreeBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>FreeBSD is one of the most widely used BSD distributions for servers as it is very up-to-date and offers a very comprehensive port system (more than 16,000 ports available). Additionally, it integrates advanced functions at the source level.&lt;/p>
&lt;p>This allows you, for example, to modify parameters to best adapt to your needs, similar to Gentoo.&lt;/p>
&lt;h2 id="precompiled-packages">Precompiled Packages &lt;a href="#precompiled-packages" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="new-method">New Method &lt;a href="#new-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>The latest method involves using pkgng. To set it up, you need to convert the current database:&lt;/p></description></item><item><title>WinDbg: Analyze Crash Dump</title><link>https://wiki.deimos.fr/WinDbg:_analyze_crash_dump/</link><pubDate>Sun, 16 Feb 2014 07:25:00 +0200</pubDate><guid>https://wiki.deimos.fr/WinDbg:_analyze_crash_dump/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/windbg_icon.gif" alt="WinDbg" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Windows 2008 R2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>16/02/2014&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>WinDbg is a multipurpose debugger for Microsoft Windows, distributed on the web by Microsoft. It can be used to debug user mode applications, drivers, and the operating system itself in kernel mode. It is a GUI application, but it has little in common with the more well-known, but less powerful, Visual Studio Debugger.&lt;/p>
&lt;p>WinDbg can be used for debugging kernel-mode memory dumps, created after what is commonly called the Blue Screen of Death which occurs when a bug check is issued. It can also be used to debug user-mode crash dumps. This is known as post-mortem debugging.&lt;/p></description></item><item><title>Cpulimit: Limit CPU Usage</title><link>https://wiki.deimos.fr/Cpulimit:_limit_CPU_usage/</link><pubDate>Mon, 06 May 2013 13:13:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cpulimit:_limit_CPU_usage/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Software version&lt;/td>
 &lt;td>1.7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Operating System&lt;/td>
 &lt;td>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Website&lt;/td>
 &lt;td>&lt;a href="https://github.com/opsengine/cpulimit" rel="external" target="_blank">Cpulimit Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Last Update&lt;/td>
 &lt;td>06/05/2013&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Cpulimit&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> is a tool which limits the CPU usage of a process (expressed in percentage, not in CPU time). It is useful to control batch jobs, when you don&amp;rsquo;t want them to eat too many CPU cycles. The goal is prevent a process from running for more than a specified time ratio. It does not change the nice value or other scheduling priority settings, but the real CPU usage. Also, it is able to adapt itself to the overall system load, dynamically and quickly.&lt;/p></description></item><item><title>Lshell: Limiting Shell Capabilities</title><link>https://wiki.deimos.fr/Lshell_:_limiter_les_possibilit%C3%A9s_du_shell/</link><pubDate>Thu, 28 Mar 2013 10:15:00 +0200</pubDate><guid>https://wiki.deimos.fr/Lshell_:_limiter_les_possibilit%C3%A9s_du_shell/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://lshell.ghantoos.org/" rel="external" target="_blank">Lshell&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is a lightweight shell that allows restricting access to various commands and paths on your filesystems. It&amp;rsquo;s ideal for controlling what users can do on your machine.&lt;/p></description></item><item><title>Memory Caches</title><link>https://wiki.deimos.fr/Les_caches_m%C3%A9moire/</link><pubDate>Wed, 12 Sep 2012 16:58:00 +0200</pubDate><guid>https://wiki.deimos.fr/Les_caches_m%C3%A9moire/</guid><description>&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>Kernel 2.6.32+&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Red Hat 6.3&lt;br />Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.kernel.org" rel="external" target="_blank">Kernel Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>12/09/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="page-allocation">Page Allocation &lt;a href="#page-allocation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Delaying memory allocation when a process requests it is good for performance. Due to reference locality, most programs that request large memory allocations don&amp;rsquo;t allocate all of it at once. For program memory allocation, it will be done gradually to avoid using more than necessary.&lt;/p></description></item><item><title>Memory Addressing and Allocation</title><link>https://wiki.deimos.fr/L%27adressage_m%C3%A9moire_et_son_allocation/</link><pubDate>Tue, 11 Sep 2012 16:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/L%27adressage_m%C3%A9moire_et_son_allocation/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/poweredbylinux.jpg" alt="Linux" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>Kernel 2.6.32+&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Red Hat 6.3&lt;br />Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.kernel.org" rel="external" target="_blank">Kernel Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>11/09/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="memory-addressing">Memory Addressing &lt;a href="#memory-addressing" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For better efficiency, a computer&amp;rsquo;s memory is divided into blocks (chunks) called pages. Page size may vary depending on the processor architecture (32 or 64 bits). RAM is divided into page frames. One page frame can contain one page. When a process wants to access a memory address, a translation from the page to the page frame must be performed. If this information is not already in memory, the kernel must perform a search to manually load this page into the page frame.&lt;/p></description></item><item><title>Checking File Integrity on Debian</title><link>https://wiki.deimos.fr/V%C3%A9rifier_l%27int%C3%A9grit%C3%A9_des_fichiers_sur_sa_Debian/</link><pubDate>Wed, 29 Aug 2012 12:02:00 +0200</pubDate><guid>https://wiki.deimos.fr/V%C3%A9rifier_l%27int%C3%A9grit%C3%A9_des_fichiers_sur_sa_Debian/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/debian_logo.png" alt="Debian" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.debian.org" rel="external" target="_blank">Debian&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>29/08/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For some context, I had a former colleague who found himself working in a company with many compromised servers that had been owned for years with no immediate possibility of replacing them. Knowing that binaries had been modified, he had to verify the integrity of all systems. For this purpose, he created a small script to check everything.&lt;/p></description></item><item><title>Udev: Using a Socket to Communicate with Kernel Devices</title><link>https://wiki.deimos.fr/Udev_:_Utilisation_d'un_socket_pour_parler_avec_les_devices_kernel/</link><pubDate>Thu, 05 Jul 2012 09:33:00 +0200</pubDate><guid>https://wiki.deimos.fr/Udev_:_Utilisation_d'un_socket_pour_parler_avec_les_devices_kernel/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>udev is a device manager that replaces devfs on Linux kernels series 2.6. Its main function is to manage devices in the &lt;code>/dev&lt;/code> directory.&lt;/p>
&lt;p>udev runs in user mode and communicates with hotplug which runs in kernel mode. It uses and stores information it has discovered in &lt;code>/sys&lt;/code>. When hardware is detected, udev can assign a device name, create symbolic links, or execute a program when an action occurs on one or more devices.&lt;/p></description></item><item><title>Ulimit: Using System Limits</title><link>https://wiki.deimos.fr/Ulimit_:_Utiliser_les_limites_syst%C3%A8mes/</link><pubDate>Tue, 03 Jul 2012 10:08:00 +0200</pubDate><guid>https://wiki.deimos.fr/Ulimit_:_Utiliser_les_limites_syst%C3%A8mes/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The ulimit programs allow to limit system-wide resource use using a normal configuration file - &lt;code>/etc/security/limits.conf&lt;/code>. This can help a lot in system administration, e.g. when a user starts too many processes and therefore makes the system unresponsive for other users.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="linux">Linux &lt;a href="#linux" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="cc48f25" class="language-bash ">
 &lt;code>ulimit -a&lt;/code>
 &lt;/pre>
 &lt;/div>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="0ece5e8" class="language- ">
 &lt;code>core file size (blocks, -c) 0
data seg size (kbytes, -d) unlimited
scheduling priority (-e) 0
file size (blocks, -f) unlimited
pending signals (-i) 7671
max locked memory (kbytes, -l) 64
max memory size (kbytes, -m) 811664
open files (-n) 1024
pipe size (512 bytes, -p) 8
POSIX message queues (bytes, -q) 819200
real-time priority (-r) 0
stack size (kbytes, -s) 8192
cpu time (seconds, -t) unlimited
max user processes (-u) 7671
virtual memory (kbytes, -v) 1175120
file locks (-x) unlimited&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>All these settings can be manipulated. A good example is this forkbomb that forks as many processes as possible and can crash systems where no user limits are set&lt;/p></description></item><item><title>IP: Network Interface Management Command</title><link>https://wiki.deimos.fr/IP_:_La_commande_de_gestion_de_sa_carte_r%C3%A9seau/</link><pubDate>Thu, 03 May 2012 14:47:00 +0200</pubDate><guid>https://wiki.deimos.fr/IP_:_La_commande_de_gestion_de_sa_carte_r%C3%A9seau/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The &amp;ldquo;ip&amp;rdquo; command is gradually replacing the ifconfig command due to its enhanced functionality. With the arrival of RHEL6, this transition is becoming more evident. In this article, we&amp;rsquo;ll see how to use this command effectively.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>View the status of all interfaces:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="ec3625c" class="language-bash ">
 &lt;code>&amp;gt; ip link show
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 16436 qdisc noqueue state UNKNOWN 
 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
 link/ether 08:00:27:9a:b6:35 brd ff:ff:ff:ff:ff:ff&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>View the status of a specific interface (eth0 in this case):&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="39e4508" class="language-bash ">
 &lt;code>&amp;gt; ip link show eth0
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
 link/ether 08:00:27:9a:b6:35 brd ff:ff:ff:ff:ff:ff&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>View the status of a specific interface (eth0) with IPv4 information only (-4):&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="092047b" class="language-bash ">
 &lt;code>&amp;gt; ip -4 addr show eth0
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
 inet 10.0.1.9/24 brd 10.0.1.255 scope global eth0&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>View detailed statistics for interface eth0:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="37ec870" class="language-bash ">
 &lt;code>&amp;gt; ip -s link show eth0
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
 link/ether 08:00:27:9a:b6:35 brd ff:ff:ff:ff:ff:ff
 RX: bytes packets errors dropped overrun mcast 
 28627 284 0 0 0 0 
 TX: bytes packets errors dropped carrier collsns 
 40732 128 0 0 0 0&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Create a virtual IP address (VIP):&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="fde3678" class="language-bash ">
 &lt;code>ip addr add 192.168.0.1/24 dev eth0 label eth0:0&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Remove a virtual IP address (VIP):&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3642396" class="language-bash ">
 &lt;code>ip addr del 192.168.0.1/24 dev eth0&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Add a VLAN and VIP on the VLAN (VLAN 90 on bond0):&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="2b00ea7" class="language-bash ">
 &lt;code>ip link add link bond0 name bond0:90 type vlan id 90
ip link set dev bond0:90 up
ip addr add 192.168.0.1/24 dev bond0:90&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>Kexec: Optimize Your Boot Times</title><link>https://wiki.deimos.fr/Kexec_:_optimisez_vos_temps_de_boot/</link><pubDate>Thu, 15 Mar 2012 13:41:00 +0200</pubDate><guid>https://wiki.deimos.fr/Kexec_:_optimisez_vos_temps_de_boot/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Kexec is a tool that allows rebooting a machine without going through the hardware layer. It will stop all services, shut down the init processes (sysV) to reach the bootloader. Then it will start normally, bypassing the hardware reboot phase.&lt;/p>
&lt;p>This technique can be very useful on High Availability systems where downtime is critical.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="debian">Debian &lt;a href="#debian" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>On Debian, you need to install this package:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="bf4f5b1" class="language-bash ">
 &lt;code>aptitude install kexec-tools&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="red-hat">Red Hat &lt;a href="#red-hat" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>On Red Hat, you need to have this package installed:&lt;/p></description></item><item><title>Tmpfs: Mounting a RAM filesystem on Solaris</title><link>https://wiki.deimos.fr/Tmpfs_:_monter_un_filesystem_en_RAM_sous_Solaris/</link><pubDate>Sun, 19 Feb 2012 09:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Tmpfs_:_monter_un_filesystem_en_RAM_sous_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>TmpFS (Temporary File System) is the generic name given to any temporary Unix file system. Any file created in such a filesystem disappears when the system is shut down.&lt;/p>
&lt;p>The default implementation of tmpfs in Linux 2.6.x kernels is based on ramfs, which uses the caching mechanism to optimize memory management.
It is also available on Solaris 10.&lt;/p>
&lt;p>However, tmpfs additionally offers a memory size limit that is set at mount time and can be modified on-the-fly with the &amp;ldquo;remount&amp;rdquo; option for security purposes. Tmpfs also allows the system to use swap space when necessary, which provides an additional guarantee.&lt;/p></description></item><item><title>Solaris Package Management</title><link>https://wiki.deimos.fr/Gestion_des_packages_Solaris/</link><pubDate>Wed, 15 Feb 2012 18:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/Gestion_des_packages_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Packages, like in all distributions, are a simple way to install software. Here we will examine all the ways to manage these packages.&lt;/p>
&lt;h2 id="locations">Locations &lt;a href="#locations" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To find out what is installed on your system, simply look at the &lt;code>/var/sadm/install/contents&lt;/code> file:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="fab774b" class="language-bash ">
 &lt;code>more /var/sadm/install/contents&lt;/code>
 &lt;/pre>
 &lt;/div>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7668fbe" class="language- ">
 &lt;code>(output edited for brevity)
/bin=./usr/bin s none SUNWcsr
/dev d none 0755 root sys SUNWcsr SUNWcsd
/dev/allkmem=../devices/pseudo/mm@0:allkmem s none SUNWcsd
/dev/arp=../devices/pseudo/arp@0:arp s none SUNWcsd
/etc/ftpd/ftpusers e ftpusers 0644 root sys 198 16387 1094222536 SUNWftpr
/etc/passwd e passwd 0644 root sys 580 48298 1094222123 SUNWcsr&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To find where a specific software is installed on the system, you can do this:&lt;/p></description></item><item><title>Restore permissions on Red Hat</title><link>https://wiki.deimos.fr/Restaurer_les_permissions_d%5C%27une_Red_Hat/</link><pubDate>Sat, 04 Feb 2012 17:50:00 +0200</pubDate><guid>https://wiki.deimos.fr/Restaurer_les_permissions_d%5C%27une_Red_Hat/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>A colleague of mine made a serious mistake (running &lt;code>chown -Rf mysql&lt;/code> on &lt;code>/&lt;/code>!). This caused a huge mess, and we had to find a solution to restore the correct permissions.&lt;/p>
&lt;p>Fortunately, Red Hat anticipated these kinds of errors and included the &lt;code>--setperms&lt;/code> and &lt;code>--setugids&lt;/code> options in the &lt;code>rpm&lt;/code> command to repair permissions on installed packages. Basically, this gives you a way to repair your machine.&lt;/p>
&lt;p>So if you also made a mistake like this, know that there is a solution on Red Hat.&lt;/p></description></item><item><title>Adding Swap Space on Solaris</title><link>https://wiki.deimos.fr/ajout-de-swap-sous-solaris/</link><pubDate>Mon, 30 Jan 2012 12:09:00 +0200</pubDate><guid>https://wiki.deimos.fr/ajout-de-swap-sous-solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The purpose of this documentation is to quickly describe how to create swap space on Solaris. There are other documentation sources such as &lt;a href="https://wiki.deimos.fr/Management_des_disques_sous_Solaris/">Disk Management in Solaris&lt;/a> that describe in depth how disks work on Solaris, but that&amp;rsquo;s not the goal here.&lt;/p>
&lt;p>We&amp;rsquo;ll look at three methods to add swap space:&lt;/p>
&lt;ul>
&lt;li>On UFS&lt;/li>
&lt;li>On ZFS&lt;/li>
&lt;li>Using a swap file&lt;/li>
&lt;/ul>
&lt;h2 id="swap-on-ufs">Swap on UFS &lt;a href="#swap-on-ufs" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If you want to add swap space on a UFS disk, you&amp;rsquo;ll need to create a partition. Let&amp;rsquo;s first see what we have:&lt;/p></description></item><item><title>VServer: Setting Up VServer</title><link>https://wiki.deimos.fr/VServer_:_Mise_en_place_de_VServer/</link><pubDate>Tue, 24 May 2011 16:43:00 +0200</pubDate><guid>https://wiki.deimos.fr/VServer_:_Mise_en_place_de_VServer/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Linux-VServer is a security context isolator combined with segmented routing, chroot, extended quotas, and other standard tools.&lt;/p>
&lt;p>Initially launched by Jacques Gélinas as the CTX patch, Linux-VServer consists of a patch for the Linux kernel that allows multiple applications to run in different security contexts on the same host machine. Linux-VServer is also equipped with a set of tools to install/manage these contexts.&lt;/p>
&lt;p>This project allows one or more operating environments (operating systems without the kernel) to run on a distribution, meaning you can run one or more distributions on a single distribution.&lt;/p></description></item><item><title>The find command or the power of search</title><link>https://wiki.deimos.fr/La_commande_find_ou_la_puissance_de_la_recherche/</link><pubDate>Wed, 09 Feb 2011 14:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/La_commande_find_ou_la_puissance_de_la_recherche/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The find command is one of the most effective advanced commands in system administration—it requires administrator privileges.&lt;/p>
&lt;p>The find command is an extremely powerful tool with about fifty options, allowing searches defined according to very fine criteria: files, directories, symbolic links&amp;hellip; based on the name (case-sensitive or not), according to the owner, size, date, etc., in a single or multiple filesystem! It&amp;rsquo;s worth adding that its options are defined according to two categories: selection and execution. This gives you an idea of the full extent of this command&amp;rsquo;s power.&lt;/p></description></item><item><title>Monitoring CPU Temperature on FreeBSD</title><link>https://wiki.deimos.fr/Monitorer_la_temperature_des_processeurs_sous_FreeBSD/</link><pubDate>Sun, 12 Sep 2010 06:29:00 +0200</pubDate><guid>https://wiki.deimos.fr/Monitorer_la_temperature_des_processeurs_sous_FreeBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s how to monitor the temperature of all your CPU cores on FreeBSD.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Fortunately, there&amp;rsquo;s nothing to install. We&amp;rsquo;ll simply load the temperature module:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9db2712" class="language-bash ">
 &lt;code>kldload coretemp&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If you want to enable it each time your machine boots:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="67000ed" class="language-bash ">
 &lt;code># /boot/loader.conf
coretemp_load=&amp;#34;YES&amp;#34;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>PS: For AMD users, there are also the k8temp and amdtemp modules available.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Now, you can easily check your temperatures:&lt;/p></description></item><item><title>Managing Solaris Processes</title><link>https://wiki.deimos.fr/Manager_les_processes_Solaris/</link><pubDate>Mon, 12 Apr 2010 09:52:00 +0200</pubDate><guid>https://wiki.deimos.fr/Manager_les_processes_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>A process is any program that is running on the system. All processes are assigned a unique process identification (PID) number, which is used by the kernel to track and manage the process. The PID numbers are used by the root and regular users to identify and control their processes.&lt;/p>
&lt;h2 id="prstat">prstat &lt;a href="#prstat" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The prstat command examines and displays information about active processes on the system.&lt;/p>
&lt;p>This command enables you to view information by specific processes, user identification (UID) numbers, central processing unit (CPU) IDs, or processor sets. By default, the prstat command displays information about all processes sorted by CPU usage. To use the prstat command, perform the command:&lt;/p></description></item><item><title>CUPS: Setting Up a Print Server</title><link>https://wiki.deimos.fr/Cups_:_mise_en_place_d'un_serveur_d'impression/</link><pubDate>Thu, 01 Apr 2010 12:58:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cups_:_mise_en_place_d'un_serveur_d'impression/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The &lt;a href="https://fr.wikipedia.org/wiki/Cups" rel="external" target="_blank">Common Unix Printing System (CUPS)&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is a modular printing system for Unix and Unix-like operating systems. Any computer using CUPS can act as a print server; it can accept documents sent from other machines (client computers), process them, and send them to the appropriate printer.&lt;/p></description></item><item><title>Changing Solaris Locales</title><link>https://wiki.deimos.fr/Changer_les_locales_de_Solaris/</link><pubDate>Mon, 08 Feb 2010 16:22:00 +0200</pubDate><guid>https://wiki.deimos.fr/Changer_les_locales_de_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You may encounter messages like &amp;ldquo;couldn&amp;rsquo;t set locale correctly&amp;rdquo; which can quickly become annoying to see in the display.&lt;/p>
&lt;h2 id="problem-explanation">Problem Explanation &lt;a href="#problem-explanation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This occurs because the locales installed on the machine do not match those in your shell&amp;rsquo;s environment variables.&lt;/p>
&lt;p>To see what you have in your shell:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3776f44" class="language-bash ">
 &lt;code>&amp;gt; env &lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And to see what&amp;rsquo;s available on the system, it&amp;rsquo;s just as simple:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1b0ecce" class="language-bash ">
 &lt;code>&amp;gt; ls /usr/lib/locale
C&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="solution">Solution &lt;a href="#solution" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For my part, I live in France, so I need the locales for my country. I&amp;rsquo;m going to install the Western European locales. For this, you&amp;rsquo;ll need the Solaris DVD in the drive:&lt;/p></description></item><item><title>SMF: Service Management Facility</title><link>https://wiki.deimos.fr/SMF_:_Service_Management_Facility/</link><pubDate>Wed, 03 Feb 2010 21:43:00 +0200</pubDate><guid>https://wiki.deimos.fr/SMF_:_Service_Management_Facility/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>SMF services are listed by categories:&lt;/p>
&lt;ul>
&lt;li>application&lt;/li>
&lt;li>device&lt;/li>
&lt;li>legacy&lt;/li>
&lt;li>milestone&lt;/li>
&lt;li>network&lt;/li>
&lt;li>platform&lt;/li>
&lt;li>site&lt;/li>
&lt;li>system&lt;/li>
&lt;/ul>
&lt;p>Example:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c087bf0" class="language- ">
 &lt;code>svc:/system/filesystem/root:default&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>The prefix svc indicates that it&amp;rsquo;s a service managed by SMF&lt;/li>
&lt;li>The category of the service is &amp;ldquo;system&amp;rdquo;&lt;/li>
&lt;li>The service itself is a filesystem&lt;/li>
&lt;li>The instance of the service is the root of the file system&lt;/li>
&lt;li>The word &amp;ldquo;default&amp;rdquo; identifies the first, in this case only, instance of the service&lt;/li>
&lt;/ul>
&lt;p>Another example:&lt;/p></description></item><item><title>Task Scheduling</title><link>https://wiki.deimos.fr/Planifier_des_t%C3%A2ches/</link><pubDate>Fri, 11 Dec 2009 20:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Planifier_des_t%C3%A2ches/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Use the at command to automatically execute a job only once at a specified time.&lt;/p>
&lt;h2 id="at">at &lt;a href="#at" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The format for the at command is:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="094002e" class="language-bash ">
 &lt;code>at -m -q queuename time date
at -r job
at -l&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>The table shows the options you can use to instruct the cron process on how to execute an at job.&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>Option&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>-m&lt;/td>
 &lt;td>Sends mail to the user after the job has finished&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>-r job&lt;/td>
 &lt;td>Removes a scheduled at job from the queue&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>-q queuename&lt;/td>
 &lt;td>Specifies a specific queue&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>time&lt;/td>
 &lt;td>Specifies a time for the command to execute&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>-l&lt;/td>
 &lt;td>Reports all jobs scheduled for the invoking user&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>date&lt;/td>
 &lt;td>Specifies an optional date for the command to execute, which is either a month name followed by a day number or a day of the week&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;p>For example, to create an at job to run at 9:00 p.m. to locate and verify the file type of core files from the &lt;code>/export/home&lt;/code> directory, perform the command:&lt;/p></description></item><item><title>Managing Updates with Update Manager and smpatch</title><link>https://wiki.deimos.fr/G%C3%A9rer_ses_updates_avec_Update_Manager_et_smpatch/</link><pubDate>Sat, 21 Nov 2009 07:11:00 +0200</pubDate><guid>https://wiki.deimos.fr/G%C3%A9rer_ses_updates_avec_Update_Manager_et_smpatch/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>As I love Debian and some of my servers are running on Solaris, I had to get in touch with Solaris update solutions. They have a GUI called Solaris Update Manager and the CLI version called smpatch.&lt;/p>
&lt;p>As it is on servers, I don&amp;rsquo;t have a graphical interface and I need to run updates with command lines. That&amp;rsquo;s what I&amp;rsquo;ll specifically talk about in this documentation. List of interesting binaries:&lt;/p></description></item><item><title>Limiting I/O usage by an application</title><link>https://wiki.deimos.fr/O_par_une_application/</link><pubDate>Thu, 19 Nov 2009 07:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/O_par_une_application/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Want to know why your load average is so high? Run this command to see what processes are on the run queue. Runnable processes have a status of &amp;ldquo;R&amp;rdquo;, and commands waiting on I/O have a status of &amp;ldquo;D&amp;rdquo;.&lt;/p>
&lt;p>Once found, you may need to reduce its I/O requests, so we&amp;rsquo;ll use ionice.&lt;/p>
&lt;h2 id="get-io-apps">Get I/O apps &lt;a href="#get-io-apps" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To get the biggest I/O consuming applications:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="cec5452" class="language-bash ">
 &lt;code>ps -eo stat,pid,user,command &lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>On some older versions of Linux may require -emo instead of -eo.&lt;/p></description></item><item><title>Linux: Launching Daemons at Boot</title><link>https://wiki.deimos.fr/Linux_:_Lancement_des_d%C3%A9mons_au_boot/</link><pubDate>Tue, 05 May 2009 07:11:00 +0200</pubDate><guid>https://wiki.deimos.fr/Linux_:_Lancement_des_d%C3%A9mons_au_boot/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To launch daemons at boot time, you need to act differently depending on the distribution. But before starting, the script must already exist in &lt;code>/etc/init.d&lt;/code>.&lt;/p>
&lt;h2 id="debian">Debian &lt;a href="#debian" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s the command:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="2f59d39" class="language-bash ">
 &lt;code>update-rc.d&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>You can test with the &lt;code>-n&lt;/code> argument:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="b024a83" class="language-bash ">
 &lt;code>update-rc.d -n name_of_service defaults&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Once you&amp;rsquo;re ready, execute:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="533c0de" class="language-bash ">
 &lt;code>update-rc.d name_of_service defaults&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And if you want to remove it:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7b60073" class="language-bash ">
 &lt;code>update-rc.d -f name_of_service remove&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="red-hat">Red Hat &lt;a href="#red-hat" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Run this command:&lt;/p></description></item><item><title>OCS Inventory: Setting up Automatic Network Inventory</title><link>https://wiki.deimos.fr/OCS_Inventory_:_Mise_en_place_d'un_inventaire_de_parc_automatique/</link><pubDate>Tue, 30 Dec 2008 10:08:00 +0200</pubDate><guid>https://wiki.deimos.fr/OCS_Inventory_:_Mise_en_place_d'un_inventaire_de_parc_automatique/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Open Computer and Software Inventory Next Generation is an application designed to help system or network administrators keep track of the network machines&amp;rsquo; configuration and the software installed on them.&lt;/p>
&lt;p>OCS Inventory is also able to detect any active device on the network, such as switches, routers, printers, and other unexpected hardware. For each one, it stores MAC and IP addresses and allows you to classify them.&lt;/p>
&lt;p>If the administration server runs on Linux, and if nmap and smblookup are available, you also have the option to scan an IP or a subnet for detailed information about uninventoried hosts.&lt;/p></description></item><item><title>DTrace: Real-time Problem Detection</title><link>https://wiki.deimos.fr/DTrace_:_d%C3%A9tection_de_probl%C3%A8mes_en_temps_r%C3%A9el/</link><pubDate>Fri, 26 Dec 2008 18:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/DTrace_:_d%C3%A9tection_de_probl%C3%A8mes_en_temps_r%C3%A9el/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://fr.wikipedia.org/wiki/DTrace" rel="external" target="_blank">DTrace&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is a tracing system designed by Sun Microsystems for real-time problem detection at both kernel and application levels. It has been available since November 2003 and was integrated as part of Solaris 10 in January 2005. DTrace is the first component of the OpenSolaris project whose code was released under the Common Development and Distribution License (CDDL).&lt;/p></description></item><item><title>Changing Hostname on Solaris</title><link>https://wiki.deimos.fr/Changer_le_hostname_de_sa_solaris/</link><pubDate>Fri, 05 Dec 2008 14:18:00 +0200</pubDate><guid>https://wiki.deimos.fr/Changer_le_hostname_de_sa_solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>While there are things about Solaris that can be frustrating, this is one aspect where it&amp;rsquo;s impressive! You don&amp;rsquo;t need to restart your machine to change the hostname - it updates live. I have to admit that&amp;rsquo;s pretty cool.&lt;/p>
&lt;h2 id="temporary-method">Temporary Method &lt;a href="#temporary-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s the temporary method (which will be lost after reboot):&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7fd31ba" class="language-bash ">
 &lt;code>hostname machine_name&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And to verify:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="817dad2" class="language-bash ">
 &lt;code>hostname&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="manual-method">Manual Method &lt;a href="#manual-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The method provided here doesn&amp;rsquo;t use any utilities.&lt;/p></description></item><item><title>Pstree: List Processes as a Tree</title><link>https://wiki.deimos.fr/Pstree_:_lister_ses_process_sous_forme_d'arbre/</link><pubDate>Sun, 31 Aug 2008 08:55:00 +0200</pubDate><guid>https://wiki.deimos.fr/Pstree_:_lister_ses_process_sous_forme_d'arbre/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If you&amp;rsquo;re using a system which has a lot of users, and you&amp;rsquo;d like to see who has started a particular script, daemon, or binary, then the pstree utility is very helpful. It draws a tree of all currently running processes - allowing you to see which processes are related.&lt;/p>
&lt;p>In much the same way as the tree command isn&amp;rsquo;t likely to be generally useful, this command might seem a little pointless if you&amp;rsquo;re on a single-user machine, and you essentially start everything yourself. But even so it can be helpful to see where processes have come from.&lt;/p></description></item><item><title>Tenshi: System Log Analysis</title><link>https://wiki.deimos.fr/Tenshi_:_Analyse_des_logs_syst%C3%A8me/</link><pubDate>Fri, 09 May 2008 17:36:00 +0200</pubDate><guid>https://wiki.deimos.fr/Tenshi_:_Analyse_des_logs_syst%C3%A8me/</guid><description>&lt;h2 id="introduction-and-installation">Introduction and Installation &lt;a href="#introduction-and-installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The analysis of log files is a good compromise to the regular absence of consideration in companies for these files that contain crucial information for protecting systems against intrusions performed by hackers within the networks themselves.&lt;/p>
&lt;p>&lt;em>Note: this document was written in 2006; certain versions and configurations of the software used may be different from those mentioned; please refer to the official project sites in case of problems.&lt;/em>&lt;/p></description></item><item><title>PAM (Pluggable Authentication Module): Choosing Authentication Methods</title><link>https://wiki.deimos.fr/PAM_%28Pluggable_Authentification_Module%29_:_Choisir_ses_m%C3%A9thodes_d%27authentifications/</link><pubDate>Sun, 06 Apr 2008 07:42:00 +0200</pubDate><guid>https://wiki.deimos.fr/PAM_%28Pluggable_Authentification_Module%29_:_Choisir_ses_m%C3%A9thodes_d%27authentifications/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>PAM is THE standard authentication system used in Linux. The power of this tool is unlimited, but it&amp;rsquo;s not always well documented which tends to work against it. As an introduction, let&amp;rsquo;s first look at the motivations that led to the creation of PAM. Originally, in Unix (and in early versions of Linux), the file that centralized user management was &lt;code>/etc/passwd&lt;/code>. It contained many sensitive pieces of information, including encrypted passwords. To use a Unix machine, the first thing to do was to authenticate via the login program (the last program launched by init). This program was developed to parse the &lt;code>/etc/passwd&lt;/code> file.&lt;/p></description></item><item><title>Recovering your OpenBSD after a bad manipulation</title><link>https://wiki.deimos.fr/R%C3%A9cup%C3%A9rer_son_OpenBSD_apr%C3%A8s_une_mauvaise_manip/</link><pubDate>Sun, 20 Jan 2008 07:58:00 +0200</pubDate><guid>https://wiki.deimos.fr/R%C3%A9cup%C3%A9rer_son_OpenBSD_apr%C3%A8s_une_mauvaise_manip/</guid><description>&lt;h2 id="1-concrete-case">1. Concrete case &lt;a href="#1-concrete-case" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>While manipulating my external partitions, I accidentally executed:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="bcc0a4a" class="language-bash ">
 &lt;code># rm -fr /dev&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>At boot time I get:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="42151d5" class="language-bash ">
 &lt;code>&amp;#34;/dev/console not found&amp;#34;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>How to fix this problem?&lt;/p>
&lt;h2 id="2-solutions">2. Solutions &lt;a href="#2-solutions" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>
&lt;p>A simple method with minimal manipulation is to boot from a ramdisk (your /bsd.rd file that you should have, or an installation CD) and perform an Upgrade.&lt;/p>
&lt;p>This won&amp;rsquo;t overwrite your configuration files, just the files provided in the base system excluding etc42.tgz and xetc42.tgz.&lt;/p></description></item><item><title>Postsuper: Mass Deletion of Emails in the Queue</title><link>https://wiki.deimos.fr/Postsuper_:_Suppression_massive_de_mails_dans_la_queue/</link><pubDate>Tue, 15 Jan 2008 19:45:00 +0200</pubDate><guid>https://wiki.deimos.fr/Postsuper_:_Suppression_massive_de_mails_dans_la_queue/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Postsuper is a Postfix utility that allows you to delete emails in the queue. I needed it to delete around 40,000 emails that were error messages from the MAILER-DAEMON user, with approximately 300 emails in the batch that needed to be delivered.&lt;/p>
&lt;h2 id="complete-deletion">Complete Deletion &lt;a href="#complete-deletion" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To delete all emails in the queue:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="d763eac" class="language-bash ">
 &lt;code>postsuper -d ALL&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="partial-deletion">Partial Deletion &lt;a href="#partial-deletion" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To delete all emails from the MAILER-DAEMON user, here&amp;rsquo;s the script (replace MAILER-DAEMON with another name if needed):&lt;/p></description></item><item><title>OpenBSD Package System</title><link>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_OpenBSD/</link><pubDate>Tue, 27 Nov 2007 18:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_OpenBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Transitioning to OpenBSD isn&amp;rsquo;t very straightforward when coming from the Linux world (PS: if you&amp;rsquo;re coming from Windows, it&amp;rsquo;s better to stay there or switch to Linux first).&lt;/p>
&lt;p>In OpenBSD, there are two package systems:&lt;/p>
&lt;ul>
&lt;li>The first one is provided by the base OpenBSD system (pkg), containing packages with almost no security vulnerabilities (just a reminder: only 2 vulnerabilities discovered in 10 years). These packages are pre-compiled.&lt;/li>
&lt;li>The second contains many more software applications (port), but according to OpenBSD, they can compromise system stability and security. That said, it&amp;rsquo;s still preferable to use these rather than compiling yourself from various sources since these packages have still been validated by the OpenBSD team. These packages are compiled on demand.&lt;/li>
&lt;/ul>
&lt;h2 id="pgk">PGK &lt;a href="#pgk" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="preparation">Preparation &lt;a href="#preparation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>First, you need to &lt;a href="https://www.openbsd.org/fr/ftp.html" rel="external" target="_blank">choose an FTP server&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> to specify the repository. I chose a French server:&lt;/p></description></item><item><title>Migration: Migrating Linux accounts to BSD</title><link>https://wiki.deimos.fr/Migration_:_Migrer_des_comptes_linux_vers_BSD/</link><pubDate>Fri, 23 Nov 2007 11:16:00 +0200</pubDate><guid>https://wiki.deimos.fr/Migration_:_Migrer_des_comptes_linux_vers_BSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is a solution that allows you to easily migrate Linux accounts to BSD. &lt;strong>The only constraint is that you must not have two identical logins or identifiers after this migration.&lt;/strong>&lt;/p>
&lt;h2 id="linux">Linux &lt;a href="#linux" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Commands to execute (as root) on your Linux machine for exporting:&lt;/p>
&lt;ul>
&lt;li>Gathering data from /etc/passwd and /etc/shadow files:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="0f336fd" class="language-bash ">
 &lt;code>pwunconv&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Transforming the /etc/passwd file to be usable by BSD systems (grep -v &amp;lsquo;root|daemon&amp;rsquo; excludes root and daemon users):&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9d9bba0" class="language-bash ">
 &lt;code>cat /etc/passwd | grep -v &amp;#39;^root\|^daemon&amp;#39; | awk -F: &amp;#39;{printf(&amp;#34;%s:%s:%s:%s::0:0:%s:%s:%s\n&amp;#34;, $1,$2,$3,$4,$5,$6,$7);}&amp;#39; &amp;gt; ~/linux_passwd&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Separate the data from /etc/passwd and /etc/shadow again:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9d952b7" class="language-bash ">
 &lt;code>pwconv&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="bsd">BSD &lt;a href="#bsd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Retrieve the generated file on your BSD system, then for importing:&lt;/p></description></item><item><title>Modifying Your Generic Kernel</title><link>https://wiki.deimos.fr/Modifier_son_kernel_g%C3%A9n%C3%A9rique/</link><pubDate>Tue, 13 Nov 2007 09:15:00 +0200</pubDate><guid>https://wiki.deimos.fr/Modifier_son_kernel_g%C3%A9n%C3%A9rique/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For those coming from the Linux world, they&amp;rsquo;ll find that this is super simple on BSD. In my case, I have a multicore server, and after installing BSD, it only detects one core. It&amp;rsquo;s a shame to run with just one core when you have several. I&amp;rsquo;ll explain here the procedure to switch to multicore, but this works with other kernel modifications as well!&lt;/p>
&lt;h2 id="single-core-to-multicore">Single Core to Multicore &lt;a href="#single-core-to-multicore" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>During installation, you need to select the &amp;ldquo;bsd.mp&amp;rdquo; kernel. When the machine reboots after installation, it boots on the single-core kernel. We will therefore move the current kernel and replace it with the multicore one. To do this, it&amp;rsquo;s very simple:&lt;/p></description></item><item><title>Encrypting Swap Partition</title><link>https://wiki.deimos.fr/Encrypter_sa_swap/</link><pubDate>Wed, 01 Aug 2007 22:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Encrypter_sa_swap/</guid><description>&lt;p>Since OpenBSD 3.7, swap is automatically encrypted. If you&amp;rsquo;re using an earlier version and wish to enable encryption, there are two solutions:&lt;/p>
&lt;h2 id="without-rebooting">Without Rebooting &lt;a href="#without-rebooting" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To enable swap encryption without rebooting, use the following command:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c3166a9" class="language-bash ">
 &lt;code>sysctl -w vm.swapencrypt.enable=1&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="with-rebooting">With Rebooting &lt;a href="#with-rebooting" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To enable swap encryption permanently (requires a reboot), edit the &lt;code>/etc/sysctl.conf&lt;/code> file and uncomment this line:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="2b90011" class="language-bash ">
 &lt;code>vm.swapencrypt.enable=1&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>Monit and Munin: Monitor with Munin and Get Alerts with Monit</title><link>https://wiki.deimos.fr/Monit_et_Munin_:_Surveiller_avec_Munin_et_%C3%AAtre_alert%C3%A9_avec_Monit/</link><pubDate>Sun, 13 May 2007 21:25:00 +0200</pubDate><guid>https://wiki.deimos.fr/Monit_et_Munin_:_Surveiller_avec_Munin_et_%C3%AAtre_alert%C3%A9_avec_Monit/</guid><description>&lt;p>Here is documentation to be alerted in case of problems:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/monitoring_munin_monit.pdf">Monitoring Munin Monit PDF&lt;/a>&lt;/p></description></item><item><title>Jailctl: Creating Chroot Environments (Jails)</title><link>https://wiki.deimos.fr/Jailctl_:_Cr%C3%A9ation_de_chroot_%28jails%29/</link><pubDate>Sun, 15 Apr 2007 21:50:00 +0200</pubDate><guid>https://wiki.deimos.fr/Jailctl_:_Cr%C3%A9ation_de_chroot_%28jails%29/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Jailctl is a shell tool for creating/launching/stopping/updating/backing up/restoring/destroying jails.
By jail, we mean here a &amp;ldquo;virtual server&amp;rdquo; and not simply a method for isolating a service.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s the command to install the package:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="d2382c9" class="language-bash ">
 &lt;code>pkg_add -vr jailctl&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>or&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="6793148" class="language-bash ">
 &lt;code>cd /usr/ports/sysutils/jailctl ; make install clean&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>You need a config file: &lt;code>/usr/local/etc/jails.conf&lt;/code>&lt;/li>
&lt;li>You also need: a directory where the jails will be stored (&lt;code>/data&lt;/code> in this example)&lt;/li>
&lt;li>A runme.sh script provided with jailctl that lives by default in &lt;code>/usr/local/jails/addons/&lt;/code>&lt;/li>
&lt;li>A file dellist4.txt that contains a list of files to delete in the jails because they are not needed (for example commands like mount)&lt;/li>
&lt;li>A file dellist5.txt that contains more files to delete in case jailctl runs on a 5.x or a 6.x (jailctl is indeed compatible with all versions from 4.x to 6.x)&lt;/li>
&lt;li>And finally an etc/ directory with configuration files to install in the new jails (by default, login.conf and make.conf).&lt;/li>
&lt;/ul>
&lt;p>All this lives in &lt;code>/usr/local/jails/addons/&lt;/code> which we will need to move to &lt;code>/data/addons/&lt;/code> in our example.&lt;/p></description></item><item><title>Resize Swap</title><link>https://wiki.deimos.fr/Resizer_sa_swap/</link><pubDate>Mon, 05 Mar 2007 10:40:00 +0200</pubDate><guid>https://wiki.deimos.fr/Resizer_sa_swap/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Sometimes it is necessary to add more swap space after installation. For example, you may upgrade the amount of RAM in your system from 128 MB to 256 MB, but there is only 256 MB of swap space. It might be advantageous to increase the amount of swap space to 512 MB if you perform memory-intense operations or run applications that require a large amount of memory.&lt;/p>
&lt;p>You have three options: create a new swap partition, create a new swap file, or extend swap on an existing LVM2 logical volume. It is recommended that you extend an existing logical volume.&lt;/p></description></item><item><title>Watchdog: Hardware Problem Detection</title><link>https://wiki.deimos.fr/Watchdog_:_d%C3%A9tection_de_probl%C3%A8mes_hardware/</link><pubDate>Sun, 17 Dec 2006 22:29:00 +0200</pubDate><guid>https://wiki.deimos.fr/Watchdog_:_d%C3%A9tection_de_probl%C3%A8mes_hardware/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>In computer hardware, a watchdog is an electronic or software mechanism designed to ensure that an automated system hasn&amp;rsquo;t become stuck at a particular processing step. It&amp;rsquo;s a protection mechanism designed to restart the system if a defined action is not executed within a given time period.&lt;/p>
&lt;p>When implemented in software, it typically consists of a counter that is regularly reset to zero. If the counter exceeds a given value (timeout), then a system reset is triggered. The watchdog often consists of a register that is updated via a regular interrupt. It can also consist of an interrupt routine that must perform certain maintenance tasks before returning control to the main program. If a routine enters an infinite loop, the watchdog counter will no longer be reset to zero, and a reset is ordered. The watchdog also allows a restart if no instruction is provided for this purpose. You simply need to write a value exceeding the counter&amp;rsquo;s capacity directly into the register. The watchdog will then initiate the reset.&lt;/p></description></item><item><title>User Management</title><link>https://wiki.deimos.fr/Gestion_des_utilisateurs/</link><pubDate>Thu, 30 Nov 2006 18:31:00 +0200</pubDate><guid>https://wiki.deimos.fr/Gestion_des_utilisateurs/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here we&amp;rsquo;re going to see how to manage users.&lt;/p>
&lt;h2 id="passwd">passwd &lt;a href="#passwd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Due to the critical nature of the &lt;code>/etc/passwd&lt;/code> file, you should refrain from editing this file directly. Instead, you should use the Solaris Management Console or command-line tools to maintain the file.&lt;/p>
&lt;p>The following is an example of an &lt;code>/etc/passwd&lt;/code> file that contains the default system account entries.&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f0b7a08" class="language-bash ">
 &lt;code>root:x:0:0:Super-User:/:/sbin/sh
daemon:x:1:1::/:
bin:x:2:2::/usr/bin:
sys:x:3:3::/:
adm:x:4:4:Admin:/var/adm:
lp:x:71:8:Line Printer Admin:/usr/spool/lp:
uucp:x:5:5:uucp Admin:/usr/lib/uucp:
nuucp:x:9:9:uucp Admin:/var/spool/uucppublic:/usr/lib/uucp/uucico
smmsp:x:25:25:SendMail Message Submission Program:/:
listen:x:37:4:Network Admin:/usr/net/nls:
gdm:x:50:50:GDM Reserved UID:/:
webservd:x:80:80:WebServer Reserved UID:/:
nobody:x:60001:60001:NFS Anonymous Access User:/:
noaccess:x:60002:60002:No Access User:/:
nobody4:x:65534:65534:SunOS 4.x NFS Anonymous Access User:/:&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Each entry in the &lt;code>/etc/passwd&lt;/code> file contains seven fields. A colon separates each field. The following is the format for an entry:&lt;/p></description></item><item><title>RAM Information</title><link>https://wiki.deimos.fr/Informations_sur_la_m%C3%A9moire_vive/</link><pubDate>Tue, 17 Oct 2006 09:14:00 +0200</pubDate><guid>https://wiki.deimos.fr/Informations_sur_la_m%C3%A9moire_vive/</guid><description>&lt;h2 id="memory-management-overview">Memory Management Overview &lt;a href="#memory-management-overview" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="evidence-of-memory-usage">Evidence of Memory Usage &lt;a href="#evidence-of-memory-usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>When a system has been running for some time, traditional tools like &amp;rsquo;top&amp;rsquo; often report a surprisingly small amount of free memory. For example, after about 3 hours, the machine on which I&amp;rsquo;m writing this shows less than 60 MB of free memory, although I have 512 MB on this system. But where has all this memory gone?&lt;/p>
&lt;p>Most of it is used by the disk cache, which currently occupies around 290 MB. The &lt;em>top&lt;/em> command displays this amount under the &amp;ldquo;cached&amp;rdquo; column. Memory used for the cache is essentially free, in the sense that it can be quickly reclaimed if a running program (or one that has just been launched) needs it.&lt;/p></description></item><item><title>Kernel: Module Compilation</title><link>https://wiki.deimos.fr/Kernel_:_Compilation_des_modules/</link><pubDate>Sun, 27 Aug 2006 22:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/Kernel_:_Compilation_des_modules/</guid><description>&lt;p>Iptables is nowadays the Linux firewall of choice. However, when you&amp;rsquo;re a beginner, it&amp;rsquo;s not always easy to know what each module corresponds to.&lt;/p>
&lt;h2 id="minimum-requirements">Minimum Requirements &lt;a href="#minimum-requirements" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>What do you need to recompile at minimum for the kernel?&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="ef63fda" class="language-bash ">
 &lt;code>CONFIG_PACKET - Direct communication with network interfaces
CONFIG_NETFILTER - Kernel management, necessary for Netfilter
CONFIG_IP_NF_CONNTRACK - Necessary for NAT and Masquerade
CONFIG_IP_NF_NETFILTER - Adds NETFILTER table
CONFIG_IP_NF_IPTABLES - Required for iptables user space utility
CONFIG_IP_NF_MANGLE - Adds MANGLE table
CONFIG_IP_NF_NAT - Adds NAT table&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>&lt;strong>Rule not to add:&lt;/strong>&lt;/p></description></item></channel></rss>