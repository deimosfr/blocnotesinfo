<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Tech Notebook</title><link>https://wiki.deimos.fr/tags/security/</link><description>Recent content in Security on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 May 2025 20:33:41 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Yubikey: Configure Your Yubikey with PAM</title><link>https://wiki.deimos.fr/Yubikey_:_Configure_your_yubikey_with_pam/</link><pubDate>Wed, 22 Apr 2015 16:04:00 +0200</pubDate><guid>https://wiki.deimos.fr/Yubikey_:_Configure_your_yubikey_with_pam/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/yubikey.png" alt="Yubikey" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 7/8&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.yubico.com/" rel="external" target="_blank">Yubikey Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>22/04/2015&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>I&amp;rsquo;ve bought Yubikeys to manage several things. They permit 2 different kinds of authentication per key. The authentication methods are:&lt;/p></description></item><item><title>Create a PKI</title><link>https://wiki.deimos.fr/Create_a_PKI/</link><pubDate>Thu, 26 Feb 2015 06:57:00 +0200</pubDate><guid>https://wiki.deimos.fr/Create_a_PKI/</guid><description>&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Software version&lt;/td>
 &lt;td>1.0.1k&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Operating System&lt;/td>
 &lt;td>8&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Website&lt;/td>
 &lt;td>&lt;a href="https://www.debian.org" rel="external" target="_blank">Debian Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Last Update&lt;/td>
 &lt;td>26/02/2015&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>A public key infrastructure (PKI)&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> is a set of hardware, software, people, policies, and procedures needed to create, manage, distribute, use, store, and revoke digital certificates.&lt;/p></description></item><item><title>Managing SSL Certificates Signed by a Certificate Authority</title><link>https://wiki.deimos.fr/G%C3%A9rer_des_certificats_SSL_sign%C3%A9s_par_une_autorit%C3%A9_de_certification/</link><pubDate>Tue, 17 Feb 2015 03:58:00 +0200</pubDate><guid>https://wiki.deimos.fr/G%C3%A9rer_des_certificats_SSL_sign%C3%A9s_par_une_autorit%C3%A9_de_certification/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/startssl_logo.png" alt="StartSSL Logo" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.startssl.com" rel="external" target="_blank">StartSSL Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>17/02/2015&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Others&lt;/strong>&lt;/td>
 &lt;td>Nginx 1.2.1&lt;br />Lighttpd 1.4.31&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You may need SSL certificates for your company or for personal needs on your website. The drawback of self-generated and self-signed certificates is that the first time you visit your site, you&amp;rsquo;ll get a warning message.&lt;/p></description></item><item><title>MediaWiki: Installation and Configuration</title><link>https://wiki.deimos.fr/MediaWiki:Installation_et_configuration/</link><pubDate>Thu, 27 Nov 2014 07:38:00 +0200</pubDate><guid>https://wiki.deimos.fr/MediaWiki:Installation_et_configuration/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>A wiki is a content management system for websites that allows pages to be freely and equally editable by all authorized visitors. Wikis are used to facilitate collaborative document writing with minimal constraints. The wiki was invented by Ward Cunningham in 1995, for a section of a website on computer programming that he called WikiWikiWeb. The word &amp;ldquo;wiki&amp;rdquo; comes from the Hawaiian term wiki wiki, which means &amp;ldquo;fast&amp;rdquo; or &amp;ldquo;informal&amp;rdquo;. By the mid-2000s, wikis had reached a good level of maturity and are associated with Web 2.0. Created in 2001, Wikipedia has become the world&amp;rsquo;s most visited wiki.&lt;/p></description></item><item><title>Fail2ban: Implementing automated iptables rules to counter bruteforce attacks</title><link>https://wiki.deimos.fr/Fail2ban_:_mise_en_place_de_r%C3%A8gles_automatis%C3%A9es_iptables_pour_contrer_les_attaques_par_bruteforce/</link><pubDate>Fri, 22 Aug 2014 09:12:00 +0200</pubDate><guid>https://wiki.deimos.fr/Fail2ban_:_mise_en_place_de_r%C3%A8gles_automatis%C3%A9es_iptables_pour_contrer_les_attaques_par_bruteforce/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Fail2ban scans log files (e.g. /var/log/apache/error_log) and bans IPs that show malicious signs &amp;ndash; too many password failures, seeking for exploits, etc. Generally Fail2Ban is then used to update firewall rules to reject the IP addresses for a specified amount of time, although any arbitrary other action (e.g. sending an email) could also be configured. Out of the box Fail2Ban comes with filters for various services (apache, courier, ssh, etc).&lt;/p></description></item><item><title>Cron-apt: Automatic Security Updates Installation</title><link>https://wiki.deimos.fr/Cron-apt_:_Installation_des_mises_%C3%A0_jour_de_s%C3%A9curit%C3%A9_automatique/</link><pubDate>Sun, 18 May 2014 11:34:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cron-apt_:_Installation_des_mises_%C3%A0_jour_de_s%C3%A9curit%C3%A9_automatique/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>My goal is to install security updates automatically. Obviously this kind of approach is not really recommended, but on a Debian stable system where only security updates are installed, we minimize the risks.&lt;/p>
&lt;p>So I started looking for a tool to do this kind of thing and found cron-apt.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Simply:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="6af967b" class="language-bash ">
 &lt;code>aptitude install cron-apt&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Now that it&amp;rsquo;s installed, let&amp;rsquo;s create a file that will contain only the Debian security repositories:&lt;/p></description></item><item><title>NAXSI: Integrate a WAF for Nginx</title><link>https://wiki.deimos.fr/NAXSI:_integrate_a_WAF_for_Nginx/</link><pubDate>Thu, 10 Apr 2014 13:26:00 +0200</pubDate><guid>https://wiki.deimos.fr/NAXSI:_integrate_a_WAF_for_Nginx/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/naxsi_logo.png" alt="NAXSI" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>0.50&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://github.com/nbs-system/naxsi" rel="external" target="_blank">NAXSI Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>10/04/2014&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Others&lt;/strong>&lt;/td>
 &lt;td>Dotdeb&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>NAXSI&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> means Nginx Anti Xss &amp;amp; Sql Injection.&lt;/p></description></item><item><title>LUKS: Encrypting Your Partitions</title><link>https://wiki.deimos.fr/Luks_:_Chiffrer_ses_partitions/</link><pubDate>Mon, 23 Dec 2013 21:16:00 +0200</pubDate><guid>https://wiki.deimos.fr/Luks_:_Chiffrer_ses_partitions/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Linux_Unified_Key_Setup" rel="external" target="_blank">LUKS&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is one of the best disk encryption tools for Linux. We&amp;rsquo;ll see here how to use it.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="creating-an-encrypted-partition">Creating an Encrypted Partition &lt;a href="#creating-an-encrypted-partition" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Be aware that if you use an existing partition, all its data will be erased when initializing the encrypted partition. To initialize it (sdb1 for example):&lt;/p></description></item><item><title>OpenSSH: SSH Key Exchange</title><link>https://wiki.deimos.fr/_Echange_de_clefs_SSH/</link><pubDate>Fri, 25 Oct 2013 09:02:00 +0200</pubDate><guid>https://wiki.deimos.fr/_Echange_de_clefs_SSH/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>SSH key exchange is great for logging in without having to type your password. It&amp;rsquo;s also very simple to set up.&lt;/p>
&lt;h2 id="basic">Basic &lt;a href="#basic" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="server">Server &lt;a href="#server" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>On the server, the user account to which the client will connect (for example &lt;strong>root&lt;/strong>) must have the .ssh directory present:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="37cae9e" class="language-bash ">
 &lt;code>mkdir .ssh&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="client">Client &lt;a href="#client" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>On the client, you need to generate a key pair, &lt;strong>unless you already have one (~/.ssh/id_dsa.pub)&lt;/strong>:&lt;/p></description></item><item><title>Foremost: Recover Deleted Data</title><link>https://wiki.deimos.fr/Foremost_:_r%C3%A9cup%C3%A9rer_des_donn%C3%A9es_supprim%C3%A9es/</link><pubDate>Wed, 07 Aug 2013 15:27:00 +0200</pubDate><guid>https://wiki.deimos.fr/Foremost_:_r%C3%A9cup%C3%A9rer_des_donn%C3%A9es_supprim%C3%A9es/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Foremost is a forensics application to recover files based on their headers, footers, and internal data structures. Foremost can work on image files, such as those generated by dd, Safeback, Encase, etc, or directly on a drive. This short article shows how you can use foremost to recover deleted files.&lt;/p>
&lt;p>I do not issue any guarantee that this will work for you!&lt;/p>
&lt;p>Currently foremost can recover the following file types:&lt;/p></description></item><item><title>Unbound: Implementing a Next Generation DNS Server</title><link>https://wiki.deimos.fr/Unbound_:_Mise_en_place_d%27un_serveur_DNS_nouvelle_g%C3%A9n%C3%A9ration/</link><pubDate>Thu, 18 Jul 2013 18:38:00 +0200</pubDate><guid>https://wiki.deimos.fr/Unbound_:_Mise_en_place_d%27un_serveur_DNS_nouvelle_g%C3%A9n%C3%A9ration/</guid><description>&lt;p>Unbound is a next-generation DNS server that provides secure connections between DNS servers. It&amp;rsquo;s also designed for high availability and small usages:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/installing_and_using_the_unbound_name_server.pdf">Documentation on Installing And Using The Unbound Name Server&lt;/a>&lt;/p></description></item><item><title>OpenVPN: Setting up OpenVPN on different platforms</title><link>https://wiki.deimos.fr/OpenVPN_:_Mise_en_place_d%27OpenVPN_sur_diff%C3%A9rentes_plateformes/</link><pubDate>Thu, 30 May 2013 15:26:00 +0200</pubDate><guid>https://wiki.deimos.fr/OpenVPN_:_Mise_en_place_d%27OpenVPN_sur_diff%C3%A9rentes_plateformes/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/openvpn_logo.png" alt="OpenVPN" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>OpenVPN 2.x&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 6&lt;br />OpenBSD 5.9&lt;br />FreeBSD 9&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://openvpn.net/" rel="external" target="_blank">OpenVPN Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>30/05/2013&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>OpenVPN is currently the best solution available for software-based VPN.&lt;/p></description></item><item><title>OpenSSH FAQ</title><link>https://wiki.deimos.fr/FAQ_OpenSSH/</link><pubDate>Wed, 08 May 2013 19:19:00 +0200</pubDate><guid>https://wiki.deimos.fr/FAQ_OpenSSH/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>OpenSSH is not always simple, which is why a small documentation is useful.&lt;/p>
&lt;h2 id="faq">FAQ &lt;a href="#faq" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="fatal-timeout-before-authentication-for-ip">fatal: Timeout before authentication for @ip &lt;a href="#fatal-timeout-before-authentication-for-ip" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Your DNS on your SSH server might not be up to date. Check them.&lt;/p>
&lt;h3 id="some-clients-take-a-long-time-to-connect">Some clients take a long time to connect &lt;a href="#some-clients-take-a-long-time-to-connect" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>On the SSH server, it is very likely that the server is trying to resolve names, which is not always possible or practical. The solution is to disable this (&lt;code>/etc/ssh/sshd_config&lt;/code>):&lt;/p></description></item><item><title>Compile Your PHP Scripts</title><link>https://wiki.deimos.fr/Compiler_vos_scripts_PHP/</link><pubDate>Wed, 08 May 2013 18:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Compiler_vos_scripts_PHP/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/php_icon.png" alt="PHP" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>5.3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.php.net" rel="external" target="_blank">PHP Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>08/05/2013&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Sooner or later, we all face issues related to protecting the fruit of our intellectual labor. Here&amp;rsquo;s a way to protect your precious PHP code and improve the execution time of your PHP scripts.&lt;/p></description></item><item><title>Integrit: Add an integrity control tool on your Debian</title><link>https://wiki.deimos.fr/Integrit_:_Add_an_integrity_control_tool_on_your_Debian/</link><pubDate>Tue, 07 May 2013 14:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/Integrit_:_Add_an_integrity_control_tool_on_your_Debian/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/poweredbylinux.jpg" alt="Integrit" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>4.1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://sourceforge.net/projects/integrit/" rel="external" target="_blank">Integrit Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>07/05/2013&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Integrit&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> is a simple yet secure alternative to products like tripwire. It has a small memory footprint, uses up-to-date cryptographic algorithms, and has features that make sense (like including the MD5 checksum of newly generated databases in the report&lt;/p></description></item><item><title>Installing and Configuring a Primary Bind9 Server (Master)</title><link>https://wiki.deimos.fr/Installation_et_configuration_d'un_serveur_Bind9_primaire_(Master)/</link><pubDate>Tue, 07 May 2013 09:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_et_configuration_d'un_serveur_Bind9_primaire_(Master)/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://www.isc.org/index.pl?/sw/bind/" rel="external" target="_blank">BIND (Berkeley Internet Name Domain)&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is the most widely used DNS server on the Internet, especially on Unix-like systems. It is currently maintained by the Internet Systems Consortium.&lt;/p></description></item><item><title>Basic IPTables Commands</title><link>https://wiki.deimos.fr/Les_commandes_de_bases_d%5C%27Iptables/</link><pubDate>Mon, 06 May 2013 15:42:00 +0200</pubDate><guid>https://wiki.deimos.fr/Les_commandes_de_bases_d%5C%27Iptables/</guid><description>&lt;h2 id="basic-commands">Basic Commands &lt;a href="#basic-commands" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>There are several operations you can do with iptables. You start with &lt;strong>three default chains INPUT, OUTPUT and FORWARD that you cannot delete&lt;/strong>. Let&amp;rsquo;s look at the operations to administer chains:&lt;/p>
&lt;p>Creating a new chain:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e91b022" class="language-bash ">
 &lt;code>iptables -N chain&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Delete an empty chain:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7ec3f6e" class="language-bash ">
 &lt;code>iptables -X chain&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Change the default rule for a starting chain:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9136141" class="language-bash ">
 &lt;code>iptables -P chain status&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Example:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="13f784a" class="language-bash ">
 &lt;code>iptables -P INPUT DROP&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>or&lt;/p></description></item><item><title>ACL: Implementing NT-type Permissions on Linux</title><link>https://wiki.deimos.fr/ACL:_Impl%C3%A9mentation_des_droits_de_type_NT_sur_Linux/</link><pubDate>Mon, 06 May 2013 15:00:00 +0200</pubDate><guid>https://wiki.deimos.fr/ACL:_Impl%C3%A9mentation_des_droits_de_type_NT_sur_Linux/</guid><description>&lt;p>An ACL, or Access Control List, is simply defined as a list of permissions on a file, directory, or tree structure, added to the &amp;ldquo;classic&amp;rdquo; permissions (technically, POSIX.1 permissions) of that file. These permissions concern defined users and/or groups. ACL management under GNU/Linux is inspired by the POSIX 1003.1e standard (project 17) but does not fully comply with it.&lt;/p>
&lt;p>With ACLs, you can extend the number of users and groups that have rights to the same file. Remember that in the UNIX world, each file can normally only indicate permissions for a single user and a single group, which are opposed to a single category corresponding to &amp;ldquo;all others&amp;rdquo; (or &amp;ldquo;the rest of the world&amp;rdquo;). With ACLs, you can (among other things) add other users and groups to a file and define their rights separately. This brings the system closer to the permission system used on NT platforms (although many differences remain).&lt;/p></description></item><item><title>Acct: The Ultimate Keyfinder</title><link>https://wiki.deimos.fr/Acct_Le_keyfinder_par_excellence/</link><pubDate>Mon, 06 May 2013 13:59:00 +0200</pubDate><guid>https://wiki.deimos.fr/Acct_Le_keyfinder_par_excellence/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>In a production environment, it can be useful to know what each person is doing. This is particularly helpful when a mistake happens and nobody admits to it (yes, it happens). Novice hackers (aka script kiddies) who call themselves hackers because they&amp;rsquo;ve put a keylogger on a machine might also be interested in this. However, the purpose is obviously not the same.&lt;/p>
&lt;p>Two commands are useful:&lt;/p>
&lt;ul>
&lt;li>sa: obtains statistics on process launches&lt;/li>
&lt;li>lastcomm: obtains a list of commands launched by users&lt;/li>
&lt;/ul>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The installation is done as follows:&lt;/p></description></item><item><title>Lshell: Limiting Shell Capabilities</title><link>https://wiki.deimos.fr/Lshell_:_limiter_les_possibilit%C3%A9s_du_shell/</link><pubDate>Thu, 28 Mar 2013 10:15:00 +0200</pubDate><guid>https://wiki.deimos.fr/Lshell_:_limiter_les_possibilit%C3%A9s_du_shell/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://lshell.ghantoos.org/" rel="external" target="_blank">Lshell&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is a lightweight shell that allows restricting access to various commands and paths on your filesystems. It&amp;rsquo;s ideal for controlling what users can do on your machine.&lt;/p></description></item><item><title>AutoSSH: Automatically Reconnect SSH Tunnels</title><link>https://wiki.deimos.fr/Autossh_:_reconnecter_automatiquement_un_tunnel_SSH/</link><pubDate>Wed, 20 Mar 2013 10:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/Autossh_:_reconnecter_automatiquement_un_tunnel_SSH/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/openssh_logo.png" alt="AutoSSH" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>1.4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.harding.motd.ca/autossh/" rel="external" target="_blank">AutoSSH Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>20/03/2013&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Others&lt;/strong>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If like me you need to maintain a permanent tunnel, and you want it to automatically reconnect in case of disconnection, you need to use a tool like AutoSSH. I&amp;rsquo;ll skip the details of its complete operation, but you should know that it can work in 2 ways:&lt;/p></description></item><item><title>Kerberos: Setting up a Kerberos Server</title><link>https://wiki.deimos.fr/Kerberos_:_Mise_en_place_d'un_serveur_Kerberos/</link><pubDate>Sat, 06 Oct 2012 01:23:00 +0200</pubDate><guid>https://wiki.deimos.fr/Kerberos_:_Mise_en_place_d'un_serveur_Kerberos/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/logo_kerberos_consortium.gif" alt="Kerberos" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Red Hat 6&lt;br />Debian 6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>06/10/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Kerberos is a network authentication protocol that relies on a secret key mechanism (symmetric encryption) and the use of tickets, rather than clear text passwords, thus avoiding the risk of fraudulent interception of user passwords. Created at the Massachusetts Institute of Technology (MIT), it bears the Greek name for Cerberus, guardian of the Underworld. Kerberos was first implemented on Unix systems.&lt;/p></description></item><item><title>Checking File Integrity on Debian</title><link>https://wiki.deimos.fr/V%C3%A9rifier_l%27int%C3%A9grit%C3%A9_des_fichiers_sur_sa_Debian/</link><pubDate>Wed, 29 Aug 2012 12:02:00 +0200</pubDate><guid>https://wiki.deimos.fr/V%C3%A9rifier_l%27int%C3%A9grit%C3%A9_des_fichiers_sur_sa_Debian/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/debian_logo.png" alt="Debian" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.debian.org" rel="external" target="_blank">Debian&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>29/08/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For some context, I had a former colleague who found himself working in a company with many compromised servers that had been owned for years with no immediate possibility of replacing them. Knowing that binaries had been modified, he had to verify the integrity of all systems. For this purpose, he created a small script to check everything.&lt;/p></description></item><item><title>Bypassing HTTPS Proxies for SSH</title><link>https://wiki.deimos.fr/Outrepasser_les_proxy_HTTPS_pour_SSH/</link><pubDate>Mon, 30 Jul 2012 11:19:00 +0200</pubDate><guid>https://wiki.deimos.fr/Outrepasser_les_proxy_HTTPS_pour_SSH/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Those workplace proxies can be really annoying! But there are always solutions!&lt;/p>
&lt;p>So here&amp;rsquo;s the situation: I want to access a remote machine via SSH, but only ports 80 and 443 are allowed. Even if you configure the SSH server on port 443, you&amp;rsquo;ll notice it doesn&amp;rsquo;t work.&lt;/p>
&lt;p>A solution? Yes: connect-proxy.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="seveur">Seveur &lt;a href="#seveur" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>On the server, simply modify the sshd_config file to make SSH listen on port 443:&lt;/p></description></item><item><title>Ulimit: Using System Limits</title><link>https://wiki.deimos.fr/Ulimit_:_Utiliser_les_limites_syst%C3%A8mes/</link><pubDate>Tue, 03 Jul 2012 10:08:00 +0200</pubDate><guid>https://wiki.deimos.fr/Ulimit_:_Utiliser_les_limites_syst%C3%A8mes/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The ulimit programs allow to limit system-wide resource use using a normal configuration file - &lt;code>/etc/security/limits.conf&lt;/code>. This can help a lot in system administration, e.g. when a user starts too many processes and therefore makes the system unresponsive for other users.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="linux">Linux &lt;a href="#linux" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="cc48f25" class="language-bash ">
 &lt;code>ulimit -a&lt;/code>
 &lt;/pre>
 &lt;/div>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="0ece5e8" class="language- ">
 &lt;code>core file size (blocks, -c) 0
data seg size (kbytes, -d) unlimited
scheduling priority (-e) 0
file size (blocks, -f) unlimited
pending signals (-i) 7671
max locked memory (kbytes, -l) 64
max memory size (kbytes, -m) 811664
open files (-n) 1024
pipe size (512 bytes, -p) 8
POSIX message queues (bytes, -q) 819200
real-time priority (-r) 0
stack size (kbytes, -s) 8192
cpu time (seconds, -t) unlimited
max user processes (-u) 7671
virtual memory (kbytes, -v) 1175120
file locks (-x) unlimited&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>All these settings can be manipulated. A good example is this forkbomb that forks as many processes as possible and can crash systems where no user limits are set&lt;/p></description></item><item><title>Satellite: Deploying Red Hat OS via Red Hat Satellite</title><link>https://wiki.deimos.fr/Satellite_:_D%C3%A9ploiement_d%27OS_Red_Hat_via_Red_Hat_Satellite/</link><pubDate>Fri, 22 Jun 2012 06:41:00 +0200</pubDate><guid>https://wiki.deimos.fr/Satellite_:_D%C3%A9ploiement_d%27OS_Red_Hat_via_Red_Hat_Satellite/</guid><description>&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>5.4.1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>RHEL 6.2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.redhat.com/products/enterprise-linux/rhn-satellite/" rel="external" target="_blank">Red Hat Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>22/06/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>A &lt;a href="https://www.fr.redhat.com/red_hat_network/" rel="external" target="_blank">Red Hat Satellite&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> server is a solution that allows you to automatically deploy Red Hat OS via PXE/DHCP. You can then manage different installation profiles, manage updates, and perform a variety of simplified administrative tasks.&lt;/p></description></item><item><title>SSLH: Multiplexing SSL and SSH connections on the same port</title><link>https://wiki.deimos.fr/SSLH:_Multiplexer_les_connections_SSL_et_SSH_sur_le_m%C3%AAme_port/</link><pubDate>Sun, 10 Jun 2012 09:31:00 +0200</pubDate><guid>https://wiki.deimos.fr/SSLH:_Multiplexer_les_connections_SSL_et_SSH_sur_le_m%C3%AAme_port/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://www.rutschle.net/tech/sslh.shtml" rel="external" target="_blank">SSLH&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is like a magic trick. It allows you, for example, to have both HTTPS and SSH on a WAN address on port 443. How is this possible? Can we have a single listening port for multiple services?&lt;/p></description></item><item><title>Squid: Installation and Configuration of Squid</title><link>https://wiki.deimos.fr/Squid_:_Installation_et_configuration_de_Squid/</link><pubDate>Wed, 06 Jun 2012 08:31:00 +0200</pubDate><guid>https://wiki.deimos.fr/Squid_:_Installation_et_configuration_de_Squid/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/squid_logo.png" alt="Squid" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>2.7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>FreeBSD 9&lt;br>Debian 6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.squid-cache.org/" rel="external" target="_blank">Squid Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>06/06/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>A Squid server is a proxy server capable of using FTP, HTTP, Gopher, and HTTPS protocols. Unlike conventional proxy servers, a Squid server handles all requests in a single, non-blocking input/output process.&lt;/p></description></item><item><title>SASL: Secure Remote Email Sending with Postfix Server (SASL+TLS)</title><link>https://wiki.deimos.fr/SASL_:_Envoie_de_mails_%C3%A0_distance_s%C3%A9curis%C3%A9_avec_son_serveur_Postfix_%28SASL%20TLS%29/</link><pubDate>Wed, 06 Jun 2012 08:27:00 +0200</pubDate><guid>https://wiki.deimos.fr/SASL_:_Envoie_de_mails_%C3%A0_distance_s%C3%A9curis%C3%A9_avec_son_serveur_Postfix_%28SASL%20TLS%29/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/postfix_logo.png" alt="Postfix" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>2.7.1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.postfix.org/" rel="external" target="_blank">Postfix Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>06/06/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For several years now, most mail servers no longer authorize sending emails from outside to prevent becoming an open relay. It&amp;rsquo;s therefore necessary to add an additional layer called &lt;a href="https://en.wikipedia.org/wiki/SASL" rel="external" target="_blank">SASL&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>.&lt;/p></description></item><item><title>Proxychains: Proxy Any Outbound Connection</title><link>https://wiki.deimos.fr/Proxychains_:_proxyfier_n%27importe_quelle_connexion_vers_l%27ext%C3%A9rieur/</link><pubDate>Mon, 14 May 2012 09:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/Proxychains_:_proxyfier_n%27importe_quelle_connexion_vers_l%27ext%C3%A9rieur/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Ah, those proxy servers at work or school! They can be quite troublesome! Sometimes you really need temporary access to the outside world. Depending on the commands you use, you may or may not have the ability to configure proxy usage by modifying a configuration file, an environment variable, etc.&lt;/p>
&lt;p>The benefit of &lt;a href="https://proxychains.sourceforge.net/" rel="external" target="_blank">proxychains&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is that configuration is done only once, in its own configuration file. Then you use the syntax &lt;code>proxychains &amp;lt;command&amp;gt; &amp;lt;args&amp;gt;&lt;/code> and your command will use the proxy specified in the proxychains configuration file!&lt;/p></description></item><item><title>OpenSSH: Creating an SSH SOCKS Proxy</title><link>https://wiki.deimos.fr/OpenSSH_:_Cr%C3%A9er_un_proxy_socks_en_SSH/</link><pubDate>Sat, 18 Feb 2012 12:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/OpenSSH_:_Cr%C3%A9er_un_proxy_socks_en_SSH/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/ssh_socks.png" alt="SSH Socks" loading="lazy">

&lt;/p>
&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This tutorial will be brief, but it&amp;rsquo;s highly effective. The utility of creating a SOCKS proxy via SSH is to be able to route any traffic through an external connection once the SSH connection is established. You simply use the proxy that SSH creates and you&amp;rsquo;re ready to go.&lt;/p>
&lt;p>With &lt;a href="https://wiki.deimos.fr/SSLH:_Multiplexer_les_connections_SSL_et_SSH_sur_le_m%C3%AAme_port/">SSLH&lt;/a> as a frontend, you have an almost ultimate tool.&lt;/p>
&lt;p>For more advanced techniques, I also recommend checking out &lt;a href="https://wiki.deimos.fr/Proxychains_:_proxyfier_n%27importe_quelle_connexion_vers_l%27ext%C3%A9rieur/">the documentation on proxychains&lt;/a>.&lt;/p></description></item><item><title>Syslog-ng: Installation and Configuration of Syslog-ng</title><link>https://wiki.deimos.fr/Syslog-ng_:_Installation_et_configuration_de_Syslog-ng/</link><pubDate>Mon, 12 Dec 2011 20:18:00 +0200</pubDate><guid>https://wiki.deimos.fr/Syslog-ng_:_Installation_et_configuration_de_Syslog-ng/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://www.balabit.com/network-security/syslog-ng/opensource-logging-system/" rel="external" target="_blank">Syslog-ng&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is a new generation system log manager. It allows you to centralize logs from machines in a computer network with incredible ease, and to sort them just as easily. This daemon is therefore essential for network administrators concerned about the performance of their machines.&lt;/p></description></item><item><title>Installation and Configuration of Samba in 'User' Mode</title><link>https://wiki.deimos.fr/Installation_et_configuration_de_Samba_en_mode_%22User%22/</link><pubDate>Thu, 06 Oct 2011 12:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_et_configuration_de_Samba_en_mode_%22User%22/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Samba is a free software licensed under the GPL that supports the SMB/CIFS protocol. This protocol is used by Microsoft for sharing various resources (files, printers, etc.) between computers running Windows. Samba allows Unix systems to access resources from these systems and vice versa.&lt;/p>
&lt;p>Previously, PCs with DOS and early versions of Windows sometimes needed to install a TCP/IP stack and a set of Unix applications: an NFS client, FTP, telnet, lpr, etc. This was cumbersome and penalizing for PCs of that time, and it also forced users to adopt two sets of habits, adding those of UNIX to those of Windows. Samba therefore adopts the opposite approach.&lt;/p></description></item><item><title>Secure Your Architecture with SELinux</title><link>https://wiki.deimos.fr/Securiser_son_architecture_avec_SELinux/</link><pubDate>Thu, 06 Oct 2011 12:51:00 +0200</pubDate><guid>https://wiki.deimos.fr/Securiser_son_architecture_avec_SELinux/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Selinux" rel="external" target="_blank">Security-Enhanced Linux, abbreviated as SELinux&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>, is a LSM (Linux security module) that allows defining a MAC (mandatory access control) access policy to elements of a Linux-based system. Initiated by the NSA based on work conducted with SCC and the University of Utah in the USA (DTMach prototypes, DTOS, FLASK project), its architecture separates policy enforcement from its definition. It notably allows classifying applications of a system into different groups with finer access levels. It also allows assigning a confidentiality level for accessing system objects, such as file descriptors, according to an MLS (Multi Level Security) security model. SELinux uses the Bell LaPadula model with SCC Type enforcement for integrity. It is free software, with some parts licensed under GNU GPL or BSD.&lt;/p></description></item><item><title>Rsyslog: Installation and Configuration</title><link>https://wiki.deimos.fr/Rsyslog_:%C2%A0Installation_et_configuration_d%27Rsyslog/</link><pubDate>Thu, 06 Oct 2011 11:18:00 +0200</pubDate><guid>https://wiki.deimos.fr/Rsyslog_:%C2%A0Installation_et_configuration_d%27Rsyslog/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Syslog is a standard for forwarding log messages in an IP network. The term &amp;ldquo;syslog&amp;rdquo; is often used for both the actual syslog protocol, as well as the application or library sending syslog messages.&lt;/p>
&lt;p>Syslog is a client/server protocol: the syslog sender sends a small (less than 1KB) textual message to the syslog receiver. The receiver is commonly called &amp;ldquo;syslogd&amp;rdquo;, &amp;ldquo;syslog daemon&amp;rdquo; or &amp;ldquo;syslog server&amp;rdquo;. Syslog messages can be sent via UDP and/or TCP.&lt;/p></description></item><item><title>PAM Time: Setting Login Restrictions</title><link>https://wiki.deimos.fr/Pam_time:_Mettre_des_restrictions_sur_les_logins/</link><pubDate>Fri, 06 May 2011 20:36:00 +0200</pubDate><guid>https://wiki.deimos.fr/Pam_time:_Mettre_des_restrictions_sur_les_logins/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>pam_time is able to make several kinds of restrictions like:&lt;/p>
&lt;ul>
&lt;li>Time Based Restrictions&lt;/li>
&lt;li>Access Based Restrictions&lt;/li>
&lt;/ul>
&lt;p>I&amp;rsquo;ll explain here how to use those options.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="time-based-restrictions">Time Based Restrictions &lt;a href="#time-based-restrictions" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>These examples will limit the login times of certain users. See &lt;code>/etc/security/time.conf&lt;/code> for more information/examples. In order to place time restrictions on user logins, the following must be placed in &lt;code>/etc/pam.d/login&lt;/code>:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3cc4e59" class="language-bash ">
 &lt;code>account required /lib/security/pam_time.so&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>The remaining lines should be placed in &lt;code>/etc/security/time.conf&lt;/code>.&lt;/p></description></item><item><title>Apache 2 Installation and Configuration</title><link>https://wiki.deimos.fr/Installation_et_configuration_d%5C%27Apache_2/</link><pubDate>Wed, 06 Apr 2011 08:57:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_et_configuration_d%5C%27Apache_2/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Apache is one of the most widely used web servers in the world, if not THE most used web server in the world.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To install it:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1c2de30" class="language-bash ">
 &lt;code>apt-get install apache2&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="choose-a-default-charset">Choose a Default Charset &lt;a href="#choose-a-default-charset" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>In the configuration file &lt;code>/etc/apache2/apache2.conf&lt;/code> or &lt;code>/etc/apache2/conf.d/charset&lt;/code>, insert this:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="52f003d" class="language-bash ">
 &lt;code>AddDefaultCharset .latin9&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Then reload Apache:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="82a2415" class="language-bash ">
 &lt;code>/etc/init.d/apache2 reload&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="authentication">Authentication &lt;a href="#authentication" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;h4 id="ldap">LDAP &lt;a href="#ldap" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h4>&lt;p>For LDAP authentication, you need to install this:&lt;/p></description></item><item><title>Checking Your Website Security with Nikto</title><link>https://wiki.deimos.fr/V%C3%A9rifier_la_s%C3%A9curit%C3%A9_de_son_site_web_avec_Nikto/</link><pubDate>Tue, 05 Apr 2011 21:05:00 +0200</pubDate><guid>https://wiki.deimos.fr/V%C3%A9rifier_la_s%C3%A9curit%C3%A9_de_son_site_web_avec_Nikto/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To verify your configuration file and test potential security vulnerabilities, here&amp;rsquo;s a practical Perl script called Nikto. These are the most well-known security audit applications similar to Nikto:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.secuobs.com/news/07042007-proxmon.shtml" rel="external" target="_blank">WebScarab/ProxMon&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.secuobs.com/news/12022007-webinspect.shtml" rel="external" target="_blank">WebInspect&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> by SPI Dynamics&lt;/li>
&lt;li>&lt;a href="https://www.secuobs.com/news/20042005-google-hacking.shtml" rel="external" target="_blank">Wikto&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.secuobs.com/news/04122007-firecat.shtml" rel="external" target="_blank">Exploit-me&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.parosproxy.org/index.shtml" rel="external" target="_blank">Paros Proxy&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="installation-and-configuration">Installation and Configuration &lt;a href="#installation-and-configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s the documentation I found:&lt;/p></description></item><item><title>PAM Cracklib: Configure Password Complexity</title><link>https://wiki.deimos.fr/Pam_cracklib_:_Choisir_la_complexit%C3%A9_des_mots_de_passe/</link><pubDate>Sun, 06 Feb 2011 08:49:00 +0200</pubDate><guid>https://wiki.deimos.fr/Pam_cracklib_:_Choisir_la_complexit%C3%A9_des_mots_de_passe/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If you&amp;rsquo;re tired of users choosing passwords that are too simple on your systems, compromising security in the process, there&amp;rsquo;s a solution. PAM Cracklib allows you to specify the minimum size of passwords, the number of lowercase letters, uppercase letters, digits, and more.&lt;/p>
&lt;p>It&amp;rsquo;s almost essential, especially if you rely on a backend like LDAP.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Installation is straightforward:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="5efdee3" class="language-bash ">
 &lt;code>aptitude install libpam-cracklib&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>We only have one file to edit, which greatly simplifies things. Since we&amp;rsquo;re using Debian, they&amp;rsquo;ve made our lives easier - we just need to uncomment some lines that already come with clear explanations!&lt;/p></description></item><item><title>EncFS: Setting up EncFS with FUSE</title><link>https://wiki.deimos.fr/Encfs_:_Mise_en_place_d'Encfs_avec_FUSE/</link><pubDate>Sat, 05 Feb 2011 16:49:00 +0200</pubDate><guid>https://wiki.deimos.fr/Encfs_:_Mise_en_place_d'Encfs_avec_FUSE/</guid><description>&lt;h2 id="1-introduction">1. Introduction &lt;a href="#1-introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://encfs.sourceforge.net/" rel="external" target="_blank">EncFS&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is an encrypted file system which allows you to store files on your hard drive that others cannot access, even if the machine is physically taken.&lt;/p></description></item><item><title>IP Filter: Using the Firewall on Solaris</title><link>https://wiki.deimos.fr/IP_Filter_:_Utilisation_du_firewall_sous_Solaris/</link><pubDate>Tue, 28 Dec 2010 07:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/IP_Filter_:_Utilisation_du_firewall_sous_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>IPFilter (commonly referred to as ipf) is an open source software package that provides firewall services and network address translation (NAT) for many UNIX-like operating systems. The author and software maintainer is Darren Reed. IPFilter supports both IPv4 and IPv6 protocols, and is a stateful firewall.&lt;/p>
&lt;p>IPFilter is delivered with FreeBSD, NetBSD and Solaris 10. It used to be a part of OpenBSD, but it was removed in May 2001 due to problems with the license of IP Filter, after negotiations between Theo de Raadt and Reed broke down. At first glance, the license looks a lot like BSD Licenses, but does not allow redistribution of modified versions. Reed came back with another proposal but it was already too late. The software was removed from OpenBSD.&lt;/p></description></item><item><title>Introduction to Packet Filter</title><link>https://wiki.deimos.fr/Introduction_%C3%A0_Packet_Filter/</link><pubDate>Mon, 13 Dec 2010 17:15:00 +0200</pubDate><guid>https://wiki.deimos.fr/Introduction_%C3%A0_Packet_Filter/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://fr.wikipedia.org/wiki/Packet_Filter" rel="external" target="_blank">Packet Filter&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> (or PF) is the official software firewall for &lt;strong>OpenBSD&lt;/strong>, originally written by Daniel Hartmeier. It is a free Open Source software.&lt;/p></description></item><item><title>Iptables: Configuration Examples</title><link>https://wiki.deimos.fr/Exemples_de_configurations/</link><pubDate>Mon, 13 Dec 2010 17:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/Exemples_de_configurations/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Iptables is not very intuitive, and examples are almost essential for setting up your configuration. Here are some examples ranging from the simplest to the most complex.&lt;/p>
&lt;h2 id="example-1">Example 1 &lt;a href="#example-1" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3767339" class="language-bash ">
 &lt;code>#!/bin/sh
################################################
# #
# Basic Firewall Script #
# #
################################################

#############
# Variables #
############
 IPTABLES=/sbin/iptables
 IF_EXT=eth0
 IP_SSH=xx.xx.xx.xx


###################
# Clear tables #
##################
 ${IPTABLES} -t mangle -F
 ${IPTABLES} -t nat -F
 ${IPTABLES} -F
 ${IPTABLES} -t mangle -X
 ${IPTABLES} -t nat -X
 ${IPTABLES} -X
 ${IPTABLES} -Z


#####################
# Default rules #
####################
 ## ignore_echo_broadcasts, TCP Syncookies, ip_forward
 echo 1 &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

 ## Default Policy
 ${IPTABLES} -P INPUT DROP
 ${IPTABLES} -P OUTPUT DROP
 ${IPTABLES} -P FORWARD DROP

 ## Accept loopback
 ${IPTABLES} -A FORWARD -i lo -o lo -j ACCEPT
 ${IPTABLES} -A INPUT -i lo -j ACCEPT
 ${IPTABLES} -A OUTPUT -o lo -j ACCEPT

 ## REJECT connections pretending to initialize without syn
 ${IPTABLES} -A INPUT -p tcp ! --syn -m state --state NEW,INVALID -j REJECT


####################
# Special rules #
###################
### Create chains
 ${IPTABLES} -N SPOOFED
 ${IPTABLES} -N SERVICES

### Prohibit spoofed packets
 ${IPTABLES} -A SPOOFED -s 127.0.0.0/8 -j DROP
 ${IPTABLES} -A SPOOFED -s 169.254.0.0/12 -j DROP
 ${IPTABLES} -A SPOOFED -s 172.16.0.0/12 -j DROP
 ${IPTABLES} -A SPOOFED -s 192.168.0.0/16 -j DROP
 ${IPTABLES} -A SPOOFED -s 10.0.0.0/8 -j DROP

### Allowed INPUT
 ### ICMP
	## Ping (*)
 ${IPTABLES} -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
 ### TCP
	## SSH (*)
	${IPTABLES} -A SERVICES -p tcp -d ${IP_SSH} --dport 22 -j ACCEPT
 ## MAIL (*)
	${IPTABLES} -A SERVICES -p tcp -d ${IP_SSH} --dport 25 -j ACCEPT


#################################
# Open ports on the firewall #
################################
 ${IPTABLES} -A OUTPUT -j ACCEPT
 ${IPTABLES} -A INPUT -m state --state ESTABLISH,RELATED -j ACCEPT
 ${IPTABLES} -A INPUT -j SPOOFED
 ${IPTABLES} -A INPUT -i ${IF_EXT} -j SERVICES&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="example-2">Example 2 &lt;a href="#example-2" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="6f5c84e" class="language-bash ">
 &lt;code>#!/bin/bash
echo Setting firewall rules...

###### Initialization Start ######

# Block all incoming connections
iptables -t filter -P INPUT DROP
iptables -t filter -P FORWARD DROP
echo - Block all incoming connections: [OK]

# Block all outgoing connections
iptables -t filter -P OUTPUT DROP
echo - Block all outgoing connections: [OK]

# Clear current tables
iptables -t filter -F
iptables -t filter -X
echo - Clearing: [OK]

# Allow SSH
iptables -t filter -A INPUT -p tcp --dport 22 -j ACCEPT
echo - Allow SSH: [OK]

# Don&amp;#39;t break established connections
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
echo - Don&amp;#39;t break established connections: [OK]

###### End Initialization ######

##### Begin Rules ######

# Allow DNS, FTP, HTTP, NTP requests
iptables -t filter -A OUTPUT -p tcp --dport 21 -j ACCEPT
iptables -t filter -A OUTPUT -p tcp --dport 80 -j ACCEPT
iptables -t filter -A OUTPUT -p tcp --dport 53 -j ACCEPT
iptables -t filter -A OUTPUT -p udp --dport 53 -j ACCEPT
iptables -t filter -A OUTPUT -p udp --dport 123 -j ACCEPT
echo - Allow DNS, FTP, HTTP, NTP requests: [OK]

# Allow loopback
iptables -t filter -A INPUT -i lo -j ACCEPT
iptables -t filter -A OUTPUT -o lo -j ACCEPT
echo - Allow loopback: [OK]

# Allow ping
iptables -t filter -A INPUT -p icmp -j ACCEPT
iptables -t filter -A OUTPUT -p icmp -j ACCEPT
echo - Allow ping: [OK]

# HTTP
iptables -t filter -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -t filter -A INPUT -p tcp --dport 443 -j ACCEPT
iptables -t filter -A INPUT -p tcp --dport 8443 -j ACCEPT
echo - Allow Apache server: [OK]

# FTP
modprobe ip_conntrack_ftp
iptables -t filter -A INPUT -p tcp --dport 20 -j ACCEPT
iptables -t filter -A INPUT -p tcp --dport 21 -j ACCEPT
iptables -t filter -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
echo - Allow FTP server: [OK]

# Mail
iptables -t filter -A INPUT -p tcp --dport 25 -j ACCEPT
iptables -t filter -A INPUT -p tcp --dport 110 -j ACCEPT
iptables -t filter -A INPUT -p tcp --dport 143 -j ACCEPT
iptables -t filter -A OUTPUT -p tcp --dport 25 -j ACCEPT
iptables -t filter -A OUTPUT -p tcp --dport 110 -j ACCEPT
iptables -t filter -A OUTPUT -p tcp --dport 143 -j ACCEPT
echo - Allow Mail server: [OK]

###### End Rules ######

echo Firewall successfully updated!&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="example-3">Example 3 &lt;a href="#example-3" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9c6d978" class="language-bash ">
 &lt;code># description: Firewall rules with masquerading
# probe: true
#
### BEGIN INIT INFO
# Provides: firewall_passerelle
# Required-Start: $network
# Required-Stop: $network
# Default-Start: 3 5
# Default-Stop:
# Description: Firewall rules with masquerading (configurable)
### END INIT INFO

####################################################################
# INTRODUCTION
####################################################################

## Make sure we are root
if [ ! &amp;#34;`id 2&amp;gt;&amp;amp;1 | egrep &amp;#39;uid=0&amp;#39; | cut -d &amp;#39;(&amp;#39; -f1`&amp;#34; = &amp;#34;uid=0&amp;#34; ]; then
 echo &amp;#34;This script must be run by the &amp;#39;root&amp;#39; user&amp;#34;
 exit 1 ## Exit the script
fi

# If iptables utility is not installed, exit with an error
# Note: the path to the IPTABLES utility may vary from one
# system to another
IPT=&amp;#34;/sbin/iptables&amp;#34;
[ -x ${IPT} ] || {
 echo &amp;#34;Unable to find the path for iptables&amp;#34;
 exit 1
 }

# Internet connection interface
# This variable is mandatory
OUT=&amp;#34;ppp0&amp;#34;

# If the following line is uncommented, the machine
# is not configured in gateway mode and only serves
# as a firewall
IN=&amp;#34;eth0&amp;#34; # private network interface if applicable

# Uncomment the following line to enable protocol filtering
# when using in gateway mode
#FILTRAGE=&amp;#34;-p tcp -m multiport --destination-port 6667,5190&amp;#34;

# let&amp;#39;s see how we were called
case &amp;#34;$1&amp;#34; in
 start)
 ;;
 stop)
 ${IPT} -t filter -F
 ${IPT} -t nat -F
 ${IPT} -t filter -X
 ${IPT} -t filter -Z
 ${IPT} -t filter -P INPUT ACCEPT
 ${IPT} -t filter -P OUTPUT ACCEPT
 ${IPT} -t filter -P FORWARD ACCEPT
 /bin/echo &amp;#34;0&amp;#34; &amp;gt; /proc/sys/net/ipv4/ip_forward
 exit 0
 ;;
 restart)
 $0 stop
 $0 start
 ;;
 *)
 echo &amp;#34;Usage: $0 {start|stop|restart}&amp;#34;
 exit 1
esac

# Load modules
modprobe ip_tables
modprobe ip_conntrack
modprobe ip_conntrack_ftp
modprobe ip_conntrack_irc
modprobe ip_conntrack_h323

# Clear all rules and chains
${IPT} -t filter -F
${IPT} -t nat -F
${IPT} -t filter -X
${IPT} -t filter -Z

# Configure default behavior (Policy)
${IPT} -P INPUT DROP
${IPT} -P OUTPUT DROP
${IPT} -P FORWARD DROP

####################################################################
# Kernel flags
####################################################################

# Enable TCP SYN Cookie protection (repeated connection requests)
#/bin/echo &amp;#34;1&amp;#34; &amp;gt; /proc/sys/net/ipv4/tcp_syncookies

# Ignore ping responses
#/bin/echo &amp;#34;1&amp;#34; &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_all

# Disable ICMP broadcast responses
/bin/echo &amp;#34;1&amp;#34; &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Don&amp;#39;t accept source routed packets. Attackers can use source
# routing to generate traffic pretending to be from inside your
# network, but which is routed back along the path which it came,
# namely outside, so attackers can compromise your network.
# Source routing is rarely used for legitimate purposes.
/bin/echo &amp;#34;0&amp;#34; &amp;gt; /proc/sys/net/ipv4/conf/all/accept_source_route

# Disable ICMP Redirect Acceptance
/bin/echo &amp;#34;0&amp;#34; &amp;gt; /proc/sys/net/ipv4/conf/all/accept_redirects

# Enable bad error message protection
/bin/echo &amp;#34;1&amp;#34; &amp;gt; /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses

# To prevent IP SPOOFING, check the source address on all
# interfaces - can cause issues with asymmetric routing
# (packets take different paths in each direction)
for interface in /proc/sys/net/ipv4/conf/*/rp_filter; do
 /bin/echo &amp;#34;1&amp;#34; &amp;gt; ${interface}
done

# Log Spoofed Packets, Source Routed Packets, Redirect Packets
for interface in /proc/sys/net/ipv4/conf/*/log_martians; do
 /bin/echo &amp;#34;1&amp;#34; &amp;gt; ${interface}
done
# For dynamic IP address
echo &amp;#34;1&amp;#34; &amp;gt; /proc/sys/net/ipv4/ip_dynaddr

# Enable IP packet routing
# This is the main command authorizing the gateway function
if [ ${IN} ]; then
 /bin/echo &amp;#34;1&amp;#34; &amp;gt; /proc/sys/net/ipv4/ip_forward
else
 /bin/echo &amp;#34;0&amp;#34; &amp;gt; /proc/sys/net/ipv4/ip_forward
fi

####################################################################
# Rules
####################################################################

# Unlimited traffic on loopback address
${IPT} -A INPUT -i lo -j ACCEPT
${IPT} -A OUTPUT -o lo -j ACCEPT

# Unlimited traffic on other Ethernet interfaces
# Avoid touching the public network interface
# (connected to the Internet)
for interface in /proc/sys/net/ipv4/conf/eth*; do
 VAL=`echo ${interface} | cut -c 25-`
 if [ ${VAL} != ${OUT} ]; then
 ${IPT} -A INPUT -i ${VAL} -j ACCEPT
 ${IPT} -A OUTPUT -o ${VAL} -j ACCEPT
 fi
done

# transparent proxy: redirection rule to the proxy
# we consider that eth0 is the private network interface
# and 3128 is the proxy-cache server port
#${IPT} -t nat -A PREROUTING -p tcp -i eth0 --dport 80 -j REDIRECT --to-port 3128

# If gateway function is enabled
if [ ${IN} ]; then

 # Accept forwarding packets on the internal interface
 ${IPT} -A FORWARD -i ${IN} ${FILTRAGE} -j ACCEPT
 ${IPT} -A FORWARD -o ${IN} -j ACCEPT

 # Enable masquerading for traffic from the private
 # subnet (For fixed IP, SNAT is better)
 ${IPT} -t nat -A POSTROUTING -o ${OUT} -j MASQUERADE

fi

# Accept outgoing connections from the
# private subnet
${IPT} -A OUTPUT -o ${OUT} -j ACCEPT

#
# Add rules to authorize certain ports
# Uncomment the lines that interest you
#

## Simultaneous access to a web server and FTP
#${IPT} -A INPUT -i ${OUT} -p tcp -m state --state NEW -m multiport --destination-port 80,20,21 -j ACCEPT

## Access only to a web server
#${IPT} -A INPUT -i ${OUT} -p tcp -m state --state NEW --destination-port 80 -j ACCEPT

## gtk-gnutella
#${IPT} -A INPUT -i ${OUT} -p tcp -m state --state NEW --destination-port 23934 -j ACCEPT
#${IPT} -A INPUT -i ${OUT} -p udp -m state --state NEW --destination-port 23934 -j ACCEPT

## SSH
${IPT} -A INPUT -i ${OUT} -p tcp --destination-port 22 -j ACCEPT

## HTTP
${IPT} -A INPUT -i ${OUT} -p tcp --destination-port 80 -j ACCEPT

# Mldonkey
${IPT} -A INPUT -i ${OUT} -p tcp --destination-port 6666 -j ACCEPT
${IPT} -A INPUT -i ${OUT} -p tcp --destination-port 6682 -j ACCEPT
${IPT} -A INPUT -i ${OUT} -p tcp --destination-port 8155 -j ACCEPT

## Jabber file transfer
#${IPT} -A INPUT -i ${OUT} -p udp --destination-port 8010 -j ACCEPT

#
# End of rule addition
#

# Accept already established incoming connections
${IPT} -A INPUT -i ${OUT} -m state --state ESTABLISHED,RELATED -j ACCEPT

# If gateway function is enabled
if [ ${IN} ]; then

 # Track rejected packets on the FORWARD chain
 ${IPT} -N LOG_FWD
 ${IPT} -A LOG_FWD -j LOG --log-level info --log-ip-options --log-prefix &amp;#34;Firewall FWD:&amp;#34;
 ${IPT} -A LOG_FWD -j DROP

 # Log rejected packets on the FORWARD chain
 ${IPT} -A FORWARD -j LOG_FWD

fi

# Initialize tracking for rejected input packets on
# the external interface
${IPT} -N LOG_EXT
${IPT} -A LOG_EXT -j LOG --log-level info --log-ip-options --log-prefix &amp;#34;Firewall IN:&amp;#34;
${IPT} -A LOG_EXT -j DROP

# Log rejected input packets on the external interface
${IPT} -A INPUT -i ${OUT} -j LOG_EXT

exit 0&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="example-4">Example 4 &lt;a href="#example-4" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f212bb6" class="language-bash ">
 &lt;code>#!/bin/bash

###################################################
## ARCHITECTURE FOR A 4-INTERFACE FIREWALL ##
##						 ##
##		 INTERNET			 ##
##		 | 			 ##
##	DMZ--------FIREWALL--------SERVER ZONE ##
##		 |				 ##
##		 LAN			 ##
##						 ##
###################################################

###################################################
## REQUIRED IPTABLES MODULES ##
###################################################
MODULES_IPTABLES=&amp;#34;ip_tables \
 ipt_string \
		 ip_conntrack \
 ip_conntrack_ftp \
		 ip_nat_ftp&amp;#34;			# Iptables modules loaded at startup
INTERNET=&amp;#34;ppp0&amp;#34; 				# Internet device (multiple devices possible)
INTERNET_NAT=&amp;#34;ppp0&amp;#34; # Internet device used for NAT (only 1 device possible)
DMZ=&amp;#34;&amp;#34; 	 			# DMZ device (public IPs, servers accessible from internet)
ZONE_SERVEURS=&amp;#34;eth2&amp;#34;				# Server zone device (private IPs, servers accessible internally)
LAN=&amp;#34;eth1 eth3&amp;#34;					# Intranet device (multiple devices possible)

PAQUETS_ICMP_AUTHORISES=&amp;#34;0 3 4 5 8 11 12&amp;#34;	# ICMP packets authorized to travel between different networks
PING_FLOOD=&amp;#34;1/s&amp;#34;				# Number of PING authorized per second
LOG_FLOOD=&amp;#34;1/s&amp;#34;

PROTOCOLES_AUTHORISES=&amp;#34;47&amp;#34;			# Protocols authorized to pass through the firewall

MASQ_LAN=&amp;#34;YES&amp;#34; # Masquerade the LAN
MASQ_DMZ=&amp;#34;NO&amp;#34; # Masquerade the DMZ
MASQ_ZONE_SERVEURS=&amp;#34;YES&amp;#34; # Masquerade the server zone

PORTS_TCP_INTERNET_AUTHORISES=&amp;#34;53&amp;#34;		# TCP ports of the firewall accessible from the internet
PORTS_UDP_INTERNET_AUTHORISES=&amp;#34;53&amp;#34;		# UDP ports of the firewall accessible from the internet
PORTS_TCP_DMZ_AUTHORISES=&amp;#34;&amp;#34;			# TCP ports of the firewall accessible from the DMZ
PORTS_UDP_DMZ_AUTHORISES=&amp;#34;&amp;#34;			# UDP ports of the firewall accessible from the DMZ
PORTS_TCP_ZONE_SERVEURS_AUTHORISES=&amp;#34;53 113&amp;#34;	# TCP ports of the firewall accessible from the server zone
PORTS_UDP_ZONE_SERVEURS_AUTHORISES=&amp;#34;53 113&amp;#34;	# UDP ports of the firewall accessible from the server zone
PORTS_TCP_LAN_AUTHORISES=&amp;#34;53 113 22&amp;#34;		# TCP ports of the firewall accessible from the LAN
PORTS_UDP_LAN_AUTHORISES=&amp;#34;53 113 22&amp;#34;		# UDP ports of the firewall accessible from the LAN

PORTS_TCP_SORTIE_REFUSES=&amp;#34;6346 \
			 7777 \
			 8888 \
			 6699 \
			 6000&amp;#34; # TCP ports forbidden for output from the firewall
PORTS_UDP_SORTIE_REFUSES=&amp;#34;6346 \
			 7777 \
			 8888 \
			 6699 \
			 6000&amp;#34; # UDP ports forbidden for output from the firewall

RESEAUX_LAN=&amp;#34;192.168.10.0/24 \
	 192.168.30.0/24&amp;#34; 			# Networks composing the LAN
RESEAUX_DMZ=&amp;#34;&amp;#34; # Networks composing the DMZ
RESEAUX_ZONE_SERVEURS=&amp;#34;192.168.50.0/24&amp;#34; # Networks composing the server zone

NAT_TCP_NET=&amp;#34; 80.13.192.105:80&amp;gt;192.168.50.100:8080 &amp;#34; # NAT =&amp;gt; IP_FIREWALL:PORT_FIREWALL&amp;gt;IP_INTERNAL:PORT_INTERNAL
NAT_UDP_NET=&amp;#34;&amp;#34; 				# NAT =&amp;gt; IP_FIREWALL:PORT_FIREWALL&amp;gt;IP_INTERNAL:PORT_INTERNAL

MOTS_CLES=&amp;#34;root admin&amp;#34; # Keywords to log

MOTS_CLES_INTERDITS=&amp;#34;mp3&amp;gt;192.168.10.117 \
		 MP3&amp;gt;192.168.10.117 \
		 ogg&amp;gt;192.168.10.117 \
		 OGG&amp;gt;192.168.10.117&amp;#34; 	# Forbidden keywords ;-) KEYWORD&amp;gt;RECIPIENT_IP
IP_INTERDITES=&amp;#34; 66.28.48.0/24 \
		66.28.49.0/24&amp;#34;			# Addresses blocked from entry

###################################################
## SCRIPT VARIABLES (DO NOT EDIT) ##
###################################################

IPTABLES=`which iptables`
MODPROBE=`which modprobe`
VERT=&amp;#34;\033[32m&amp;#34;
JAUNE=&amp;#34;\033[33m&amp;#34;
GRAS=&amp;#34;\033[1m&amp;#34;
NORMAL=&amp;#34;\033[m&amp;#34;
ROUGE=&amp;#34;\033[31m&amp;#34;


###################################################
## VERIFY IPTABLES PRESENCE ##
###################################################

echo -en &amp;#34;${GRAS}Verifying IPTABLES presence:${NORMAL}&amp;#34;
if [ -z ${IPTABLES} ] ;then
 echo -e &amp;#34;\t\t${ROUGE}FAILED${NORMAL}\n&amp;#34;
 exit 1
else
 echo -e &amp;#34;\t\t${VERT}OK${NORMAL}&amp;#34;
fi


###################################################
## VERIFY MODPROBE PRESENCE ##
###################################################

echo -en &amp;#34;${GRAS}Verifying MODPROBE presence:${NORMAL}&amp;#34;
if [ -z ${MODPROBE} ] ;then
 echo -e &amp;#34;\t\t${ROUGE}FAILED${NORMAL}\n&amp;#34;
 exit 1
else
 echo -e &amp;#34;\t\t${VERT}OK${NORMAL}\n&amp;#34;
fi


###################################################
## LOADING IPTABLES MODULES ##
###################################################

for module in ${MODULES_IPTABLES} ;do
 echo -e &amp;#34;${GRAS}Loading module ${module}:${NORMAL}\t\t\t${VERT}OK${NORMAL}&amp;#34;
 ${MODPROBE} ${module}
done
echo -e &amp;#34;\n&amp;#34;

###################################################
## BASIC FIREWALL CONFIGURATION USING ##
## /proc FILESYSTEM ##
###################################################

###################################################
## ENABLE IP FORWARDING (routing) ##
###################################################

echo -en &amp;#34;${GRAS}${JAUNE}Enabling ip forwarding:${NORMAL}&amp;#34;
if [ -e /proc/sys/net/ipv4/ip_forward ] ; then
 echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
 echo -e &amp;#34;\t\t\t\t${VERT}OK${NORMAL}&amp;#34;
else
 echo -e &amp;#34;\t\t\t\t${ROUGE}FAILED${NORMAL}\n&amp;#34;
 exit 1
fi

###################################################
## Protection against SYN FLOOD ##
###################################################

echo -en &amp;#34;${GRAS}${JAUNE}Protection against SYN/FLOOD:${NORMAL}&amp;#34;
if [ -e /proc/sys/net/ipv4/tcp_syncookies ] ; then
 echo 1 &amp;gt; /proc/sys/net/ipv4/tcp_syncookies
 echo -e &amp;#34;\t\t\t${VERT}OK${NORMAL}&amp;#34;
else
 echo -e &amp;#34;\t\t\t${ROUGE}FAILED${NORMAL}&amp;#34;
fi

###################################################
## Defragment packets before forwarding them ##
## Useful for masquerading ##
###################################################

echo -en &amp;#34;${GRAS}${JAUNE}Packet refragmentation:${NORMAL}&amp;#34;
if [ -e /proc/sys/net/ipv4/ip_always_defrag ] ; then
 echo 1 &amp;gt; /proc/sys/net/ipv4/ip_always_defrag
 echo -e &amp;#34;\t\t\t\t${VERT}OK${NORMAL}&amp;#34;
else
 echo -e &amp;#34;\t\t\t\t${ROUGE}FAILED${NORMAL}&amp;#34;
fi

###################################################
## Don&amp;#39;t respond to ICMP packets ##
## sent to broadcast ##
###################################################

echo -en &amp;#34;${GRAS}${JAUNE}Insensitivity to ICMP packets sent to broadcast:${NORMAL}&amp;#34;
if [ -e /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts ] ; then
 echo 1 &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
 echo -e &amp;#34;\t${VERT}OK${NORMAL}&amp;#34;
else
 echo -e &amp;#34;\t${ROUGE}FAILED${NORMAL}&amp;#34;
fi

###################################################
## Ignore ICMP errors from hosts ##
## on the network reacting poorly to frames ##
## sent to what they perceive as ##
## the broadcast address ##
###################################################

if [ -e /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses ] ; then
 echo 1 &amp;gt; /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
fi

###################################################
## Reverse Path Filtering ##
## Only route packets belonging to ##
## our networks ##
###################################################

echo -e &amp;#34;${GRAS}${JAUNE}Enabling Reverse Path Filtering:${NORMAL}\t\t\t${VERT}OK${NORMAL}\n&amp;#34;
for f in /proc/sys/net/ipv4/conf/*/rp_filter; do
 echo 1 &amp;gt; $f
done


###################################################
## CLEAR OLD RULES ##
###################################################

echo -en &amp;#34;${GRAS}${JAUNE}Clearing old rules:${NORMAL}&amp;#34;
${IPTABLES} -t filter -F INPUT
${IPTABLES} -t filter -F OUTPUT
${IPTABLES} -t filter -F FORWARD
${IPTABLES} -t nat -F PREROUTING
${IPTABLES} -t nat -F OUTPUT
${IPTABLES} -t nat -F POSTROUTING
${IPTABLES} -t mangle -F PREROUTING
${IPTABLES} -t mangle -F OUTPUT
echo -e &amp;#34;\t\t\t${VERT}OK${NORMAL}&amp;#34;

###################################################
## RESET CHAINS ##
###################################################

echo -en &amp;#34;${GRAS}${JAUNE}Resetting chains:${NORMAL}&amp;#34;
${IPTABLES} -t filter -Z
${IPTABLES} -t nat -Z
${IPTABLES} -t mangle -Z
echo -e &amp;#34;\t\t\t\t${VERT}OK${NORMAL}&amp;#34;

###################################################
## SET DEFAULT POLICY ##
###################################################

echo -en &amp;#34;${GRAS}${JAUNE}Setting default policy:${NORMAL}&amp;#34;
${IPTABLES} -t filter -P INPUT DROP
${IPTABLES} -t filter -P OUTPUT ACCEPT
${IPTABLES} -t filter -P FORWARD DROP
echo -e &amp;#34;\t\t${VERT}OK${NORMAL}\n&amp;#34;

###################################################
## KEYWORDS TO LOG ##
###################################################

if [ &amp;#34;${MOTS_CLES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -ne &amp;#34;${GRAS}${JAUNE}Enabling keyword-based logging system:${NORMAL}&amp;#34;
 for mot in ${MOTS_CLES} ;do
	${IPTABLES} -A INPUT -m string --string &amp;#34;${mot}&amp;#34; -j LOG --log-level info --log-prefix &amp;#34;${mot}: &amp;#34;
	${IPTABLES} -A FORWARD -m string --string &amp;#34;${mot}&amp;#34; -j LOG --log-level info --log-prefix &amp;#34;${mot}: &amp;#34;
 done
 echo -e &amp;#34;\t\t${VERT}OK${NORMAL}&amp;#34;
fi

###################################################
## Block entry of certain addresses ##
## via the firewall for tcp and udp ##
###################################################

if [ &amp;#34;${IP_INTERDITES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Blocking entry of certain addresses:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for adr in ${IP_INTERDITES} ;do
	${IPTABLES} -t filter -A FORWARD -p tcp -s ${adr} -j DROP
	${IPTABLES} -t filter -A FORWARD -p udp -s ${adr} -j DROP
 done
fi

###################################################
## Block outgoing of certain ports via ##
## the firewall for tcp ##
###################################################

if [ &amp;#34;${PORTS_TCP_SORTIE_REFUSES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Blocking outgoing TCP ports:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for port_no in ${PORTS_TCP_SORTIE_REFUSES} ;do
	${IPTABLES} -t filter -A FORWARD -p tcp --dport ${port_no} -j DROP
	${IPTABLES} -t filter -A OUTPUT -p tcp -o ${INTERNET} --dport ${port_no} -j DROP
 done
fi

###################################################
## Block outgoing of certain ports via ##
## the firewall for udp ##
###################################################

if [ &amp;#34;${PORTS_TCP_SORTIE_REFUSES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Blocking outgoing UDP ports:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for port_no in ${PORTS_TCP_SORTIE_REFUSES} ;do
	${IPTABLES} -t filter -A FORWARD -p udp --dport ${port_no} -j DROP
	${IPTABLES} -t filter -A OUTPUT -p udp -o ${INTERNET} --dport ${port_no} -j DROP
 done
fi
###################################################
## Block passage of certain keywords ##
###################################################

if [ &amp;#34;${MOTS_CLES_INTERDITS}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Blocking passage of certain keywords:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for mot_cles in ${MOTS_CLES_INTERDITS} ;do
	mot=`echo ${mot_cles} | sed &amp;#39;s/&amp;gt;.*//g&amp;#39;`
	ip=`echo ${mot_cles} | sed &amp;#39;s/.*&amp;gt;//g&amp;#39;`

	${IPTABLES} -A INPUT -m string --string &amp;#34;${mot}&amp;#34; -d ${ip} -j DROP
	${IPTABLES} -A FORWARD -m string --string &amp;#34;${mot}&amp;#34; -d ${ip} -j DROP
 done
fi

###################################################
## Allow ICMP packets ##
###################################################

if [ &amp;#34;${PAQUETS_ICMP_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Allowing certain ICMP packets:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for icmp_no in ${PAQUETS_ICMP_AUTHORISES} ;do
	${IPTABLES} -t filter -A INPUT -p icmp --icmp-type ${icmp_no} -m limit --limit ${PING_FLOOD} -j ACCEPT
	${IPTABLES} -t filter -A FORWARD -p icmp --icmp-type ${icmp_no} -m limit --limit ${PING_FLOOD} -j ACCEPT
	${IPTABLES} -t filter -A OUTPUT -p icmp --icmp-type ${icmp_no} -m limit --limit ${PING_FLOOD} -j ACCEPT
 done
fi


###################################################
## Allow certain protocols to pass ##
###################################################

if [ &amp;#34;${PROTOCOLES_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Allowing certain protocols:${NORMAL}\t\t\t${VERT}OK${NORMAL}&amp;#34;

 for protocole_no in ${PROTOCOLES_AUTHORISES} ;do
	${IPTABLES} -t filter -A INPUT -p ${protocole_no} -j ACCEPT
	${IPTABLES} -t filter -A FORWARD -p ${protocole_no} -j ACCEPT
 done
fi


###################################################
## Allow connections already established before ##
## launch of this script ##
###################################################

echo -e &amp;#34;${GRAS}${JAUNE}Allowing already established connections:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;
${IPTABLES} -t filter -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
${IPTABLES} -t filter -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
${IPTABLES} -t filter -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT


###################################################
## Allow LocalHost connections ##
###################################################

echo -e &amp;#34;${GRAS}${JAUNE}Allowing localhost connections:${NORMAL}\t${VERT}OK${NORMAL}&amp;#34;
${IPTABLES} -t filter -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT
${IPTABLES} -t filter -A FORWARD -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT
${IPTABLES} -t filter -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT

###################################################
## Allow TCP connections on the ##
## internet device ##
###################################################

if [ &amp;#34;${INTERNET}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 for internet_device in ${INTERNET} ;do
	if [ &amp;#34;${PORTS_TCP_INTERNET_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
	 echo -e &amp;#34;${GRAS}${JAUNE}TCP connections on internet interface ${internet_device}:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

	 for port_no in ${PORTS_TCP_INTERNET_AUTHORISES} ;do
		${IPTABLES} -t filter -A INPUT -p tcp -i ${internet_device} --dport ${port_no} -j ACCEPT

		if [ &amp;#34;0${port_no}&amp;#34; == &amp;#34;021&amp;#34; ] ;then
		 ${IPTABLES} -t filter -A INPUT -p tcp -i ${internet_device} --sport 20 --dport 1024:65535 ! --syn -j ACCEPT
		fi
	 done
	fi
 done
fi


###################################################
## Allow UDP connections on the ##
## internet device ##
###################################################

if [ &amp;#34;${INTERNET}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 for internet_device in ${INTERNET} ;do
	if [ &amp;#34;${PORTS_UDP_INTERNET_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
	 echo -e &amp;#34;${GRAS}${JAUNE}UDP connections on internet interface ${internet_device}:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

	 for port_no in ${PORTS_UDP_INTERNET_AUTHORISES} ;do
		${IPTABLES} -t filter -A INPUT -p udp -i ${internet_device} --dport ${port_no} -j ACCEPT
	 done
	fi
 done
fi


###################################################
## Allow TCP connections on the ##
## DMZ device ##
###################################################

if [ &amp;#34;${DMZ}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 for dmz_device in ${DMZ} ;do
	if [ &amp;#34;${PORTS_TCP_DMZ_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
	 echo -e &amp;#34;${GRAS}${JAUNE}TCP connections on DMZ interface ${dmz_device}:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

	 for port_no in ${PORTS_TCP_DMZ_AUTHORISES} ;do
		${IPTABLES} -t filter -A INPUT -p tcp -i ${dmz_device} --dport ${port_no} -j ACCEPT

		if [ &amp;#34;0${port_no}&amp;#34; == &amp;#34;021&amp;#34; ] ;then
		 ${IPTABLES} -t filter -A INPUT -p tcp -i ${dmz_device} --sport 20 --dport 1024:65535 ! --syn -j ACCEPT
		fi
	 done
	fi
 done
fi

###################################################
## Allow UDP connections on the ##
## DMZ device ##
###################################################

if [ &amp;#34;${DMZ}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 for dmz_device in ${DMZ} ;do
	if [ &amp;#34;${PORTS_UDP_DMZ_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
	 echo -e &amp;#34;${GRAS}${JAUNE}UDP connections on DMZ interface ${dmz_device}:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

	 for port_no in ${PORTS_UDP_DMZ_AUTHORISES} ;do
		${IPTABLES} -t filter -A INPUT -p udp -i ${dmz_device} --dport ${port_no} -j ACCEPT
	 done
	fi
 done
fi


###################################################
## Allow TCP connections on the ##
## server zone device ##
###################################################

if [ &amp;#34;${ZONE_SERVEURS}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 for zone_serveurs_device in ${ZONE_SERVEURS} ;do
	if [ &amp;#34;${PORTS_TCP_ZONE_SERVEURS_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
	 echo -e &amp;#34;${GRAS}${JAUNE}TCP connections on server zone interface ${zone_serveurs_device}:${NORMAL}\t${VERT}OK${NORMAL}&amp;#34;

	 for port_no in ${PORTS_TCP_ZONE_SERVEURS_AUTHORISES} ;do
		${IPTABLES} -t filter -A INPUT -p tcp -i ${zone_serveurs_device} --dport ${port_no} -j ACCEPT

		if [ &amp;#34;0${port_no}&amp;#34; == &amp;#34;021&amp;#34; ] ;then
		 ${IPTABLES} -t filter -A INPUT -p tcp -i ${zone_serveurs_device} --sport 20 --dport 1024:65535 ! --syn -j ACCEPT
		fi
	 done
	fi
 done
fi

###################################################
## Allow UDP connections on the ##
## server zone device ##
###################################################

if [ &amp;#34;${ZONE_SERVEURS}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 for zone_serveurs_device in ${ZONE_SERVEURS} ;do
	if [ &amp;#34;${PORTS_UDP_ZONE_SERVEURS_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
	 echo -e &amp;#34;${GRAS}${JAUNE}UDP connections on server zone interface ${zone_serveurs_device}:${NORMAL}\t${VERT}OK${NORMAL}&amp;#34;

	 for port_no in ${PORTS_UDP_ZONE_SERVEURS_AUTHORISES} ;do
		${IPTABLES} -t filter -A INPUT -p udp -i ${zone_serveurs_device} --dport ${port_no} -j ACCEPT
	 done
	fi
 done
fi

###################################################
## Allow TCP connections on the ##
## LAN device ##
###################################################

if [ &amp;#34;${LAN}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 for lan_device in ${LAN} ;do
	if [ &amp;#34;${PORTS_TCP_LAN_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
	 echo -e &amp;#34;${GRAS}${JAUNE}TCP connections on LAN interface ${lan_device}:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

	 for port_no in ${PORTS_TCP_LAN_AUTHORISES} ;do
		${IPTABLES} -t filter -A INPUT -p tcp -i ${lan_device} --dport ${port_no} -j ACCEPT

		if [ &amp;#34;0${port_no}&amp;#34; == &amp;#34;021&amp;#34; ] ;then
		 ${IPTABLES} -t filter -A INPUT -p tcp -i ${lan_device} --sport 20 --dport 1024:65535 ! --syn -j ACCEPT
		fi
	 done
	fi
 done
fi


###################################################
## Allow UDP connections on the ##
## LAN device ##
###################################################

if [ &amp;#34;${LAN}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 for lan_device in ${LAN} ;do
	if [ &amp;#34;${PORTS_UDP_LAN_AUTHORISES}&amp;#34; != &amp;#34;&amp;#34; ] ;then
	 echo -e &amp;#34;${GRAS}${JAUNE}UDP connections on LAN interface ${lan_device}:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

	 for port_no in ${PORTS_UDP_LAN_AUTHORISES} ;do
		${IPTABLES} -t filter -A INPUT -p udp -i ${lan_device} --dport ${port_no} -j ACCEPT
	 done
	fi
 done
fi
echo -e &amp;#34;&amp;#34;


###################################################
## Masquerade the LAN ##
###################################################

if [ &amp;#34;${MASQ_LAN}&amp;#34; = &amp;#34;YES&amp;#34; -o &amp;#34;${MASQ_LAN}&amp;#34; = &amp;#34;yes&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Enabling Masquerading for the LAN:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for reseau in ${RESEAUX_LAN} ;do
	${IPTABLES} -t nat -A POSTROUTING -s ${reseau} -o ${INTERNET} -j MASQUERADE
	${IPTABLES} -t filter -A FORWARD -s ${reseau} -j ACCEPT
 done
fi


###################################################
## Masquerade the DMZ ##
###################################################

if [ &amp;#34;${MASQ_DMZ}&amp;#34; = &amp;#34;YES&amp;#34; -o &amp;#34;${MASQ_DMZ}&amp;#34; = &amp;#34;yes&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Enabling Masquerading for the DMZ:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for reseau in ${RESEAUX_DMZ} ;do
	${IPTABLES} -t nat -A POSTROUTING -s ${reseau} -o ${INTERNET} -j MASQUERADE
	${IPTABLES} -t filter -A FORWARD -s ${reseau} -j ACCEPT
 done
fi

###################################################
## Masquerade the server zone ##
###################################################

if [ &amp;#34;${MASQ_ZONE_SERVEURS}&amp;#34; = &amp;#34;YES&amp;#34; -o &amp;#34;${MASQ_ZONE_SERVEURS}&amp;#34; = &amp;#34;yes&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Enabling Masquerading for the server zone:${NORMAL}\t${VERT}OK${NORMAL}&amp;#34;

 for reseau in ${RESEAUX_ZONE_SERVEURS} ;do
	${IPTABLES} -t nat -A POSTROUTING -s ${reseau} -o ${INTERNET} -j MASQUERADE
	${IPTABLES} -t filter -A FORWARD -s ${reseau} -j ACCEPT
 done
fi


###################################################
## Enable TCP NAT ##
###################################################

if [ &amp;#34;${NAT_TCP_NET}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Enabling TCP network address translation:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for translation in ${NAT_TCP_NET} ;do
	srcport=`echo ${translation} | sed &amp;#39;s/&amp;gt;.*//g&amp;#39;|cut -d : -f 2`
	srchost=`echo ${translation} | sed &amp;#39;s/:.*//g&amp;#39;`
	desthost=`echo ${translation} | sed &amp;#39;s/.*&amp;gt;//g&amp;#39;| cut -d : -f 1`
	destport=`echo ${translation} | sed &amp;#39;s/.*://g&amp;#39;`

	${IPTABLES} -t nat -A PREROUTING -p tcp -i ${INTERNET_NAT} -d ${srchost} --dport ${srcport} -j DNAT --to ${desthost}:${destport}
	${IPTABLES} -A FORWARD -p tcp -i ${INTERNET_NAT} -d ${desthost} --dport ${destport} -j ACCEPT
 done
fi


###################################################
## Enable UDP NAT ##
###################################################

if [ &amp;#34;${NAT_UDP_NET}&amp;#34; != &amp;#34;&amp;#34; ] ;then
 echo -e &amp;#34;${GRAS}${JAUNE}Enabling UDP network address translation:${NORMAL}\t\t${VERT}OK${NORMAL}&amp;#34;

 for translation in ${NAT_UDP_NET} ;do
	srcport=`echo ${translation} | sed &amp;#39;s/&amp;gt;.*//g&amp;#39;|cut -d : -f 2`
	srchost=`echo ${translation} | sed &amp;#39;s/:.*//g&amp;#39;`
	desthost=`echo ${translation} | sed &amp;#39;s/.*&amp;gt;//g&amp;#39;| cut -d : -f 1`
	destport=`echo ${translation} | sed &amp;#39;s/.*://g&amp;#39;`

	${IPTABLES} -t nat -A PREROUTING -p udp -i ${INTERNET_NAT} -d ${srchost} --dport ${srcport} -j DNAT --to ${desthost}:${destport}
	${IPTABLES} -A FORWARD -p udp -i ${INTERNET_NAT} -d ${desthost} --dport ${destport} -j ACCEPT
 done
fi

###################################################
## FUCK nimda and codered:) ##
###################################################

echo -e &amp;#34;${GRAS}${JAUNE}Protection against Nimda and codered:${NORMAL}\t\t\t${VERT}OK${NORMAL}&amp;#34;
${IPTABLES} -I INPUT -j DROP -m string -p tcp -s 0.0.0.0/0 --string &amp;#34;c&amp;#43;dir&amp;#34;
${IPTABLES} -I INPUT -j DROP -m string -p tcp -s 0.0.0.0/0 --string &amp;#34;c&amp;#43;tftp&amp;#34;
${IPTABLES} -I INPUT -j DROP -m string -p tcp -s 0.0.0.0/0 --string &amp;#34;cmd.exe&amp;#34;
${IPTABLES} -I INPUT -j DROP -m string -p tcp -s 0.0.0.0/0 --string &amp;#34;default.ida&amp;#34;
${IPTABLES} -I FORWARD -j DROP -m string -p tcp -s 0.0.0.0/0 --string &amp;#34;c&amp;#43;dir&amp;#34;
${IPTABLES} -I FORWARD -j DROP -m string -p tcp -s 0.0.0.0/0 --string &amp;#34;c&amp;#43;tftp&amp;#34;
${IPTABLES} -I FORWARD -j DROP -m string -p tcp -s 0.0.0.0/0 --string &amp;#34;cmd.exe&amp;#34;
${IPTABLES} -I FORWARD -j DROP -m string -p tcp -s 0.0.0.0/0 --string &amp;#34;default.ida&amp;#34;


###################################################
## Enable logging ##
###################################################

echo -ne &amp;#34;${GRAS}${JAUNE}Enabling logging system:${NORMAL}&amp;#34;
${IPTABLES} -t filter -A INPUT -p tcp -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;INPUT TCP DROPPED: &amp;#34;
${IPTABLES} -t filter -A INPUT -p udp -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;INPUT UDP DROPPED: &amp;#34;
${IPTABLES} -t filter -A INPUT -p icmp -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;INPUT ICMP DROPPED: &amp;#34;
${IPTABLES} -t filter -A INPUT -f -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;INPUT FRAGMENT DROPPED: &amp;#34;
${IPTABLES} -t filter -A INPUT -p all -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;INPUT PROTOCOL DROPPED: &amp;#34;

${IPTABLES} -t filter -A FORWARD -p tcp -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;FORWARD TCP DROPPED: &amp;#34;
${IPTABLES} -t filter -A FORWARD -p udp -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;FORWARD UDP DROPPED: &amp;#34;
${IPTABLES} -t filter -A FORWARD -p icmp -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;FORWARD ICMP DROPPED: &amp;#34;
${IPTABLES} -t filter -A FORWARD -f -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;FORWARD FRAGMENT DROPPED: &amp;#34;
${IPTABLES} -t filter -A FORWARD -p all -m limit --limit ${LOG_FLOOD} -j LOG --log-level info --log-prefix &amp;#34;FORWARD PROTOCOL DROPPED: &amp;#34;
echo -e &amp;#34;\t\t\t\t${VERT}OK${NORMAL}&amp;#34;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="example-5">Example 5 &lt;a href="#example-5" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="260d868" class="language-bash ">
 &lt;code>#!/bin/bash

#-------------------------------------------------------------------------
# Essentials
#-------------------------------------------------------------------------

IPTABLES=&amp;#39;/sbin/iptables&amp;#39;;
modprobe nf_conntrack_ftp

#-------------------------------------------------------------------------
# Physical and virtual interfaces definitions
#-------------------------------------------------------------------------

# Interfaces
wan_if=&amp;#34;eth0&amp;#34;;
vpn_if=&amp;#34;tap0&amp;#34;;

#-------------------------------------------------------------------------
# Networks definitions
#-------------------------------------------------------------------------

# Networks
wan_ip=&amp;#34;x.x.x.x&amp;#34;;
lan_net=&amp;#34;192.168.90.0/24&amp;#34;;
vpn_net=&amp;#34;192.168.20.0/24&amp;#34;;

# IPs
ed_ip=&amp;#34;192.168.90.1&amp;#34;;
banzai_ip=&amp;#34;192.168.90.2&amp;#34;;

#-------------------------------------------------------------------------
# Global Rules input / output / forward
#-------------------------------------------------------------------------

# Flushing tables
$IPTABLES -F
$IPTABLES -X
$IPTABLES -t nat -F

# Define default policy
$IPTABLES -P INPUT DROP
$IPTABLES -P OUTPUT ACCEPT
$IPTABLES -P FORWARD ACCEPT

$IPTABLES -A INPUT -j ACCEPT -d $lan_net;
$IPTABLES -A INPUT -j ACCEPT -m state --state ESTABLISHED,RELATED

#-------------------------------------------------------------------------
# Allow masquerading for VE
#-------------------------------------------------------------------------

# Activating masquerade to get Internet from VE
$IPTABLES -t nat -A POSTROUTING -o $wan_if -s $lan_net -j MASQUERADE

# Activating masquerade to get VPN access from VE
$IPTABLES -t nat -A POSTROUTING -o tap0 -j MASQUERADE

#-------------------------------------------------------------------------
# Allow ports on CT
#-------------------------------------------------------------------------

# Allow ICMP
$IPTABLES -A INPUT -j ACCEPT -p icmp

# SSH access
$IPTABLES -A INPUT -j ACCEPT -p tcp --dport 22

#-------------------------------------------------------------------------
# Redirections for incoming connections (wan)
#-------------------------------------------------------------------------

# HTTP access
$IPTABLES -t nat -A PREROUTING -p tcp --dport 80 -d $wan_ip -j DNAT --to-destination $ed_ip:80

# HTTPS access
$IPTABLES -t nat -A PREROUTING -p tcp --dport 443 -d $wan_ip -j DNAT --to-destination $ed_ip:443&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="example-6">Example 6 &lt;a href="#example-6" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="8098b08" class="language-bash ">
 &lt;code>#!/bin/bash
clear
echo &amp;#34;############################## Firewall Rules ###################################&amp;#34;
# Enable routing
echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward

echo &amp;#34;Initializing rules&amp;#34;

# Clear all rules
iptables -F
iptables -t nat -F
# Apply basic policies
# Allow internal traffic
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT
# Block all entry and exit
iptables -t nat -P PREROUTING DROP
iptables -t nat -P POSTROUTING DROP

# Internal traffic allowed
echo &amp;#34;Internal traffic&amp;#34;
iptables -t nat -I POSTROUTING -o lo -j ACCEPT
iptables -t nat -I PREROUTING -i lo -j ACCEPT


# Network card definitions
WEB=&amp;#34;ppp0&amp;#34;
DMZ=&amp;#34;eth2&amp;#34;
COM=&amp;#34;eth1&amp;#34;
STA=&amp;#34;eth0&amp;#34;
PPP=&amp;#34;ppp0&amp;#34;

# IP network definitions
NET_COM=&amp;#34;10.0.0.0/8&amp;#34;
NET_STA=&amp;#34;192.168.2.0/24&amp;#34;
NET_DMZ=&amp;#34;172.16.1.0/24&amp;#34;

# Server definitions for external connection to servers
REMOTE=&amp;#34;192.168.2.8:81&amp;#34;
FICS=&amp;#34;172.16.1.6/32&amp;#34;
EXC=&amp;#34;172.16.1.3/32&amp;#34;
DC=&amp;#34;172.16.1.1/32&amp;#34;
MAIL=&amp;#34;172.16.1.3:25&amp;#34;
HTTP=&amp;#34;172.16.1.4:80&amp;#34;
EMULE=&amp;#34;172.16.1.4:5555&amp;#34;
RDP=&amp;#34;172.16.1.4:3389&amp;#34;
PPTP=&amp;#34;172.16.1.1&amp;#34;
VUE=&amp;#34;192.168.2.8/32&amp;#34;
MAILWEB=&amp;#34;172.16.1.3/32&amp;#34;
LINUX2=&amp;#34;172.16.1.7/32&amp;#34;
LINUX=&amp;#34;192.168.2.5/32&amp;#34;
YONI=&amp;#34;192.168.2.62/32&amp;#34;
WIFI=&amp;#34;192.168.2.7/32&amp;#34;

# Common Rules
# ====================== &amp;gt;&amp;gt;&amp;gt;&amp;gt; Masquerade all networks to the internet
echo &amp;#34;Applying common rules&amp;#34;
# All outgoing traffic to Internet is masqueraded
iptables -t nat -I POSTROUTING -s $NET_STA -d $NET_DMZ -j MASQUERADE

# Squid must always go out to internal clients

iptables -t nat -I POSTROUTING -p tcp --sport 3128 -d $NET_STA -j ACCEPT

iptables -t nat -I POSTROUTING -o $WEB -j MASQUERADE

iptables -t nat -I POSTROUTING -o $COM -j MASQUERADE

iptables -t nat -A POSTROUTING -s $NET_STA -o $COM -j DROP
iptables -t nat -A POSTROUTING -s $NET_DMZ -o $COM -j DROP


iptables -I INPUT -i $WEB -m state --state ESTABLISHED -j ACCEPT
iptables -I OUTPUT -m state --state ESTABLISHED -j ACCEPT

iptables -I INPUT -i $COM -m state --state ESTABLISHED -j ACCEPT

# Allow standard internal routing

# ====================== &amp;gt;&amp;gt;&amp;gt;&amp;gt; DHCP
echo &amp;#34;Allowing DHCP traffic&amp;#34;
iptables -t nat -A PREROUTING -p udp --dport 67:68 -j ACCEPT
iptables -t nat -A POSTROUTING -p udp --sport 67:68 -j ACCEPT

echo &amp;#34;Local DNS to SRV-DC&amp;#34;
iptables -t nat -A PREROUTING -p udp --sport 53 -i $DMZ -s &amp;#34;172.16.1.1/32&amp;#34; -j ACCEPT
iptables -t nat -A POSTROUTING -p udp --dport 53 -o $DMZ -d &amp;#34;172.16.1.1/32&amp;#34; -j ACCEPT

iptables -t nat -A PREROUTING -p tcp --sport 53 -i $DMZ -s &amp;#34;172.16.1.1/32&amp;#34; -j ACCEPT
iptables -t nat -A POSTROUTING -p tcp --dport 53 -o $DMZ -d &amp;#34;172.16.1.1/32&amp;#34; -j ACCEPT

# Network access rules
# 1 --&amp;gt; DMZ
	echo &amp;#34;====================== &amp;gt;&amp;gt;&amp;gt;&amp;gt; Rules for commercial machines&amp;#34;
	echo &amp;#34;Daytime rules&amp;#34;
	echo &amp;#34;Access based on time&amp;#34;

	iptables -t nat -I PREROUTING -i $DMZ -m time --timestart 08:45 --timestop 17:45 \
		--days Mon,Tue,Wed,Thu,Fri -p tcp -m multiport --ports 20,21,80,3128,1863,110,119,25,8080,9000 -j ACCEPT

	echo &amp;#34;Nighttime rules&amp;#34;
	iptables -t nat -I PREROUTING -i $DMZ -m time --timestart 17:46 --timestop 23:59 \
		--days Mon,Tue,Wed,Thu -p tcp -j ACCEPT
 iptables -t nat -I PREROUTING -i $DMZ -m time --timestart 00:00 --timestop 08:44 \
 --days Mon,Tue,Wed,Thu,Fri -p tcp -j ACCEPT

	# No limits on weekends
	echo &amp;#34;No limits on weekends&amp;#34;
 iptables -t nat -I PREROUTING -i $DMZ -m time --timestart 17:46 --timestop 23:59 \
 --days Fri -p tcp -j ACCEPT
 iptables -t nat -I PREROUTING -i $DMZ -m time --timestart 00:00 --timestop 23:59 \
 --days Sat,Sun -p tcp -j ACCEPT


	iptables -t nat -I PREROUTING -i $DMZ -p udp --dport 53 -j ACCEPT
	#====&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Transparent proxy for commercial users
	iptables -t nat -I PREROUTING -p tcp -i $DMZ --dport 80 -j REDIRECT --to-port 3128
	iptables -t nat -A PREROUTING -p tcp -i $DMZ --dport 443 -j ACCEPT
#	iptables -t nat -A PREROUTING -p tcp -i $DMZ --dport 443 -j REDIRECT --to-port 3128

	echo &amp;#34;====================== &amp;gt;&amp;gt;&amp;gt;&amp;gt; Rules for classrooms&amp;#34;
# 2 --&amp;gt; Classroom &amp;lt;-&amp;gt; DMZ
#	A - FICS2
	echo &amp;#34;	Classroom -&amp;gt; SRV-FICS2&amp;#34;
	iptables -t nat -A PREROUTING -p tcp -d $FICS -j ACCEPT
	iptables -t nat -A PREROUTING -p tcp --dport 80 -d $MAILWEB -j ACCEPT
	iptables -t nat -A POSTROUTING -s $NET_DMZ -d $NET_STA -j ACCEPT
# 3 --&amp;gt; Classroom &amp;lt;-&amp;gt; Internet
#	A - HTTP
	echo &amp;#34;	Classroom -&amp;gt; Internet with Squid&amp;#34;
	iptables -t nat -A PREROUTING -p tcp -i $STA --dport 80 -j REDIRECT --to-port 3128
	iptables -t nat -A PREROUTING -p tcp -i $STA --dport 443 -j ACCEPT

#	C - DNS
	iptables -t nat -A PREROUTING -p udp -i $STA --dport 53 -j ACCEPT
#	iptables -t nat -A PREROUTING -p tcp -i $STA --dport 53 -j ACCEPT

	echo &amp;#34;====================== &amp;gt;&amp;gt;&amp;gt;&amp;gt; Rules for Internet to internal network&amp;#34;
# 5 --&amp;gt; Internet &amp;lt;--&amp;gt; DMZ
#	A - SMTP
		echo &amp;#34;	SMTP&amp;#34;
		iptables -t nat -I PREROUTING -i $WEB -p tcp --dport 25 -j DNAT --to-destination $MAIL
		iptables -t nat -I POSTROUTING -o $DMZ -d $EXC -p tcp --dport 25 -j ACCEPT

#	B - WEB
		echo &amp;#34;	WEB&amp;#34;
		iptables -t nat -A PREROUTING -i $WEB -p tcp --dport 80 -j DNAT --to-destination $HTTP
		iptables -t nat -A POSTROUTING -o $DMZ -d &amp;#34;172.16.1.4/32&amp;#34; -p tcp --dport 80 -j MASQUERADE
#	B&amp;#39; - EMULE
		iptables -t nat -A PREROUTING -i $WEB -p tcp --dport 5555 -j DNAT --to-destination $EMULE
		iptables -t nat -A POSTROUTING -o $DMZ -d &amp;#34;172.16.1.4/32&amp;#34; -p tcp --dport 5555 -j MASQUERADE
		iptables -t nat -A PREROUTING -i $WEB -p udp --dport 5555 -j DNAT --to-destination $HTTP
		iptables -t nat -A POSTROUTING -o $DMZ -d &amp;#34;172.16.1.4/32&amp;#34; -p udp --dport 5555 -j MASQUERADE
#	C - PPTP
		echo &amp;#34;	PPTP&amp;#34;
		iptables -t nat -A PREROUTING -i $WEB -p 47 -j DNAT --to-destination $PPTP
		iptables -t nat -A POSTROUTING -o $DMZ -p 47 -j MASQUERADE
		iptables -t nat -A PREROUTING -i $WEB -p tcp --dport 1723 -j DNAT --to-destination $PPTP
		iptables -t nat -A POSTROUTING -o $DMZ -p tcp --dport 1723 -j MASQUERADE

#	D - SSH from outside or only for authorized internal machines
		echo &amp;#34;	SSH from Internet&amp;#34;
		iptables -t nat -A PREROUTING -s 172.16.1.0/24 -p tcp --dport 22 -j ACCEPT

# E - FTP
 echo &amp;#34; FTP IS DISABLED!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&amp;#34;
 #iptables -t nat -A PREROUTING -i $WEB -p tcp --dport 20 -j DNAT --to-destination &amp;#34;172.16.1.4:20&amp;#34;
 #iptables -t nat -A PREROUTING -i $WEB -p tcp --dport 21 -j DNAT --to-destination &amp;#34;172.16.1.4:21&amp;#34;
 #iptables -t nat -A POSTROUTING -o $DMZ -d &amp;#34;172.16.1.4/32&amp;#34; -p tcp --dport 21 -j MASQUERADE

 #iptables -t nat -A POSTROUTING -o $DMZ -d &amp;#34;172.16.1.4/32&amp;#34; -p tcp --dport 20 -j MASQUERADE

#	F - RDP
		echo &amp;#34; RDP&amp;#34;
		iptables -t nat -A PREROUTING -i $WEB -p tcp --dport 3389 -j DNAT --to-destination $RDP
 iptables -t nat -A POSTROUTING -o $DMZ -d &amp;#34;172.16.1.4/32&amp;#34; -p tcp --dport 3389 -j MASQUERADE
#	G - SNMP
		echo &amp;#34; SNMP&amp;#34;
		iptables -t nat -A POSTROUTING -p tcp --dport 161 -j ACCEPT
		iptables -t nat -A POSTROUTING -p udp --dport 161 -j ACCEPT
		iptables -t nat -A POSTROUTING -p udp --dport 162 -j ACCEPT


# 6 --&amp;gt; Access by MAC address
	echo &amp;#34;====================== &amp;gt;&amp;gt;&amp;gt;&amp;gt; Special rules for internal users&amp;#34;
	echo &amp;#34;	Yoni&amp;#34;
#	A - Yoni
		iptables -t nat -I PREROUTING -m mac --mac-source &amp;#39;00:00:F0:82:58:AF&amp;#39; -j ACCEPT
		iptables -t nat -I PREROUTING -m mac --mac-source &amp;#39;00:04:23:76:63:10&amp;#39; -j ACCEPT

#	A&amp;#39; - OlivierG
		iptables -t nat -I PREROUTING -s 192.168.2.69/32 -m mac --mac-source &amp;#39;00:0d:60:75:b8:75&amp;#39; -j ACCEPT
		iptables -t nat -I PREROUTING -s 192.168.2.39/32 -m mac --mac-source &amp;#39;00:0C:F1:43:14:05&amp;#39; -j ACCEPT

#	B - Olivier all
	echo &amp;#34;	OlivierC&amp;#34;
	iptables -t nat -I PREROUTING -s 192.168.2.63/32 -m mac --mac-source &amp;#39;00:90:F5:1E:51:A1&amp;#39; -j ACCEPT
	iptables -t nat -I PREROUTING -s 172.16.1.63/32 -m mac --mac-source &amp;#39;00:90:F5:1E:51:A1&amp;#39; -j ACCEPT
	# Wifi Olivier
	iptables -t nat -I PREROUTING -m mac --mac-source &amp;#39;00:A0:C5:B1:DD:15&amp;#39; -j ACCEPT
#	C - Steeve all
	echo &amp;#34;	Steeve&amp;#34;
		iptables -t nat -I PREROUTING -s 192.168.2.64/32 -m mac --mac-source &amp;#39;00:08:02:04:fa:d7&amp;#39; -j ACCEPT
		iptables -t nat -I PREROUTING -m mac --mac-source &amp;#39;00:08:02:04:fa:d7&amp;#39; -j ACCEPT
#	D - Portable Compaq
	echo &amp;#34;	Portable Compaq&amp;#34;
		iptables -t nat -I PREROUTING -s 192.168.2.65/32 -m mac --mac-source &amp;#39;00:50:8B:FA:B9:5B&amp;#39; \
		-p tcp -m multiport --ports 443,110,25,119 -j ACCEPT
 iptables -t nat -I PREROUTING -s 192.168.2.65/32 -m mac --mac-source &amp;#39;00:50:8B:FA:B9:5B&amp;#39; \
 -p udp --dport 53 -j ACCEPT
 iptables -t nat -I PREROUTING -s 192.168.2.65/32 -m mac --mac-source &amp;#39;00:50:8B:FA:B9:5B&amp;#39; \
		-d $NET_DMZ -j ACCEPT

#	D&amp;#39; Portable Toshiba
	echo &amp;#34;	Portable Toshiba&amp;#34;
		iptables -t nat -I PREROUTING -s 192.168.2.67/32 -m mac --mac-source &amp;#39;00:01:02:E7:36:E3&amp;#39; \
 -p tcp -m multiport --ports 443,110,25,119 -j ACCEPT
		iptables -t nat -I PREROUTING -s 192.168.2.67/32 -m mac --mac-source &amp;#39;00:01:02:E7:36:E3&amp;#39; \
 -p udp --dport 53 -j ACCEPT
		iptables -t nat -I PREROUTING -s 192.168.2.67/32 -m mac --mac-source &amp;#39;00:01:02:E7:36:E3&amp;#39; \
 -d $NET_DMZ -j ACCEPT

#	E - VUE Server
	echo &amp;#34;	 VUE Server&amp;#34;
	iptables -t nat -I PREROUTING -s $VUE -m mac --mac-source &amp;#39;00:0c:6e:c5:42:6c&amp;#39; -j ACCEPT
	iptables -t nat -I PREROUTING -i $DMZ -d $VUE -j ACCEPT
#	F- Linux Server Ground Floor
	echo &amp;#34; Linux Server&amp;#34;
	iptables -t nat -I PREROUTING -i $DMZ -d $LINUX -j ACCEPT

#	F - Quentin Laptop
	echo &amp;#34; Quentin&amp;#34;
		iptables -t nat -I PREROUTING -s 172.16.1.65/32 -m mac --mac-source &amp;#39;00:0b:db:a1:c2:a5&amp;#39; -j ACCEPT
		iptables -t nat -I PREROUTING -s 192.168.2.65/32 -m mac --mac-source &amp;#39;00:0b:db:a1:c2:a5&amp;#39; -j ACCEPT
		iptables -t nat -I PREROUTING -s 192.168.2.65/32 -m mac --mac-source &amp;#39;00:a0:c5:b1:da:f8&amp;#39; -j ACCEPT

#	F - Eva Laptop
	echo &amp;#34; Eva is grounded&amp;#34;
		#iptables -t nat -I PREROUTING -m mac --mac-source &amp;#39;00:02:3f:13:bb:21&amp;#39; -j ACCEPT

#	G - Lionel Laptop
	echo &amp;#34; Lionel&amp;#34;
		iptables -t nat -I PREROUTING \
		-m mac --mac-source &amp;#39;00:0D:60:2C:12:95&amp;#39; -j ACCEPT

#	H - WIFI ROUTER
	echo &amp;#34; WIFI ROUTER&amp;#34;
		iptables -t nat -I PREROUTING \
		-m mac --mac-source &amp;#39;00:0F:66:33:20:12&amp;#39; -j ACCEPT
echo &amp;#34;############################## END ===&amp;gt; Firewall Rules ###################################&amp;#34;
	iptables -t nat -I PREROUTING -s $LINUX -j ACCEPT
	iptables -t nat -I PREROUTING -s $LINUX2 -j ACCEPT

iptables -t nat -I PREROUTING -s 172.16.1.1/32 -j ACCEPT
iptables -t nat -I PREROUTING -s 172.16.1.2/32 -j ACCEPT
iptables -t nat -I PREROUTING -s 172.16.1.3/32 -j ACCEPT
iptables -t nat -I PREROUTING -s 172.16.1.4/32 -j ACCEPT
iptables -t nat -I PREROUTING -s 172.16.1.5/32 -j ACCEPT
iptables -t nat -I PREROUTING -s 192.168.2.95/32 -j ACCEPT&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>OpenSSH : Tunneling VPN</title><link>https://wiki.deimos.fr/OpenSSH_:_Tunneling_VPN/</link><pubDate>Fri, 14 May 2010 22:46:00 +0200</pubDate><guid>https://wiki.deimos.fr/OpenSSH_:_Tunneling_VPN/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Since version 4.3 of OpenSSH, the option to create IP tunnels has been added.&lt;/p>
&lt;p>First, you need to check the OpenSSH version on both the server and client.&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="cd7213d" class="language-bash ">
 &lt;code>ssh -v&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>You need root privileges on both machines. There are operations to perform, both at the configuration and network levels.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="server">Server &lt;a href="#server" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;h4 id="openbsd">OpenBSD &lt;a href="#openbsd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h4>&lt;p>The first thing to do is to tell OpenSSH to authorize tunnels by adding this directive:&lt;/p></description></item><item><title>Packet Filter: Fighting Against Brute Force Attacks</title><link>https://wiki.deimos.fr/Packet_Filter:_Lutter_contre_le_bruteforce/</link><pubDate>Fri, 16 Apr 2010 07:18:00 +0200</pubDate><guid>https://wiki.deimos.fr/Packet_Filter:_Lutter_contre_le_bruteforce/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You&amp;rsquo;ve probably seen brute force connection attempts in your connection logs (sshd, httpd, ftpd, etc.). This is annoying, fills up your logs, and makes your server work harder than it needs to.&lt;/p>
&lt;p>Fortunately, Daniel Hartmeier thought of you and added convenient options to his famous PacketFilter firewall, affectionately nicknamed PF. These options are &amp;lsquo;max-src-conn-rate&amp;rsquo; and &amp;lsquo;max-src-conn&amp;rsquo;, which are used in combination with &amp;lsquo;overload&amp;rsquo;. These options are available in PF starting with OpenBSD 3.7, FreeBSD 6.0, and NetBSD 2.0.&lt;/p></description></item><item><title>Mixing Apache Authentication</title><link>https://wiki.deimos.fr/Mixing_Apache_Authentication/</link><pubDate>Sun, 11 Apr 2010 15:02:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mixing_Apache_Authentication/</guid><description>&lt;h2 id="mixing-pam">Mixing PAM &lt;a href="#mixing-pam" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="linux">Linux &lt;a href="#linux" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>How to mix PAM authentication (mod_auth_pam) and text file authentication (mod_auth) with Apache. First install this package:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="523dc2c" class="language-bash ">
 &lt;code>apt-get install libapache2-mod-auth-pam&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Then configure your htaccess:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="91ed4dd" class="language-bash ">
 &lt;code>AuthPAM_Enabled on
AuthPAM_FallThrough on
AuthAuthoritative Off
AuthUserFile /etc/apache2/htpassword
AuthType Basic
AuthName &amp;#34;Restricted Access&amp;#34;
Require valid-user&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If mod_auth_pam doesn&amp;rsquo;t find a valid user, it falls back to mod_auth authentication automatically.&lt;/p>
&lt;p>Here is another example with webdav:&lt;/p>



 
 
 

 
 
 
 
 
 

 
 

 &lt;div class="prism-codeblock linenos">
 &lt;pre id="17f3a63" class="language-apache line-numbers">
 &lt;code> Alias /webdav /var/www/ngs
 &amp;lt;Location /webdav&amp;gt;
 DAV On
 AuthPAM_Enabled on
 AuthBasicAuthoritative Off 
 AuthPAM_FallThrough off 
 AuthUserFile /dev/null
 AuthType Basic
 AuthName &amp;#34;Webdav Authentication&amp;#34;
 Require group ngs 
 &amp;lt;/Location&amp;gt;&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="openbsd">OpenBSD &lt;a href="#openbsd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>On OpenBSD, I had to install &lt;a href="https://www.25thandclement.com/~william/projects/bsdauth.html" rel="external" target="_blank">mod_auth_bsd&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>:&lt;/p></description></item><item><title>SpamAssassin Installation and Configuration</title><link>https://wiki.deimos.fr/Installation_et_configuration_de_SpamAssassin/</link><pubDate>Mon, 15 Mar 2010 10:17:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_et_configuration_de_SpamAssassin/</guid><description>&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To install SpamAssassin, it&amp;rsquo;s very simple:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="8db8482" class="language-bash ">
 &lt;code>apt-get install spamassassin libmail-spf-query-perl&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s my configuration file that you can adapt to your needs (&lt;code>/etc/spamassassin/local.cf&lt;/code>):&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="97bf068" class="language-bash ">
 &lt;code># SpamAssassin Configuration
rewrite_header Subject *****SPAM*****
use_bayes 1
bayes_auto_learn 1
required_score 5.0
skip_rbl_checks 0
report_safe 0

#pyzor
#use_pyzor 1
#pyzor_path /usr/bin/pyzor

#razor
#use_razor2 1
#razor_config /etc/razor/razor-agent.conf

ok_locales en fr
whitelist_from *@deimos.fr noreply@lists.silicon.fr
blacklist_from *@mandrivaclub.com&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Now, we need to enable SpamAssassin to start automatically. For this, in the file &lt;code>/etc/default/spamassassin&lt;/code>, change from:&lt;/p></description></item><item><title>Force User to Change Password at First Login</title><link>https://wiki.deimos.fr/Forcer_un_utilisateur_%C3%A0_changer_son_mot_de_passe_%C3%A0_la_premi%C3%A8re_connexion/</link><pubDate>Sun, 14 Mar 2010 20:48:00 +0200</pubDate><guid>https://wiki.deimos.fr/Forcer_un_utilisateur_%C3%A0_changer_son_mot_de_passe_%C3%A0_la_premi%C3%A8re_connexion/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Indeed, I was looking for how to force a user to change their password during their first login session. Well, nothing obvious except that if we set an account to expire, the user will then be forced to change their password.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If you are root, you can specify the user whose account you want to expire as follows:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="9ee6efa" class="language-bash ">
 &lt;code>chsh -s /bin/MySecureShell username&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>And otherwise, a user can change their shell themselves like this:&lt;/p></description></item><item><title>PAM-script: Execute Scripts at Authentication, Session Open and Close</title><link>https://wiki.deimos.fr/PAM-script_:_Executer_des_scripts_%C3%A0_l%27authentification,_l%27ouverture_et_la_fermeture_de_session/</link><pubDate>Sun, 14 Mar 2010 19:40:00 +0200</pubDate><guid>https://wiki.deimos.fr/PAM-script_:_Executer_des_scripts_%C3%A0_l%27authentification,_l%27ouverture_et_la_fermeture_de_session/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You may need to run some operations at authentication, session opening or closing. Here is a PAM module I&amp;rsquo;ve found that allows this functionality.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Download the module from &lt;a href="https://freshmeat.net/projects/pam_script/" rel="external" target="_blank">the Freshmeat project&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> and extract it:&lt;/p></description></item><item><title>Grimwepa: Easy WiFi Hacking</title><link>https://wiki.deimos.fr/Grimwepa%5C_:_le_hack_wifi_facile/</link><pubDate>Sun, 07 Mar 2010 21:55:00 +0200</pubDate><guid>https://wiki.deimos.fr/Grimwepa%5C_:_le_hack_wifi_facile/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This method is really designed for beginners and allows for easy cracking of wireless networks without any networking knowledge. It&amp;rsquo;s not the kind of method I usually prefer since it enables 16-year-olds to think they&amp;rsquo;re NASA-level hackers with these tools&amp;hellip; but anyway.&lt;/p>
&lt;p>This method is very practical when you don&amp;rsquo;t have much time. For the OS, I obviously recommend BackTrack, but Ubuntu can also work. For this tutorial, I&amp;rsquo;ll use Ubuntu.&lt;/p></description></item><item><title>ACL: Implementing NT-Style Permissions on Solaris</title><link>https://wiki.deimos.fr/ACL_Implementation_droits_type_NT_sur_Solaris/</link><pubDate>Wed, 10 Feb 2010 13:13:00 +0200</pubDate><guid>https://wiki.deimos.fr/ACL_Implementation_droits_type_NT_sur_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>With respect to a computer filesystem, an access control list (&lt;a href="https://en.wikipedia.org/wiki/Access_control_list" rel="external" target="_blank">ACL&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>) is a list of permissions attached to an object. An ACL specifies which users or system processes are granted access to objects, as well as what operations are allowed to be performed on given objects. In a typical ACL, each entry in the list specifies a subject and an operation (e.g. the entry (Alice, delete) on the ACL for file WXY gives Alice permission to delete file WXY).&lt;/p></description></item><item><title>Vsftpd: Setting up virtual hosts with MySQL</title><link>https://wiki.deimos.fr/Vsftpd_:_Mise_en_place_d%27h%C3%B4tes_virtuels_avec_MySQL/</link><pubDate>Thu, 21 Jan 2010 13:51:00 +0200</pubDate><guid>https://wiki.deimos.fr/Vsftpd_:_Mise_en_place_d%27h%C3%B4tes_virtuels_avec_MySQL/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://fr.wikipedia.org/wiki/Vsftpd" rel="external" target="_blank">vsFTPd&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>, short for Very Secure FTP Daemon, is a free, simple, and secure FTP server.&lt;/p>
&lt;p>It was developed with the best possible security in mind to address vulnerabilities in classic FTP servers.&lt;/p></description></item><item><title>WebDAV: Securing with SSL</title><link>https://wiki.deimos.fr/WebDav_:_S%C3%A9curiser_avec_SSL/</link><pubDate>Sun, 20 Dec 2009 10:41:00 +0200</pubDate><guid>https://wiki.deimos.fr/WebDav_:_S%C3%A9curiser_avec_SSL/</guid><description>&lt;p>Here is documentation on how to secure your WebDAV!&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://wiki.deimos.fr/pdf/how_to_set_up_webdav_with_mysql_authentication_on_apache2.pdf">How To Set Up WebDAV With MySQL Authentication On Apache2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.deimos.fr/pdf/how_to_set_up_webdav_with_apache2.pdf">How To Set Up WebDAV With Apache2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.deimos.fr/pdf/securewebdav.pdf">Documentation on Securing Webdav&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.deimos.fr/Mixing_Apache_Authentication/">Mixing Apache Authentication&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Encrypt and Decrypt a File with OpenSSL</title><link>https://wiki.deimos.fr/Crypter_et_d%C3%A9crypter_un_fichier_avec_OpenSSL/</link><pubDate>Fri, 11 Dec 2009 20:49:00 +0200</pubDate><guid>https://wiki.deimos.fr/Crypter_et_d%C3%A9crypter_un_fichier_avec_OpenSSL/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The OpenSSL Project is a collaborative effort to develop a robust, commercial-grade, full-featured, and Open Source toolkit implementing the Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1) protocols as well as a full-strength general purpose cryptography library. The project is managed by a worldwide community of volunteers that use the Internet to communicate, plan, and develop the OpenSSL toolkit and its related documentation.&lt;/p>
&lt;p>OpenSSL is based on the excellent SSLeay library developed by Eric A. Young and Tim J. Hudson. The OpenSSL toolkit is licensed under an Apache-style licence, which basically means that you are free to get and use it for commercial and non-commercial purposes subject to some simple license conditions.&lt;/p></description></item><item><title>PHP: Installation and Configuration</title><link>https://wiki.deimos.fr/PHP_:_Installation_et_configuration/</link><pubDate>Fri, 11 Dec 2009 20:04:00 +0200</pubDate><guid>https://wiki.deimos.fr/PHP_:_Installation_et_configuration/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Even though PHP works well with its initial configuration, it is sometimes essential to modify certain parameters, especially for security reasons. This article shows how to adapt PHP configuration to your applications&amp;rsquo; environment.&lt;/p>
&lt;p>It&amp;rsquo;s not very difficult to install PHP on a server and get an operational system. Generally, we are content with just that: installing PHP. But is that enough? Have you never needed to install an extension, modify the maximum size of memory allocated to PHP? Moreover, a critical part of securing your applications is done at this level. In this article, we&amp;rsquo;ll look in detail at the different configuration options for PHP and how to modify them. Some options must be activated during PHP compilation, others can be modified in Apache, and finally, for most of them, it will be necessary to make changes in the php.ini file(s). To conclude, I will introduce PHPSecInfo, a small utility that analyzes the security options you have chosen to apply to PHP.&lt;/p></description></item><item><title>Displaying Active Machines on the Current Network</title><link>https://wiki.deimos.fr/afficher-les-machines-allumees-sur-le-reseau-courant/</link><pubDate>Fri, 11 Dec 2009 19:05:00 +0200</pubDate><guid>https://wiki.deimos.fr/afficher-les-machines-allumees-sur-le-reseau-courant/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>There are several solutions to find which hosts are up on your network. A simple solution is to use nmap.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s how to do it:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="4a03f97" class="language-bash ">
 &lt;code>nmap -sP your network/submask | awk &amp;#34;/^Host/&amp;#34;&amp;#39;{ print $2 }&amp;#39;&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>Securing a Bind Architecture</title><link>https://wiki.deimos.fr/Securing_a_Bind_architecture/</link><pubDate>Fri, 20 Nov 2009 20:21:00 +0200</pubDate><guid>https://wiki.deimos.fr/Securing_a_Bind_architecture/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The figure below shows the general operation of DNS queries in an architecture with multiple DNS servers. Some of these servers (IP 192.168.69.1, 192.168.66.1, and 194.54.3.68) are associated with managing names for a fictional domain &lt;code>test.fr&lt;/code>. Another private DNS server (IP 10.59.1.3) is associated with managing a fictional private domain (invisible from the Internet) called &lt;code>here.local&lt;/code>. Two arbitrary external DNS servers located on the Internet are also represented.&lt;/p></description></item><item><title>PAM: Install pam_mkhomedir for Automatic User Home Directory Creation</title><link>https://wiki.deimos.fr/PAM_:_Installer_pam_mkhomedir_pour_la_cr%C3%A9ation_automatique_des_home_utilisateurs/</link><pubDate>Tue, 06 Oct 2009 08:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/PAM_:_Installer_pam_mkhomedir_pour_la_cr%C3%A9ation_automatique_des_home_utilisateurs/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You may be in a situation like mine where you have your Solaris connected to an LDAP server or similar, and you&amp;rsquo;re facing the problem of automatic home directory creation for users who connect. After 2-3 hours of struggles, I finally managed to compile and configure everything.&lt;/p>
&lt;p>Here&amp;rsquo;s my documentation to save time for others who might face the same issue.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites &lt;a href="#prerequisites" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>First, you&amp;rsquo;ll need a small package to avoid errors like this:&lt;/p></description></item><item><title>Installation and Configuration of a Bind9 Secondary (Slave) Server</title><link>https://wiki.deimos.fr/Installation_et_configuration_d'un_serveur_Bind9_secondaire_(Slave)/</link><pubDate>Sun, 04 Oct 2009 19:25:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_et_configuration_d'un_serveur_Bind9_secondaire_(Slave)/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>When you want to set up your own DNS server, you must have a secondary server. If you don&amp;rsquo;t have other machines, you can use Gandi, otherwise follow this guide.&lt;/p>
&lt;p>&lt;strong>Don&amp;rsquo;t forget to declare the secondary server on the primary server.&lt;/strong>&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On the secondary server:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="d5080ef" class="language-bash ">
 &lt;code>apt-get install bind9&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>For OpenBSD, nothing to do, it&amp;rsquo;s already installed by default.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Before beginning, &lt;strong>declare your secondary servers in your domain name records (update NS records + ACL in named.conf)&lt;/strong>, otherwise notifications won&amp;rsquo;t work.&lt;/p></description></item><item><title>Setting up SSL certificates with Apache 2</title><link>https://wiki.deimos.fr/Mise_en_place_de_certificats_SSL_sous_Apache_2/</link><pubDate>Thu, 24 Sep 2009 12:28:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_de_certificats_SSL_sous_Apache_2/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>SSL certificates are not always easy to understand and implement. Nevertheless, I will try to make it clear. For those who wish to be signed by a free certification authority, I invite you to visit the &lt;a href="https://www.cacert.org/" rel="external" target="_blank">CACert&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> website.&lt;/p></description></item><item><title>Sudo: Running commands as root without being root</title><link>https://wiki.deimos.fr/Sudo_:_Ex%C3%A9cuter_des_commandes_en_root_sans_l%27%C3%AAtre/</link><pubDate>Sun, 20 Sep 2009 18:01:00 +0200</pubDate><guid>https://wiki.deimos.fr/Sudo_:_Ex%C3%A9cuter_des_commandes_en_root_sans_l%27%C3%AAtre/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Sudo is frequently used and very practical because it allows occasional execution of commands as root without being logged in as root. It has several security options for usage.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>It&amp;rsquo;s super simple as usual:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="ea84b80" class="language-bash ">
 &lt;code>apt-get install sudo&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Edit the &lt;code>/etc/sudoers&lt;/code> file and adapt according to your needs&amp;hellip;&lt;/p>
&lt;h3 id="give-all-rights-to-a-person">Give all rights to a person &lt;a href="#give-all-rights-to-a-person" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Warning: this operation is equivalent to giving all root rights to a person. They will be able to change the root password, see everything, delete everything. If you wish to apply this type of rights, add this:&lt;/p></description></item><item><title>Banners: Hiding Application Banners (Service Banner Faking)</title><link>https://wiki.deimos.fr/Bani%C3%A8res_:_Cacher_les_bani%C3%A8res_de_ses_applications_%28Service_banner_faking%29/</link><pubDate>Fri, 17 Apr 2009 20:56:00 +0200</pubDate><guid>https://wiki.deimos.fr/Bani%C3%A8res_:_Cacher_les_bani%C3%A8res_de_ses_applications_%28Service_banner_faking%29/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This is a quick howto on faking service banners. Service banners often contain a lot of useful information for malicious script-kiddies, like the (real) running software on the remote host and its version number. Knowing this, they can better target their exploits. This howto deals with changing this information. Keep in mind that this won&amp;rsquo;t make your system more secure against a known exploit when you run a vulnerable service, however it can provide some &amp;lsquo;social engineering&amp;rsquo; security: script-kiddies often scan whole IP blocks for a known vulnerability, and only attack those who give back a banner telling that they run the vulnerable service. This howto aims to fake the service banners and in this way, fool the script-kiddies. However, your system will still be vulnerable to an exploit if you&amp;rsquo;re running a vulnerable service! If a script-kiddie runs his exploit, even if he sees you don&amp;rsquo;t send out the right banner, you can still be hacked. So, always keep your system up-to-date, see this as a way to decrease the amount of effective attacks on your system, not as a way to be invulnerable. Of course there&amp;rsquo;s also the fun-factor: it&amp;rsquo;s quite amusing to see script-kiddies attempt to break into your &amp;lsquo;Microsoft-IIS/5.0&amp;rsquo; also known as Apache 1.3.27 &lt;em>grin&lt;/em>.&lt;/p></description></item><item><title>Setting up OpenSSL with Lighttpd</title><link>https://wiki.deimos.fr/Mise_en_place_d'OpenSSL_avec_Lighttpd/</link><pubDate>Wed, 15 Apr 2009 07:09:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_d'OpenSSL_avec_Lighttpd/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Adding security to your website is important. In this guide, we&amp;rsquo;ll see how to create and insert SSL certificates in Lighttpd.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>We only need OpenSSL:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="bc007ab" class="language-bash ">
 &lt;code>apt-get install openssl&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="generating-ssl-keys">Generating SSL keys &lt;a href="#generating-ssl-keys" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Let&amp;rsquo;s create an ssl directory in the Lighttpd configuration folder, then generate the certificates:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e53f286" class="language-bash ">
 &lt;code>mkdir /etc/lighttpd/ssl
openssl req -new -x509 -keyout /etc/lighttpd/ssl/selfcert.pem -out /etc/lighttpd/ssl/selfcert.pem -days 3650 -nodes&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>selfcert.pem: use the name that interests you (e.g., deimos.fr.pem)&lt;/li>
&lt;li>3650: number of days the certificate is valid (10 years, we&amp;rsquo;re safe for a good while)&lt;/li>
&lt;/ul>
&lt;h3 id="lighttpd">Lighttpd &lt;a href="#lighttpd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Let&amp;rsquo;s enable the SSL module for Lighttpd:&lt;/p></description></item><item><title>Address Space Protection: State of the Art in Linux and OpenBSD</title><link>https://wiki.deimos.fr/Protection_de_l%27espace_d%27adressage_:_%C3%A9tat_de_l%27art_sous_Linux_et_OpenBSD/</link><pubDate>Wed, 18 Feb 2009 17:47:00 +0200</pubDate><guid>https://wiki.deimos.fr/Protection_de_l%27espace_d%27adressage_:_%C3%A9tat_de_l%27art_sous_Linux_et_OpenBSD/</guid><description>&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/Protection_de_l%27espace_d%27adressage_-_%C3%A9tat_de_l%27art_sous_Linux_et_OpenBSD.pdf">Address Space Protection - State of the Art in Linux and OpenBSD&lt;/a>&lt;/p></description></item><item><title>Monitoring Superuser Access</title><link>https://wiki.deimos.fr/Monitorer_les_acc%C3%A8s_au_superuser/</link><pubDate>Wed, 04 Feb 2009 18:34:00 +0200</pubDate><guid>https://wiki.deimos.fr/Monitorer_les_acc%C3%A8s_au_superuser/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>When the operating system is installed, a superuser is created, with an UID of 0. The usage of the su command is recorded in &lt;code>/var/adm/sulog&lt;/code>.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To record in the first place you need to do the following.
In the file &lt;code>/etc/default/su&lt;/code>, uncomment the entry:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="11f017f" class="language-bash ">
 &lt;code>SULOG=/var/adm/sulog.&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Save it.&lt;/p>
&lt;p>The entries look like this (&lt;code>/var/adm/sulog&lt;/code>):&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="48efe0e" class="language-bash ">
 &lt;code>MO 02/18 14:21 &amp;#43; pts/0 nrocha-root
TU 02/19 14:45 - pts/0 root-nrocha
WE 02/20 19:47 &amp;#43; pts/0 amaria-nrocha&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>The first three columns show the time the event occurred.&lt;/li>
&lt;li>The fourth column shows a - for failed access and a + for successful access.&lt;/li>
&lt;li>The fifth column shows which port the access was made from.&lt;/li>
&lt;li>The last column shows the name of the user who tried to switch users and the switched user.&lt;/li>
&lt;/ul>
&lt;p>Note: This procedure was tested on the Solaris 10 OS.&lt;/p></description></item><item><title>Securing Your Kernel with Grsecurity and PaX</title><link>https://wiki.deimos.fr/S%C3%A9curisation_de_son_noyau_avec_Grsecurity_et_PaX/</link><pubDate>Tue, 03 Feb 2009 07:18:00 +0200</pubDate><guid>https://wiki.deimos.fr/S%C3%A9curisation_de_son_noyau_avec_Grsecurity_et_PaX/</guid><description>&lt;h2 id="grsecurity--pax">Grsecurity &amp;amp; PaX &lt;a href="#grsecurity--pax" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Are buffer overflows and script kiddies something you&amp;rsquo;re concerned about? To counter these types of problems, there exists a kernel patch. There are many solutions to protect against &amp;ldquo;classic&amp;rdquo; attacks which are complex for professionals (but not impossible). Here is THE kernel patch that helps us protect our systems. There&amp;rsquo;s even a learning phase to help with system configuration, resulting in a highly secured solution.&lt;/p></description></item><item><title>GreenSQL: Preventing SQL Injections with GreenSQL</title><link>https://wiki.deimos.fr/GreenSQL:_Eviter_les_injections_SQL_avec_GreenSQL/</link><pubDate>Wed, 28 Jan 2009 03:04:00 +0200</pubDate><guid>https://wiki.deimos.fr/GreenSQL:_Eviter_les_injections_SQL_avec_GreenSQL/</guid><description>&lt;p>SQL injections are common hacking methods that deserve special attention. Here is some documentation:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/preventing_mysql_injection_attacks_with_greensql.pdf">Documentation on Preventing MySQL Injection Attacks With GreenSQL&lt;/a>&lt;/p></description></item><item><title>Securing Apache with mod_security</title><link>https://wiki.deimos.fr/S%C3%A9curiser_Apache_avec_mod_security/</link><pubDate>Sun, 18 Jan 2009 03:41:00 +0200</pubDate><guid>https://wiki.deimos.fr/S%C3%A9curiser_Apache_avec_mod_security/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This is what I&amp;rsquo;ve been looking for quite some time! A module specifically designed for Apache security.&lt;/p>
&lt;p>This module increases the security level of an Apache web server or other servers if used with Apache in proxy mode. Modsecurity acts as an application firewall embedded in Apache. It protects web applications against common attacks (SQL injection, Cross Site Scripting, etc.)&lt;/p>
&lt;p>I found this nice documentation, but like most docs, it&amp;rsquo;s missing some things. It&amp;rsquo;s not much but I&amp;rsquo;m adding it anyway.&lt;/p></description></item><item><title>OpenBSD Configuration Guide (Very Complete)</title><link>https://wiki.deimos.fr/Guide_de_configuration_d%27OpenBSD_%5C%28Tr%C3%A8s_complet%5C%29/</link><pubDate>Sun, 18 Jan 2009 03:34:00 +0200</pubDate><guid>https://wiki.deimos.fr/Guide_de_configuration_d%27OpenBSD_%5C%28Tr%C3%A8s_complet%5C%29/</guid><description>&lt;p>Here is a fairly complete documentation on setting up PF, OpenNTPD, and more:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/openbsd.pdf">OpenBSD Configuration Guide&lt;/a>&lt;/p></description></item><item><title>OpenSSH: Graphical Window Forwarding</title><link>https://wiki.deimos.fr/OpenSSH_:_Export_de_fen%C3%AAtre_graphiques/</link><pubDate>Mon, 12 Jan 2009 09:37:00 +0200</pubDate><guid>https://wiki.deimos.fr/OpenSSH_:_Export_de_fen%C3%AAtre_graphiques/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>OpenSSH is capable of exporting X windows from another machine (creating an SSH tunnel). For example, you can connect to a server that has X and you only have SSH access to the remote machine.&lt;/p>
&lt;p>In your SSH configuration file (&lt;code>/etc/ssh/sshd_config&lt;/code>), set this to yes:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f29d961" class="language-bash ">
 &lt;code>X11Forwarding yes&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="launching-the-session">Launching the Session &lt;a href="#launching-the-session" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s an example session. Here we&amp;rsquo;ll export VNC which is running on the direct machine:&lt;/p></description></item><item><title>Encrypting a Password with MD5</title><link>https://wiki.deimos.fr/Crypter_un_mot_de_passe_en_MD5/</link><pubDate>Wed, 17 Dec 2008 16:51:00 +0200</pubDate><guid>https://wiki.deimos.fr/Crypter_un_mot_de_passe_en_MD5/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>MD5 hashing allows you to verify the integrity of a file. In short, it creates a fingerprint that helps you verify (after a transfer, for example) whether the file arrived correctly and is not corrupted.&lt;/p>
&lt;p>Today, MD5 encryption has been broken, and it&amp;rsquo;s possible to simulate a fake fingerprint. Therefore, you should be careful about how you use it. Personally, I use it to verify the integrity of downloaded files (as it&amp;rsquo;s a very common method). For example, when I download Sun Cluster, I verify the MD5 hash to ensure the installation is complete and not corrupted.&lt;/p></description></item><item><title>Installation and Configuration of Samba in User Mode (Authentication on an OpenLDAP Server)</title><link>https://wiki.deimos.fr/Installation_et_configuration_de_Samba_en_mode_%22User%22_%28Authentification_sur_un_serveur_OpenLDAP%29/</link><pubDate>Tue, 02 Dec 2008 07:31:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_et_configuration_de_Samba_en_mode_%22User%22_%28Authentification_sur_un_serveur_OpenLDAP%29/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Samba is free software under the GPL license that supports the SMB/CIFS protocol. This protocol is used by Microsoft for sharing various resources (files, printers, etc.) between computers running Windows. Samba allows Unix systems to access resources on these systems and vice versa.&lt;/p>
&lt;p>Previously, PCs running DOS and early Windows versions sometimes had to install a TCP/IP stack and a set of Unix-origin software: an NFS client, FTP, telnet, lpr, etc. This was cumbersome and penalizing for the PCs of that time, and it also forced their users to develop a double set of habits, adding Unix habits to those of Windows. Samba therefore adopts the opposite approach.&lt;/p></description></item><item><title>Anti-forensics on ext2/ext3 Filesystems</title><link>https://wiki.deimos.fr/anti-forensics-sur-systemes-de-fichiers-ext2-ext3/</link><pubDate>Thu, 25 Sep 2008 12:00:00 +0200</pubDate><guid>https://wiki.deimos.fr/anti-forensics-sur-systemes-de-fichiers-ext2-ext3/</guid><description>&lt;p>The first thing a hacker wants to do when they&amp;rsquo;ve managed to get into a machine is to hide the data they want to leave behind. There are those who use techniques that even my grandmother knows about, and there are those who take advantage of the internal structure of the filesystem.&lt;/p>
&lt;p>This article explains the different solutions for hiding data in an ext2/ext3 filesystem while taking into account the constraints that remain. However, we will not address the topic of deleted data and how to recover it, which is a completely different subject (that of leaving no trace :)).&lt;/p></description></item><item><title>Hidden (or Covert) Channels</title><link>https://wiki.deimos.fr/Canaux_cach%C3%A9s_%5C%28ou_furtifs%5C%29/</link><pubDate>Thu, 25 Sep 2008 11:58:00 +0200</pubDate><guid>https://wiki.deimos.fr/Canaux_cach%C3%A9s_%5C%28ou_furtifs%5C%29/</guid><description>&lt;p>Why worry about hidden channels? As a good paranoid, one answer could be: &amp;ldquo;they are everywhere!!!&amp;rdquo; In the case of a mild paranoia crisis, the solution would be systematic use of encryption (and cryptography by extension). Nevertheless, this cannot satisfy all needs:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/canaux_caches.pdf">Hidden (or Covert) Channels&lt;/a>&lt;/p></description></item><item><title>Setting up an Antivirus (ClamAV and Amavis)</title><link>https://wiki.deimos.fr/Mise_en_place_d'un_Antivirus_(ClamAV_et_Amavis)/</link><pubDate>Wed, 24 Sep 2008 11:46:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_d'un_Antivirus_(ClamAV_et_Amavis)/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>ClamAV is the antivirus component while Amavis is the interface that connects Postfix with add-ons such as antispam and antivirus tools.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>First, let&amp;rsquo;s install what we need:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="07a0255" class="language-bash ">
 &lt;code>apt-get install amavisd-new clamav clamav-daemon zoo unzip unzoo bzip2&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>At the end of the installation, it will ask you some questions. Here are the answers you should provide:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="65101a9" class="language-bash ">
 &lt;code>Virus database update method: &amp;lt;-- daemon
Local database mirror site: &amp;lt;-- db.fr.clamav.net (France; select the mirror that is closest to you)
HTTP proxy information (leave blank for none): &amp;lt;-- (blank)
Should clamd be notified after updates? &amp;lt;-- Yes&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Next we&amp;rsquo;ll add these lines to &lt;code>/etc/postfix/main.cf&lt;/code>:&lt;/p></description></item><item><title>Launch Firewall Rules Before Interfaces Come Up</title><link>https://wiki.deimos.fr/Lancer_les_r%C3%A8gles_de_Firewalling_avant_que_les_interfaces_deviennent_up/</link><pubDate>Wed, 24 Sep 2008 11:42:00 +0200</pubDate><guid>https://wiki.deimos.fr/Lancer_les_r%C3%A8gles_de_Firewalling_avant_que_les_interfaces_deviennent_up/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>There used to be a script to do it automatically via init.d files, but now the suggested method is to use ifup.d networking scripts, which are executed on state changes of the network interfaces. So I submit here my simple script, which does the trick for me nicely.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Drop this script into &lt;code>/etc/network/if-pre-up.d&lt;/code> in a file called iptables:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="dc57b7d" class="language-bash ">
 &lt;code>#!/bin/sh

# Load iptables rules before interfaces are brought online
# This ensures that we are always protected by the firewall
#
# Note: if bad rules are inadvertently (or purposely) saved it could block
# access to the server except via the serial tty interface.
#

RESTORE=/sbin/iptables-restore
STAT=/usr/bin/stat
IPSTATE=/etc/iptables.conf

test -x $RESTORE || exit 0
test -x $STAT || exit 0

# Check permissions and ownership (rw------- for root)
if test `$STAT --format=&amp;#34;%a&amp;#34;` $IPSTATE -ne &amp;#34;600&amp;#34;; then
 echo &amp;#34;Permissions for $IPSTATE must be 600 (rw-------)&amp;#34;
 exit 0
fi

# Since only the owner can read/write to the file, we can trust that it is
# secure. We need not worry about group permissions since they should be
# zeroed per our previous check; but we must make sure root owns it.
if test `$STAT --format=&amp;#34;%u&amp;#34;` $IPSTATE -ne &amp;#34;0&amp;#34;; then
 echo &amp;#34;The superuser must have ownership for $IPSTATE (uid 0)&amp;#34;
 exit 0
fi

# Now we are ready to restore the tables
$RESTORE &amp;lt; $IPSTATE&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Then make sure you make the script executable:&lt;/p></description></item><item><title>Network Flows</title><link>https://wiki.deimos.fr/Les_flux_r%C3%A9seaux/</link><pubDate>Wed, 24 Sep 2008 11:21:00 +0200</pubDate><guid>https://wiki.deimos.fr/Les_flux_r%C3%A9seaux/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Network flows about network denial of service attacks is the subject addressed here. Indeed, network flows allow for very simple detection of distributed denial of service attacks due to the quantity of flows generated by the zombie army attacking you.&lt;/p>
&lt;p>In this article, we&amp;rsquo;ll present other applications of these network flows: intrusion detection or policy violation, detection of hidden channels, or even worm proliferation to name just a few examples. While the detection of distributed denial of service is something relatively specific to operators and Internet service providers, are the other applications well suited to an internal network?&lt;/p></description></item><item><title>GnuPG: Encrypt Your Emails</title><link>https://wiki.deimos.fr/GnuPG:_Crypter_vos_emails/</link><pubDate>Wed, 10 Sep 2008 16:12:00 +0200</pubDate><guid>https://wiki.deimos.fr/GnuPG:_Crypter_vos_emails/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The purpose of this article is to show you how to encrypt your emails. For &lt;a href="https://www.mozilla.org" rel="external" target="_blank">Mozilla Thunderbird&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>, there is the &lt;a href="https://enigmail.mozdev.org/home/index.php" rel="external" target="_blank">Enigmail&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> plugin. If you don&amp;rsquo;t have an email client, don&amp;rsquo;t want one and prefer webmail&amp;hellip; that&amp;rsquo;s a shame.&lt;/p></description></item><item><title>PAM mount: Automatically Mount Network Shares at Login</title><link>https://wiki.deimos.fr/PAM_mount:_Monter_des_partages_r%C3%A9seaux_au_login/</link><pubDate>Wed, 16 Jul 2008 16:23:00 +0200</pubDate><guid>https://wiki.deimos.fr/PAM_mount:_Monter_des_partages_r%C3%A9seaux_au_login/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You may need sometimes to automatically mount network shares. This can be done with the &lt;a href="https://pam-mount.sourceforge.net/" rel="external" target="_blank">pam_mount&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> module.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For installation:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="a2f758a" class="language-bash ">
 &lt;code>apt-get install pam_mount&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="pam_mountconf">pam_mount.conf &lt;a href="#pam_mountconf" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Edit the &lt;code>/etc/security/pam_mount.conf&lt;/code> file and configure what you need. Here we would like users to have nfs home share to be mounted from the server at logon. Add this line at the end of the file:&lt;/p></description></item><item><title>Securing PHP Scripts</title><link>https://wiki.deimos.fr/S%C3%A9curiser_ses_scripts_PHP/</link><pubDate>Sun, 29 Jun 2008 12:23:00 +0200</pubDate><guid>https://wiki.deimos.fr/S%C3%A9curiser_ses_scripts_PHP/</guid><description>&lt;p>PHP is a powerful language that allows you to do almost anything. It&amp;rsquo;s therefore easy to create security vulnerabilities. That&amp;rsquo;s why I&amp;rsquo;m offering this documentation to help you avoid making mistakes:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/sec_scripts_php.pdf">Documentation on PHP security&lt;/a>&lt;br>
&lt;a href="https://wiki.deimos.fr/pdf/intrusion_detection_for_php_applications_with_phpids.pdf">Intrusion Detection For PHP Applications With PHPIDS&lt;/a>&lt;/p></description></item><item><title>Solutions for Encrypted LVM System</title><link>https://wiki.deimos.fr/Solutions_pour_un_syst%C3%A8me_LVM_crypt%C3%A9/</link><pubDate>Sun, 25 May 2008 09:37:00 +0200</pubDate><guid>https://wiki.deimos.fr/Solutions_pour_un_syst%C3%A8me_LVM_crypt%C3%A9/</guid><description>&lt;h2 id="encrypting-the-root-partition-with-lvm">Encrypting the Root Partition with LVM &lt;a href="#encrypting-the-root-partition-with-lvm" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is documentation explaining how to encrypt the root partition with LVM:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/encrypted_root_lvm.pdf">Documentation on crypting root LVM&lt;/a>&lt;/p>
&lt;h2 id="migrating-an-encrypted-lvm-partition">Migrating an Encrypted LVM Partition &lt;a href="#migrating-an-encrypted-lvm-partition" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is documentation on encrypting LVM partitions with LUKS:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/how_to_migrate_to_a_full_encrypted_lvm_system.pdf">Documentation on How To Migrate to a full encrypted LVM system&lt;/a>&lt;br>
&lt;a href="https://wiki.deimos.fr/pdf/273_lefinnois.pdf">LVM2 Disk Replacement + Crypto and Data Migration&lt;/a>&lt;/p>
&lt;h2 id="resizing-an-encrypted-lvm">Resizing an Encrypted LVM &lt;a href="#resizing-an-encrypted-lvm" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here is documentation for resizing an encrypted filesystem under LVM:&lt;/p></description></item><item><title>Introduction to IDS and SNORT</title><link>https://wiki.deimos.fr/Introduction_aux_IDS_et_%C3%A0_SNORT/</link><pubDate>Sat, 24 May 2008 16:43:00 +0200</pubDate><guid>https://wiki.deimos.fr/Introduction_aux_IDS_et_%C3%A0_SNORT/</guid><description>&lt;h2 id="introduction-to-ids-and-snort">Introduction to IDS and SNORT &lt;a href="#introduction-to-ids-and-snort" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Intrusion Detection Systems (IDS) are increasingly common and play an important and growing role in the security of today&amp;rsquo;s information systems. SNORT is one of these intrusion detection systems with the distinction of being open source software under the GPL license.&lt;/p>
&lt;p>&lt;em>Note: This document was written in 2006. Some versions and configurations of the software mentioned may differ from those shown here; please refer to the official project websites in case of issues.&lt;/em>&lt;/p></description></item><item><title>SQL Injections</title><link>https://wiki.deimos.fr/Les_injections_SQL/</link><pubDate>Sat, 24 May 2008 16:41:00 +0200</pubDate><guid>https://wiki.deimos.fr/Les_injections_SQL/</guid><description>&lt;h2 id="sql-injections">SQL Injections &lt;a href="#sql-injections" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>SQL injection vulnerabilities are among the most common in web applications. Dynamic websites interact with databases that store user information. In some cases, it&amp;rsquo;s possible to manipulate queries to these databases to access often sensitive information.&lt;/p>
&lt;p>Note: this document was written in 2006; some versions and configurations of the software mentioned may differ from those specified here. Please refer to the official project websites in case of problems.&lt;/p></description></item><item><title>Setting up a complete antispam server</title><link>https://wiki.deimos.fr/Mise_en_place_d'un_serveur_antispam_complet/</link><pubDate>Fri, 23 May 2008 06:55:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_d'un_serveur_antispam_complet/</guid><description>&lt;p>Here is a very complete and easy to implement documentation:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/the_perfect_spamsnake.pdf">Documentation on a complete antispam solution&lt;/a>&lt;/p></description></item><item><title>Tenshi: System Log Analysis</title><link>https://wiki.deimos.fr/Tenshi_:_Analyse_des_logs_syst%C3%A8me/</link><pubDate>Fri, 09 May 2008 17:36:00 +0200</pubDate><guid>https://wiki.deimos.fr/Tenshi_:_Analyse_des_logs_syst%C3%A8me/</guid><description>&lt;h2 id="introduction-and-installation">Introduction and Installation &lt;a href="#introduction-and-installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The analysis of log files is a good compromise to the regular absence of consideration in companies for these files that contain crucial information for protecting systems against intrusions performed by hackers within the networks themselves.&lt;/p>
&lt;p>&lt;em>Note: this document was written in 2006; certain versions and configurations of the software used may be different from those mentioned; please refer to the official project sites in case of problems.&lt;/em>&lt;/p></description></item><item><title>Cryptology and Prime Numbers: The RSA Algorithm</title><link>https://wiki.deimos.fr/Cryptologie_et_nombres_premiers:_l'algorithme_RSA/</link><pubDate>Sun, 20 Apr 2008 13:55:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cryptologie_et_nombres_premiers:_l'algorithme_RSA/</guid><description>&lt;p>Here is documentation explaining how the RSA algorithm works:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/nombres_premiers_et_cryptologie_-_algorithme_rsa.pdf">Prime Numbers and Cryptology - RSA Algorithm&lt;/a>&lt;/p></description></item><item><title>PAM (Pluggable Authentication Module): Choosing Authentication Methods</title><link>https://wiki.deimos.fr/PAM_%28Pluggable_Authentification_Module%29_:_Choisir_ses_m%C3%A9thodes_d%27authentifications/</link><pubDate>Sun, 06 Apr 2008 07:42:00 +0200</pubDate><guid>https://wiki.deimos.fr/PAM_%28Pluggable_Authentification_Module%29_:_Choisir_ses_m%C3%A9thodes_d%27authentifications/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>PAM is THE standard authentication system used in Linux. The power of this tool is unlimited, but it&amp;rsquo;s not always well documented which tends to work against it. As an introduction, let&amp;rsquo;s first look at the motivations that led to the creation of PAM. Originally, in Unix (and in early versions of Linux), the file that centralized user management was &lt;code>/etc/passwd&lt;/code>. It contained many sensitive pieces of information, including encrypted passwords. To use a Unix machine, the first thing to do was to authenticate via the login program (the last program launched by init). This program was developed to parse the &lt;code>/etc/passwd&lt;/code> file.&lt;/p></description></item><item><title>Chroot SSH Accounts</title><link>https://wiki.deimos.fr/Chrooter_des_comptes_SSH/</link><pubDate>Tue, 01 Apr 2008 10:31:00 +0200</pubDate><guid>https://wiki.deimos.fr/Chrooter_des_comptes_SSH/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The OpenSSH version (4.8p1 for the GNU/Linux port) features a new configuration option: &lt;code>ChrootDirectory&lt;/code>.
This has been made possible by a new SFTP subsystem statically linked to sshd.&lt;/p>
&lt;p>This makes it easy to replace a basic FTP service without the hassle of configuring encryption and/or bothering with FTP passive and active modes when operating through a NAT router. This is also simpler than packages such as rssh, scponly or other patches because it does not require setting up and maintaining (i.e. security updates) a chroot environment.&lt;/p></description></item><item><title>Cryptoloop: Setting Up an Encrypted Folder</title><link>https://wiki.deimos.fr/Cryptoloop_:_Mise_en_place_d%27un_dossier_crypt%C3%A9/</link><pubDate>Thu, 27 Mar 2008 13:34:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cryptoloop_:_Mise_en_place_d%27un_dossier_crypt%C3%A9/</guid><description>&lt;p>Cryptoloop is the predecessor of CryptoFS. It&amp;rsquo;s a useful system because you create an empty encrypted file (image) of a specific size that can contain multiple files or folders.&lt;/p>
&lt;p>You can then insert everything inside and everything is encrypted. You can even create a file the size of your partition to make a pseudo-encrypted volume. The disadvantage is that in case of a system crash, if you left the encrypted file open, you have a 50% chance of corrupting your data placed inside.&lt;/p></description></item><item><title>SafeSquid: Coupling with ClamAV to Filter Viruses on Incoming Traffic</title><link>https://wiki.deimos.fr/SafeSquid_:_Coupler_avec_ClamAV_pour_filtrer_les_virus_sur_le_traffic_entrant/</link><pubDate>Fri, 21 Mar 2008 18:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/SafeSquid_:_Coupler_avec_ClamAV_pour_filtrer_les_virus_sur_le_traffic_entrant/</guid><description>&lt;p>SafeSquid coupled with ClamAV allows you to analyze incoming traffic to detect potential viruses. Here&amp;rsquo;s documentation on how to implement this:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/set_up_gateway_level_virus_security_with_clamav_and_safesquid_proxy.pdf">Documentation on how to Set Up Gateway Level Virus Security With ClamAV And SafeSquid Proxy&lt;/a>&lt;/p></description></item><item><title>Setting up an SSH Bouncer Server for Your SSH Connections</title><link>https://wiki.deimos.fr/Mise_en_place_d'un_serveur_de_rebond_pour_ses_connections_SSH/</link><pubDate>Sat, 08 Mar 2008 07:28:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_d'un_serveur_de_rebond_pour_ses_connections_SSH/</guid><description>&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For what follows, I&amp;rsquo;ll base this on a standard Kubuntu 7.10 installation. We&amp;rsquo;ll need the following packages:&lt;/p>
&lt;ul>
&lt;li>sshfs&lt;/li>
&lt;li>tsocks&lt;/li>
&lt;li>afuse&lt;/li>
&lt;/ul>
&lt;p>If you choose to use aptitude for your installation, proceed as follows:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="68574ec" class="language-bash ">
 &lt;code>sudo aptitude install fuse tsocks afuse&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>The installation shouldn&amp;rsquo;t pose any insurmountable problems, so I won&amp;rsquo;t elaborate further on this subject.&lt;/p>
&lt;p>However, you must ensure that your user (in my case deimos) belongs to the fuse group:&lt;/p></description></item><item><title>PSAD: Protection Against nmap-Type Scans</title><link>https://wiki.deimos.fr/PSAD_:_protection_contre_les_scans_de_type_nmap/</link><pubDate>Tue, 19 Feb 2008 07:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/PSAD_:_protection_contre_les_scans_de_type_nmap/</guid><description>&lt;p>Here is documentation in line with the Fail2Ban software. Here&amp;rsquo;s some brief documentation:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/dytex1or.pdf">Documentation on PSAD&lt;/a>&lt;/p></description></item><item><title>Dkfilter: Proxy SMTP (Signature Mails) Made by Yahoo</title><link>https://wiki.deimos.fr/Dkfilter_:_Proxy_SMTP_(signatures_mails)_made_by_Yahoo/</link><pubDate>Thu, 31 Jan 2008 07:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/Dkfilter_:_Proxy_SMTP_(signatures_mails)_made_by_Yahoo/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>DomainKeys is an anti-spam software application in development at &lt;a href="https://antispam.yahoo.com/domainkeys" rel="external" target="_blank">Yahoo&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> that uses a form of public key cryptography to authenticate the sender&amp;rsquo;s domain. &lt;strong>dkfilter is an SMTP-proxy designed for Postfix&lt;/strong>. It implements DomainKeys message signing and verification. It comprises two separate filters, an &amp;ldquo;outbound&amp;rdquo; filter for &lt;strong>signing outgoing email on port 587&lt;/strong>, and an &amp;ldquo;inbound&amp;rdquo; filter for &lt;strong>verifying signatures of incoming email on port 25&lt;/strong>. This document is to describe step by step how to install dkfilter for postfix to deploy domainkeys signing and verification.&lt;/p></description></item><item><title>Securing OpenSSH</title><link>https://wiki.deimos.fr/Securiser_OpenSSH/</link><pubDate>Fri, 11 Jan 2008 23:00:00 +0200</pubDate><guid>https://wiki.deimos.fr/Securiser_OpenSSH/</guid><description>&lt;p>Here is documentation to secure your OpenSSH server:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/securing_openssh_server_-part_1-.pdf">Securing OpenSSH Server - Part 1&lt;/a>&lt;/p></description></item><item><title>DNS Protocol Security Audits</title><link>https://wiki.deimos.fr/Audits_de_s%C3%A9curit%C3%A9_du_protocole_DNS/</link><pubDate>Sun, 23 Dec 2007 23:04:00 +0200</pubDate><guid>https://wiki.deimos.fr/Audits_de_s%C3%A9curit%C3%A9_du_protocole_DNS/</guid><description>&lt;h2 id="introduction-to-dns-protocol-security">Introduction to DNS Protocol Security &lt;a href="#introduction-to-dns-protocol-security" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>DNS is used in most local networks; however, it was developed with strong performance constraints at the expense of security, to avoid degrading regular traffic due to the substantial number of queries associated with the nature of this protocol.&lt;/p>
&lt;p>DNS (&lt;a href="https://fr.wikipedia.org/wiki/Domain_Name_System" rel="external" target="_blank">Domain Naming System&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>) is one of the key protocols of the Internet, along with several major routing protocols, notably BGPv4 (&lt;a href="https://fr.wikipedia.org/wiki/Border_Gateway_Protocol" rel="external" target="_blank">Border Gateway Protocol&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>). It is also used in most current local networks with, depending on the chosen topology, one or more internal DNS server(s).&lt;/p></description></item><item><title>OpenSSH: Using Stepstones</title><link>https://wiki.deimos.fr/OpenSSH:_using_stepstones/</link><pubDate>Thu, 06 Dec 2007 11:48:00 +0200</pubDate><guid>https://wiki.deimos.fr/OpenSSH:_using_stepstones/</guid><description>&lt;p>You might be working in an environment where you always ssh from your machine to the middle machine and then connect to the destination machine. What a waste of time, let&amp;rsquo;s see how you could automate it. The middle machine is frequently referred to as stepstone host.&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/openssh_using_stepstones.pdf">OpenSSH using stepstones&lt;/a>&lt;/p></description></item><item><title>OpenBSD Package System</title><link>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_OpenBSD/</link><pubDate>Tue, 27 Nov 2007 18:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Le_syst%C3%A8me_de_Packages_OpenBSD/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Transitioning to OpenBSD isn&amp;rsquo;t very straightforward when coming from the Linux world (PS: if you&amp;rsquo;re coming from Windows, it&amp;rsquo;s better to stay there or switch to Linux first).&lt;/p>
&lt;p>In OpenBSD, there are two package systems:&lt;/p>
&lt;ul>
&lt;li>The first one is provided by the base OpenBSD system (pkg), containing packages with almost no security vulnerabilities (just a reminder: only 2 vulnerabilities discovered in 10 years). These packages are pre-compiled.&lt;/li>
&lt;li>The second contains many more software applications (port), but according to OpenBSD, they can compromise system stability and security. That said, it&amp;rsquo;s still preferable to use these rather than compiling yourself from various sources since these packages have still been validated by the OpenBSD team. These packages are compiled on demand.&lt;/li>
&lt;/ul>
&lt;h2 id="pgk">PGK &lt;a href="#pgk" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="preparation">Preparation &lt;a href="#preparation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>First, you need to &lt;a href="https://www.openbsd.org/fr/ftp.html" rel="external" target="_blank">choose an FTP server&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> to specify the repository. I chose a French server:&lt;/p></description></item><item><title>Fight Spam More Effectively - Additional Rules</title><link>https://wiki.deimos.fr/Lutter_un_peu_plus_contre_le_SPAM_-_R%C3%A8gles_suppl%C3%A9mentaires/</link><pubDate>Thu, 22 Nov 2007 07:15:00 +0200</pubDate><guid>https://wiki.deimos.fr/Lutter_un_peu_plus_contre_le_SPAM_-_R%C3%A8gles_suppl%C3%A9mentaires/</guid><description>&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Install Razor, Pyzor and Configure SpamAssassin.&lt;/p>
&lt;p>Razor and Pyzor are spamfilters that use a collaborative filtering network. To install them, run:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3487e5c" class="language-bash ">
 &lt;code>apt-get install razor pyzor&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Now we have to tell SpamAssassin to use these programs. Edit &lt;code>/etc/spamassassin/local.cf&lt;/code> so that it looks like this:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f49624c" class="language-bash ">
 &lt;code># SpamAssassin Configuration
rewrite_header Subject *****SPAM*****
use_bayes 1
bayes_auto_learn 1
required_score 5.0
skip_rbl_checks 0
report_safe 0

#pyzor
use_pyzor 1
pyzor_path /usr/bin/pyzor

#razor
use_razor2 1
razor_config /etc/razor/razor-agent.conf

ok_locales en fr
whitelist_from *@deimos.fr noreply@lists.silicon.fr
blacklist_from *@mandrivaclub.com&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Note: Here is an &lt;a href="https://www.yrex.com/spam/spamconfig.php" rel="external" target="_blank">automatic SpamAssasin Configuration Generator&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>.&lt;/p></description></item><item><title>Strengthening Linux Kernel Security Functions</title><link>https://wiki.deimos.fr/Renforcement_des_fonctions_de_s%C3%A9curit%C3%A9_du_noyau_Linux/</link><pubDate>Thu, 15 Nov 2007 21:30:00 +0200</pubDate><guid>https://wiki.deimos.fr/Renforcement_des_fonctions_de_s%C3%A9curit%C3%A9_du_noyau_Linux/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>This article offers an overview of various security mechanisms related to the kernels of GNU/Linux operating systems to ensure the integrity protection of your environment. In this first part, you&amp;rsquo;ll find an introduction to these mechanisms as well as to GNU/Linux system kernels in general.&lt;/p>
&lt;h2 id="presentation">Presentation &lt;a href="#presentation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The growing enthusiasm of users for the Linux operating system, particularly from security experts or system administrators, is largely due to the robustness and advanced features this operating system offers. The kernel, the core of the system, manages most of the security-related functions in the environment.&lt;/p></description></item><item><title>Scapy: Data Frames and Packets</title><link>https://wiki.deimos.fr/Scapy_:_Trames_et_paquets_de_donn%C3%A9es/</link><pubDate>Tue, 09 Oct 2007 06:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/Scapy_:_Trames_et_paquets_de_donn%C3%A9es/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Scapy is a utility that allows you to forge, receive and send packets or data frames over a network for a multitude of protocols. In this introduction, you&amp;rsquo;ll discover this Python utility that enables traffic capture, network mapping, ARP cache poisoning, VLAN hopping, or passive operating system fingerprinting.&lt;/p>
&lt;p>Scapy is a program developed in Python by Philippe Biondi (EADS CCR); it notably allows you to forge, receive and transmit packets and/or data frames via a network to or from an IT infrastructure for a multitude of different network protocols (IP, TCP, UDP, ARP, SNMP, ICMP, DNS, DHCP, &amp;hellip;) with precision and speed.&lt;/p></description></item><item><title>OpenSPF: Setting up OpenSPF</title><link>https://wiki.deimos.fr/OpenSPF:_Mise_en_place_d'OpenSPF/</link><pubDate>Thu, 04 Oct 2007 16:30:00 +0200</pubDate><guid>https://wiki.deimos.fr/OpenSPF:_Mise_en_place_d'OpenSPF/</guid><description>&lt;p>OpenSPF is the open source version of SPF. In terms of functionality, they are the same. Here is documentation explaining how to implement this type of solution:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/openspf_postfix.pdf">OpenSPF on Postfix Documentation&lt;/a>&lt;/p></description></item><item><title>MySecureShell: Setting up a Secure File Transfer Solution</title><link>https://wiki.deimos.fr/MySecureShell%C2%A0:%C2%A0Mise_en_place_d%27une_solution_s%C3%A9curis%C3%A9e_de_transfert_de_fichiers/</link><pubDate>Tue, 02 Oct 2007 20:23:00 +0200</pubDate><guid>https://wiki.deimos.fr/MySecureShell%C2%A0:%C2%A0Mise_en_place_d%27une_solution_s%C3%A9curis%C3%A9e_de_transfert_de_fichiers/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>It was about time this documentation arrived! Although I am one of the founders and developers of &lt;a href="https://mysecureshell.sourceforge.net" rel="external" target="_blank">MySecureShell&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>, creating a quick and simpler guide than the one on the website was a bit daunting. But I finally found this magnificent documentation.&lt;/p></description></item><item><title>Finding passwords from the Windows SAM database</title><link>https://wiki.deimos.fr/Trouver_les_mots_de_passe_de_la_base_SAM_de_Windows/</link><pubDate>Fri, 31 Aug 2007 15:06:00 +0200</pubDate><guid>https://wiki.deimos.fr/Trouver_les_mots_de_passe_de_la_base_SAM_de_Windows/</guid><description>&lt;p>Are you one of those people who have lost their password? And you neither want to reset it through the recovery console, nor format your Windows installation to be able to use your machine.&lt;/p>
&lt;p>Well, &lt;a href="https://ophcrack.sourceforge.net/" rel="external" target="_blank">Ophcrack&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is made for you! It will mount your Windows partition in NTFS, then crack the LM and NTLM hashes, and display them before your amazed eyes - all in just a few minutes :-)&lt;/p></description></item><item><title>Reverse Engineering with LD_PRELOAD</title><link>https://wiki.deimos.fr/Reverse_Engineering_avec_LD_PRELOAD/</link><pubDate>Fri, 03 Aug 2007 16:49:00 +0200</pubDate><guid>https://wiki.deimos.fr/Reverse_Engineering_avec_LD_PRELOAD/</guid><description>&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/reverse_engineering_avec_ld_preload_fr.pdf">Reverse Engineering with LD_PRELOAD&lt;/a>&lt;/p></description></item><item><title>Altering ARP Tables</title><link>https://wiki.deimos.fr/alteration-de-tables-arp/</link><pubDate>Fri, 03 Aug 2007 16:47:00 +0200</pubDate><guid>https://wiki.deimos.fr/alteration-de-tables-arp/</guid><description>&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/altering_arp_tables_v_1.00.pdf">Altering ARP Tables&lt;/a>&lt;/p></description></item><item><title>Arbitrary Code Injection and Execution in Another Process Memory Space</title><link>https://wiki.deimos.fr/Injection_et_ex%C3%A9cution_de_code_arbitraire_dans_l%5C%27espace_m%C3%A9moire_d%5C%27un_autre_processus/</link><pubDate>Fri, 03 Aug 2007 16:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/Injection_et_ex%C3%A9cution_de_code_arbitraire_dans_l%5C%27espace_m%C3%A9moire_d%5C%27un_autre_processus/</guid><description>&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/injection_de_code.pdf">Arbitrary Code Injection and Execution in Another Process Memory Space&lt;/a>&lt;/p></description></item><item><title>Fuzzing - Tutorial on Using and Customizing a Fuzzer for Vulnerability Research</title><link>https://wiki.deimos.fr/Fuzzing_-_Tutoriel_sur_l'utilisation_et_la_personnalisation_d'un_Fuzzer_pour_la_recherche_de_failles/</link><pubDate>Fri, 03 Aug 2007 16:32:00 +0200</pubDate><guid>https://wiki.deimos.fr/Fuzzing_-_Tutoriel_sur_l'utilisation_et_la_personnalisation_d'un_Fuzzer_pour_la_recherche_de_failles/</guid><description>&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/fuzzing_fr.pdf">Fuzzing - Tutorial on Using and Customizing a Fuzzer for Vulnerability Research&lt;/a>&lt;/p></description></item><item><title>Download and Execute ShellCode: Optimized and Detailed Code of a Download/Execute ShellCode for Windows</title><link>https://wiki.deimos.fr/Download_and_Execute_ShellCode_:_Code_optimis%C3%A9_et_d%C3%A9taill%C3%A9_d%5C%27un_ShellCode_Download/Execute_pour_Windows/</link><pubDate>Fri, 03 Aug 2007 16:31:00 +0200</pubDate><guid>https://wiki.deimos.fr/Download_and_Execute_ShellCode_:_Code_optimis%C3%A9_et_d%C3%A9taill%C3%A9_d%5C%27un_ShellCode_Download/Execute_pour_Windows/</guid><description>&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/download_execute_shellcode.pdf">Download and Execute ShellCode: Optimized and Detailed Code of a Download/Execute ShellCode for Windows&lt;/a>&lt;/p></description></item><item><title>Finding the base address of kernel32.dll: Three methods PEB, SEH and TopStack</title><link>https://wiki.deimos.fr/Trouver_l%27adresse_de_base_de_kernel32.dll_:_Trois_m%C3%A9thodes_PEB,_SEH_et_TopStack/</link><pubDate>Fri, 03 Aug 2007 16:28:00 +0200</pubDate><guid>https://wiki.deimos.fr/Trouver_l%27adresse_de_base_de_kernel32.dll_:_Trois_m%C3%A9thodes_PEB,_SEH_et_TopStack/</guid><description>&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/trouver_kernel32.pdf">Finding the base address of kernel32.dll: Three methods PEB, SEH and TopStack&lt;/a>&lt;/p></description></item><item><title>Encrypting Swap Partition</title><link>https://wiki.deimos.fr/Encrypter_sa_swap/</link><pubDate>Wed, 01 Aug 2007 22:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Encrypter_sa_swap/</guid><description>&lt;p>Since OpenBSD 3.7, swap is automatically encrypted. If you&amp;rsquo;re using an earlier version and wish to enable encryption, there are two solutions:&lt;/p>
&lt;h2 id="without-rebooting">Without Rebooting &lt;a href="#without-rebooting" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To enable swap encryption without rebooting, use the following command:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c3166a9" class="language-bash ">
 &lt;code>sysctl -w vm.swapencrypt.enable=1&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="with-rebooting">With Rebooting &lt;a href="#with-rebooting" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To enable swap encryption permanently (requires a reboot), edit the &lt;code>/etc/sysctl.conf&lt;/code> file and uncomment this line:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="2b90011" class="language-bash ">
 &lt;code>vm.swapencrypt.enable=1&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>SSL: Certificate Management</title><link>https://wiki.deimos.fr/SSL_:_Gestion_des_certificats/</link><pubDate>Sun, 08 Jul 2007 21:33:00 +0200</pubDate><guid>https://wiki.deimos.fr/SSL_:_Gestion_des_certificats/</guid><description>&lt;h2 id="problem-statement">Problem Statement &lt;a href="#problem-statement" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>After a year of good and loyal service, your &lt;strong>Courier (POP3 or IMAP)&lt;/strong> server fails due to a simple SSL problem! Yes, after a year, certificates expire!&lt;/p>
&lt;h2 id="preparation">Preparation &lt;a href="#preparation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>We need to generate new certificates. First, let&amp;rsquo;s go to the right location:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e920590" class="language-bash ">
 &lt;code>cd /etc/courier/&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Then, we delete the old one:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c3380df" class="language-bash ">
 &lt;code>rm pop3d.pem&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="generation">Generation &lt;a href="#generation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="automatic">Automatic &lt;a href="#automatic" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>If you decide to simply renew this certificate every year, edit the &amp;ldquo;.cnf&amp;rdquo; file and fill it out correctly. Here&amp;rsquo;s an example:&lt;/p></description></item><item><title>Nfqueue: Filter Thousands of IP Addresses (e.g., by Country)</title><link>https://wiki.deimos.fr/Nfqueue_:_Filtrer_des_milliers_d'adresses_IP_(ex:_par_pays)/</link><pubDate>Thu, 05 Jul 2007 05:19:00 +0200</pubDate><guid>https://wiki.deimos.fr/Nfqueue_:_Filtrer_des_milliers_d'adresses_IP_(ex:_par_pays)/</guid><description>&lt;p>Here is documentation on the NFQUEUE module for Iptables:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/iptables_filtering_traffic_thousands_ip.pdf">Iptables filtering traffic thousands IP&lt;/a>&lt;/p></description></item><item><title>Stunnel: Creating an SSL Tunnel</title><link>https://wiki.deimos.fr/Stunnel_:_Fabrication_d'un_tunnel_SSL/</link><pubDate>Tue, 26 Jun 2007 08:09:00 +0200</pubDate><guid>https://wiki.deimos.fr/Stunnel_:_Fabrication_d'un_tunnel_SSL/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If you have software that doesn&amp;rsquo;t support SSL, and you want to secure network connections, you can encapsulate it in an SSL tunnel. This tunnel will encrypt data from end to end.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="debian">Debian &lt;a href="#debian" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="edd0663" class="language-bash ">
 &lt;code>apt-get install stunnel4&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="red-hat">Red-Hat &lt;a href="#red-hat" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f8aef6e" class="language-bash ">
 &lt;code>wget http://www.stunnel.org/download/stunnel/src/stunnel-4.20.tar.gz
tar -xzvf stunnel-4.20.tar.gz
cd stunnel-4.20
./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="windows">Windows &lt;a href="#windows" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Download the client: &lt;a href="https://www.stunnel.org/download/binaries.html" rel="external" target="_blank">https://www.stunnel.org/download/binaries.html&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;br>
&lt;em>On Windows, all configuration files are in &amp;ldquo;C:\Program Files\stunnel&amp;rdquo;, so adapt the examples below according to file paths&lt;/em>&lt;/p></description></item><item><title>Installation from Scratch of a Cisco Pix</title><link>https://wiki.deimos.fr/Installation_from_Scratch_d'un_Cisco_Pix/</link><pubDate>Wed, 23 May 2007 14:32:00 +0200</pubDate><guid>https://wiki.deimos.fr/Installation_from_Scratch_d'un_Cisco_Pix/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The installation of a Cisco device is not very complicated, but if you&amp;rsquo;re not familiar with it, it&amp;rsquo;s not always obvious. That&amp;rsquo;s why I made this small guide, since it&amp;rsquo;s not something we do every day.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Connected via serial port? Let&amp;rsquo;s get started:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="2e52088" class="language- ">
 &lt;code>Pre-configure PIX Firewall now through interactive prompts [yes]?
Enable password [&amp;lt;use current password&amp;gt;]: mot_de_passe
Clock (UTC):
 Year [2007]:
 Month [May]:
 Day [23]:
 Time [02:57:33]: 12:01:00
Inside IP address: 192.168.0.77
Inside network mask: 255.255.255.0
Host name: hk-pix-bak
Domain name: mon_domaine
IP address of host running PIX Device Manager: 192.168.0.104

The following configuration will be used:
Enable password: mot_de_passe
Clock (UTC): 12:01:00 May 23 2007
Inside IP address: 192.168.0.77
Inside network mask: 255.255.255.0
Host name: hk-pix-bak
Domain name: mon_domaine
IP address of host running PIX Device Manager: 192.168.0.104

Use this configuration and write to flash? y&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>To summarize:&lt;/p></description></item><item><title>OpenSSH: SSH Connection Multiplexing</title><link>https://wiki.deimos.fr/OpenSSH:_Multiplexage_des_connexions_SSH/</link><pubDate>Mon, 14 May 2007 19:37:00 +0200</pubDate><guid>https://wiki.deimos.fr/OpenSSH:_Multiplexage_des_connexions_SSH/</guid><description>&lt;p>Since version 4.0, OpenSSH allows multiplexing several connections into one, which speeds up the connection time for subsequent logins.&lt;/p>
&lt;p>This tip requires OpenSSH version 4.2 or higher to work.&lt;/p>
&lt;p>Just add this to your &lt;code>~/.ssh/config&lt;/code> file:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="49fbdc0" class="language-bash ">
 &lt;code>Host *
ControlMaster auto
ControlPath ~/.ssh/master-%r@%h:%p&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>All new connections to a host where you are already connected will go through this existing connection. In addition to speeding up connection time, this has the advantage of not prompting for passwords on subsequent connections.&lt;/p></description></item><item><title>Jailctl: Creating Chroot Environments (Jails)</title><link>https://wiki.deimos.fr/Jailctl_:_Cr%C3%A9ation_de_chroot_%28jails%29/</link><pubDate>Sun, 15 Apr 2007 21:50:00 +0200</pubDate><guid>https://wiki.deimos.fr/Jailctl_:_Cr%C3%A9ation_de_chroot_%28jails%29/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Jailctl is a shell tool for creating/launching/stopping/updating/backing up/restoring/destroying jails.
By jail, we mean here a &amp;ldquo;virtual server&amp;rdquo; and not simply a method for isolating a service.&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s the command to install the package:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="d2382c9" class="language-bash ">
 &lt;code>pkg_add -vr jailctl&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>or&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="6793148" class="language-bash ">
 &lt;code>cd /usr/ports/sysutils/jailctl ; make install clean&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>You need a config file: &lt;code>/usr/local/etc/jails.conf&lt;/code>&lt;/li>
&lt;li>You also need: a directory where the jails will be stored (&lt;code>/data&lt;/code> in this example)&lt;/li>
&lt;li>A runme.sh script provided with jailctl that lives by default in &lt;code>/usr/local/jails/addons/&lt;/code>&lt;/li>
&lt;li>A file dellist4.txt that contains a list of files to delete in the jails because they are not needed (for example commands like mount)&lt;/li>
&lt;li>A file dellist5.txt that contains more files to delete in case jailctl runs on a 5.x or a 6.x (jailctl is indeed compatible with all versions from 4.x to 6.x)&lt;/li>
&lt;li>And finally an etc/ directory with configuration files to install in the new jails (by default, login.conf and make.conf).&lt;/li>
&lt;/ul>
&lt;p>All this lives in &lt;code>/usr/local/jails/addons/&lt;/code> which we will need to move to &lt;code>/data/addons/&lt;/code> in our example.&lt;/p></description></item><item><title>Xinetd: Securing Services</title><link>https://wiki.deimos.fr/Xinetd_:_S%C3%A9curiser_ses_services/</link><pubDate>Tue, 06 Mar 2007 09:30:00 +0200</pubDate><guid>https://wiki.deimos.fr/Xinetd_:_S%C3%A9curiser_ses_services/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>xinetd - eXtended InterNET services daemon - provides good security against intrusion and reduces the risks of Denial of Services (DoS) attacks. Like the well-known couple (inetd+tcpd), it enables the configuration of access rights for a given machine, but it can do much more. In this article, we will discover its many features.&lt;/p>
&lt;p>The classical inetd helps controlling network connections to a computer. When a request comes to a port managed by inetd, then inetd forwards it to a program called tcpd. Tcpd decides, according to the rules contained in the hosts.{allow, deny} files, whether or not to grant the request. If the request is allowed, then the corresponding server process (e.g., ftp) can be started. This mechanism is also referred to as tcp_wrapper.&lt;/p></description></item><item><title>SPF (Sender Policy Framework): Prevention of Email Address Forgery</title><link>https://wiki.deimos.fr/SPF_%28Sender_Policy_Framework%29_:_Pr%C3%A9vention_de_la_contrefa%C3%A7on_d%27adresses_mails/</link><pubDate>Thu, 28 Dec 2006 22:59:00 +0200</pubDate><guid>https://wiki.deimos.fr/SPF_%28Sender_Policy_Framework%29_:_Pr%C3%A9vention_de_la_contrefa%C3%A7on_d%27adresses_mails/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>SPF stands for Sender Policy Framework. SPF aims to be an anti-counterfeiting standard to prevent email address forgery.&lt;/p>
&lt;p>SPF was born in 2003. Its creator, Meng Weng Wong, took the best features of Reverse MX and DMP (Designated Mailer Protocol) to create SPF.&lt;/p>
&lt;p>SPF uses the return path (MAIL FROM) present in the message header, since all MTAs work with these fields. However, there is a new concept proposed by Microsoft: PRA, which stands for Purported Responsible Address. The PRA corresponds to the end-user address that an MUA (like Thunderbird) uses.&lt;/p></description></item><item><title>OpenSSH HPN (High Performance): Implementation and Installation</title><link>https://wiki.deimos.fr/OpenSSH_HPN_%28High_Performance_Enabled%29_:_Impl%C3%A9mentation_et_installation/</link><pubDate>Wed, 27 Dec 2006 11:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/OpenSSH_HPN_%28High_Performance_Enabled%29_:_Impl%C3%A9mentation_et_installation/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here&amp;rsquo;s the introduction provided by the &lt;a href="https://www.psc.edu/networking/projects/hpn-ssh/" rel="external" target="_blank">website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>:&lt;/p>
&lt;p>SCP and the underlying SSH2 protocol implementation in &lt;a href="https://www.openssh.com" rel="external" target="_blank">OpenSSH&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is network performance limited by statically defined internal flow control buffers. These buffers often end up acting as a bottleneck for network throughput of SCP, especially on long and high bandwidth network links. Modifying the SSH code to allow the buffers to be defined at runtime eliminates this bottleneck. We have created a patch that will remove the bottlenecks in OpenSSH and is fully interoperable with other servers and clients. In addition, HPN clients will be able to download faster from non-HPN servers, and HPN servers will be able to receive uploads faster from non-HPN clients. However, the host receiving the data must have a properly tuned TCP/IP stack. Please refer to this tuning page for more information.&lt;/p></description></item><item><title>Monitor Your Solaris Users</title><link>https://wiki.deimos.fr/Monitorer_ses_Solaris_Users/</link><pubDate>Fri, 01 Dec 2006 10:35:00 +0200</pubDate><guid>https://wiki.deimos.fr/Monitorer_ses_Solaris_Users/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>All systems should be monitored routinely for unauthorized user access. You can determine who is or who has been logged into the system by executing commands and examining log files.&lt;/p>
&lt;h2 id="who">who &lt;a href="#who" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If a user is logged in remotely, the who command displays the remote host name, or Internet Protocol (IP) address in the last column of the output.&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3df6f39" class="language-bash ">
 &lt;code>who&lt;/code>
 &lt;/pre>
 &lt;/div>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="051bb1b" class="language- ">
 &lt;code>root console Oct 17 08:21	(:0)
root pts/4 Oct 17 08:21	(:0.0)
root pts/5 Oct 17 08:21	(:0.0)
user5 pts/6 Oct 17 09:20	(sys-03)
root pts/7 Oct 17 09:20	(:0.0)
user3 pts/8 Oct 17 09:21	(localhost)&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="rusers">rusers &lt;a href="#rusers" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The rusers command produces output similar to that of the who command, but it displays a list of the users logged in on local and remote hosts. The list displays the user&amp;rsquo;s name and the host&amp;rsquo;s name in the order in which the responses are received from the hosts.&lt;/p></description></item><item><title>Penetration Testing</title><link>https://wiki.deimos.fr/Tests_d'intrusion/</link><pubDate>Tue, 28 Nov 2006 22:23:00 +0200</pubDate><guid>https://wiki.deimos.fr/Tests_d'intrusion/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Once a network is installed and configured, it continuously evolves. New systems are added, old and faithful machines disappear - everything changes constantly. Users can also make modifications to the network without the administrator&amp;rsquo;s knowledge.&lt;/p>
&lt;p>To verify the state of a network, an administrator must behave like a hacker and attempt to penetrate their own defenses. This article presents the methodology to follow.&lt;/p>
&lt;p>It&amp;rsquo;s important to test the security of your own network by putting yourself in the hacker&amp;rsquo;s position to discover potential vulnerabilities. These tests are broken down into several steps:&lt;/p></description></item><item><title>Setting up ACLs for CVS</title><link>https://wiki.deimos.fr/Mise_en_place_des_ACLs_pour_CVS/</link><pubDate>Fri, 24 Nov 2006 09:42:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_des_ACLs_pour_CVS/</guid><description>&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Download the latest pre-patched version of CVSACL from the internet (&lt;a href="http://cvsacl.sourceforge.net" rel="external" target="_blank">http://cvsacl.sourceforge.net&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>), then extract it.&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="805dfe8" class="language-bash ">
 &lt;code>wget http://switch.dl.sourceforge.net/sourceforge/cvsacl/cvs-1.11.22-cvsacl-1.2.5-patched.tar.gz
tar -xzvf cvs-1.11.22-cvsacl-1.2.5-patched.tar.gz&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Configuration, compilation and installation:&lt;/p></description></item><item><title>Rkhunter: Detection of rootkits and malware</title><link>https://wiki.deimos.fr/Rkhunter_:_D%C3%A9tection_de_rootkits_et_malwares/</link><pubDate>Thu, 23 Nov 2006 17:32:00 +0200</pubDate><guid>https://wiki.deimos.fr/Rkhunter_:_D%C3%A9tection_de_rootkits_et_malwares/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Rkhunter (Rootkit Hunter) is a Unix program that detects rootkits, backdoors, and exploits. It works by comparing MD5 hashes of important files with known hashes that are accessible from an online database. It can detect directory permissions, hidden files, suspicious strings in the kernel, and can perform specific tests for Linux and FreeBSD.&lt;/p>
&lt;p>However, it&amp;rsquo;s worth noting that since 2005, we&amp;rsquo;ve known that it&amp;rsquo;s possible to create distinct files with the same MD5 signature due to a mathematical invariance property of this process.&lt;/p></description></item><item><title>Windows: Refreshing Security Policies (GPO)</title><link>https://wiki.deimos.fr/Windows_:_Rafra%C3%AEchir_les_politiques_de_s%C3%A9curit%C3%A9_%28GPO%29/</link><pubDate>Mon, 23 Oct 2006 10:59:00 +0200</pubDate><guid>https://wiki.deimos.fr/Windows_:_Rafra%C3%AEchir_les_politiques_de_s%C3%A9curit%C3%A9_%28GPO%29/</guid><description>&lt;p>Instead of closing and reopening your session to verify that security policies are working properly, there are commands to avoid disconnecting.&lt;/p>
&lt;ul>
&lt;li>Windows 2000:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3d2f550" class="language-bash ">
 &lt;code>secedit /refreshpolicy machine_policy /enforce&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Windows XP:&lt;/li>
&lt;/ul>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="ac20eb3" class="language-bash ">
 &lt;code>gpupdate /force&lt;/code>
 &lt;/pre>
 &lt;/div></description></item><item><title>Kernel: Module Compilation</title><link>https://wiki.deimos.fr/Kernel_:_Compilation_des_modules/</link><pubDate>Sun, 27 Aug 2006 22:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/Kernel_:_Compilation_des_modules/</guid><description>&lt;p>Iptables is nowadays the Linux firewall of choice. However, when you&amp;rsquo;re a beginner, it&amp;rsquo;s not always easy to know what each module corresponds to.&lt;/p>
&lt;h2 id="minimum-requirements">Minimum Requirements &lt;a href="#minimum-requirements" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>What do you need to recompile at minimum for the kernel?&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="ef63fda" class="language-bash ">
 &lt;code>CONFIG_PACKET - Direct communication with network interfaces
CONFIG_NETFILTER - Kernel management, necessary for Netfilter
CONFIG_IP_NF_CONNTRACK - Necessary for NAT and Masquerade
CONFIG_IP_NF_NETFILTER - Adds NETFILTER table
CONFIG_IP_NF_IPTABLES - Required for iptables user space utility
CONFIG_IP_NF_MANGLE - Adds MANGLE table
CONFIG_IP_NF_NAT - Adds NAT table&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>&lt;strong>Rule not to add:&lt;/strong>&lt;/p></description></item><item><title>Debian: GPG Error During apt-get update</title><link>https://wiki.deimos.fr/Debian_:_Erreur_GPG_lors_d'apt-get_update/</link><pubDate>Sat, 05 Aug 2006 13:05:00 +0200</pubDate><guid>https://wiki.deimos.fr/Debian_:_Erreur_GPG_lors_d'apt-get_update/</guid><description>&lt;div class="prism-codeblock ">
 &lt;pre id="71fd62d" class="language-bash ">
 &lt;code>W: GPG error: http://security.debian.org testing/updates Release:
The following signatures couldn&amp;#39;t be verified because the public key is not available: NO_PUBKEY key-number&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Is this type of message appearing? It&amp;rsquo;s quite annoying, especially since it happens every year. To solve this problem, follow these steps:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="aa25af8" class="language-bash ">
 &lt;code>gpg --keyserver pgpkeys.mit.edu --recv-key key-number
gpg -a --export key-number | apt-key add -&lt;/code>
 &lt;/pre>
 &lt;/div></description></item></channel></rss>