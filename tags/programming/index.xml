<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on Tech Notebook</title><link>https://wiki.deimos.fr/tags/programming/</link><description>Recent content in Programming on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 04 Apr 2025 17:45:45 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Object-Oriented Programming in Perl</title><link>https://wiki.deimos.fr/La_programmation_orient%C3%A9e_objet_en_Perl/</link><pubDate>Sat, 13 Oct 2012 20:15:00 +0200</pubDate><guid>https://wiki.deimos.fr/La_programmation_orient%C3%A9e_objet_en_Perl/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/perl_logo.png" alt="Perl" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>5.10&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.perl.org" rel="external" target="_blank">Perl Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>13/10/2012&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Object-Oriented Programming (which we will refer to as OOP) is a concept with numerous universally recognized virtues today. It&amp;rsquo;s a programming method that helps improve application and software development and maintenance, with significant time savings. It&amp;rsquo;s important to keep in mind that it doesn&amp;rsquo;t reject structured (or procedural) programming since it&amp;rsquo;s built upon it. The classic approach to introducing OOP into an existing language is through encapsulation of existing functionality. The C++ language was built on C and brought OOP. The JAVA language is based on C++ syntax.&lt;/p></description></item><item><title>Better Understanding and Using the C Language Preprocessor</title><link>https://wiki.deimos.fr/Mieux_conna%C3%AEtre_et_utiliser_le_pr%C3%A9processeur_du_langage_C/</link><pubDate>Sun, 06 Dec 2009 15:40:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mieux_conna%C3%AEtre_et_utiliser_le_pr%C3%A9processeur_du_langage_C/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>In the C language, preprocessing is the preliminary stage before compilation. It&amp;rsquo;s a powerful mechanism that allows conditional compilation, file inclusion, and macro definition. Although these features appear simple at first glance, they must be used carefully to avoid compilation errors or, worse, program malfunctions. Additionally, the GCC preprocessor has additional features that can be very useful.&lt;/p>
&lt;h2 id="a-little-known-compiler-failure">A Little-Known Compiler Failure &lt;a href="#a-little-known-compiler-failure" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Thanks to the C macro processor, it&amp;rsquo;s possible to define and use constants as follows:&lt;/p></description></item><item><title>Different Shell Script Loops</title><link>https://wiki.deimos.fr/Les_diff%C3%A9rentes_boucles_du_shell_script/</link><pubDate>Tue, 21 Oct 2008 15:22:00 +0200</pubDate><guid>https://wiki.deimos.fr/Les_diff%C3%A9rentes_boucles_du_shell_script/</guid><description>&lt;h2 id="1-if">1. if &lt;a href="#1-if" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Conditional binary structure: depending on whether a condition is true or false, we execute a block or we don&amp;rsquo;t.&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="91cc772" class="language-bash ">
 &lt;code>if condition ; then
 instruction
fi&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If the condition is true, then instruction (which can be a block of instructions) is executed.&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="29ded5a" class="language-bash ">
 &lt;code>if condition ; then
 instruction1
else
 instruction2
fi&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>For the same construction but with multiple conditions:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="4cd5041" class="language-bash ">
 &lt;code>if [condition1] || [condition2] ; then
 instruction1
else
 instruction2
fi&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If the condition is true, then instruction1 is executed and the second is ignored, otherwise instruction2 is executed and the first is ignored.&lt;/p></description></item><item><title>Learning Perl 6</title><link>https://wiki.deimos.fr/apprendre-le-perl-6/</link><pubDate>Wed, 26 Mar 2008 19:03:00 +0100</pubDate><guid>https://wiki.deimos.fr/apprendre-le-perl-6/</guid><description>&lt;p>Here is documentation to learn Perl 6 in record time. This documentation is super clear and relatively short compared to everything you&amp;rsquo;ll learn from it.&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/learningperl6.pdf">Learning Perl 6&lt;/a>&lt;/p></description></item></channel></rss>