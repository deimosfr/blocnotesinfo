<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Filesystems &amp; Storage on Tech Notebook</title><link>https://wiki.deimos.fr/docs/linux/filesystemsandstorage/</link><description>Recent content in Filesystems &amp; Storage on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 28 Apr 2025 18:51:06 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/docs/linux/filesystemsandstorage/index.xml" rel="self" type="application/rss+xml"/><item><title>LVM: Working with Logical Volume Management</title><link>https://wiki.deimos.fr/LVM_:_Utilisation_des_LVM/</link><pubDate>Mon, 15 Sep 2014 11:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/LVM_:_Utilisation_des_LVM/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Logical Volume Management (LVM) is a method and software for partitioning, concatenating, and utilizing storage spaces on a server. It allows flexible management, security, and online optimization of storage spaces in UNIX/Linux-type operating systems.&lt;/p>
&lt;p>We also refer to it as Volume Manager.&lt;/p>
&lt;p>Since LVM is not very simple to use, and since I don&amp;rsquo;t handle it every day either, I thought a small documentation was essential. I&amp;rsquo;ll fill it in as needed.&lt;/p></description></item><item><title>Optimizing Hard Disk Performance on Linux</title><link>https://wiki.deimos.fr/Optimiser_les_performances_des_disques_dur_sur_Linux/</link><pubDate>Thu, 02 Jan 2014 14:47:00 +0200</pubDate><guid>https://wiki.deimos.fr/Optimiser_les_performances_des_disques_dur_sur_Linux/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/poweredbylinux.jpg" alt="Linux" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>Kernel 2.6.32+&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Red Hat 6.3&lt;br />Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.kernel.org" rel="external" target="_blank">Kernel Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>02/01/2014&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Physical hard drives are currently the slowest components in our machines, whether they are mechanical hard drives with platters or even SSDs! But there are ways to optimize their performance according to specific needs. In this article, we&amp;rsquo;ll look at several aspects that should help you understand why bottlenecks can occur, how to avoid them, and solutions for benchmarking.&lt;/p></description></item><item><title>Foremost: Recover Deleted Data</title><link>https://wiki.deimos.fr/Foremost_:_r%C3%A9cup%C3%A9rer_des_donn%C3%A9es_supprim%C3%A9es/</link><pubDate>Wed, 07 Aug 2013 15:27:00 +0200</pubDate><guid>https://wiki.deimos.fr/Foremost_:_r%C3%A9cup%C3%A9rer_des_donn%C3%A9es_supprim%C3%A9es/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Foremost is a forensics application to recover files based on their headers, footers, and internal data structures. Foremost can work on image files, such as those generated by dd, Safeback, Encase, etc, or directly on a drive. This short article shows how you can use foremost to recover deleted files.&lt;/p>
&lt;p>I do not issue any guarantee that this will work for you!&lt;/p>
&lt;p>Currently foremost can recover the following file types:&lt;/p></description></item><item><title>Clone a Hard Drive</title><link>https://wiki.deimos.fr/Cloner_un_disque_dur/</link><pubDate>Tue, 07 May 2013 09:10:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cloner_un_disque_dur/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To clone a disk under Windows, you need to pull out all the tools, and if it&amp;rsquo;s bootable, then hold on tight&amp;hellip; how much does it cost? Obviously, Windows purist pirates will tell me they download a cracked version.&lt;/p>
&lt;p>Why use such tools and break the law when free and amazing tools exist? Let&amp;rsquo;s take a look at some options&amp;hellip;&lt;/p>
&lt;h2 id="solutions">Solutions &lt;a href="#solutions" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="dd">dd &lt;a href="#dd" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>dd is the ultimate solution. To duplicate a disk with a progress bar:&lt;/p></description></item><item><title>ACL: Implementing NT-type Permissions on Linux</title><link>https://wiki.deimos.fr/ACL:_Impl%C3%A9mentation_des_droits_de_type_NT_sur_Linux/</link><pubDate>Mon, 06 May 2013 15:00:00 +0200</pubDate><guid>https://wiki.deimos.fr/ACL:_Impl%C3%A9mentation_des_droits_de_type_NT_sur_Linux/</guid><description>&lt;p>An ACL, or Access Control List, is simply defined as a list of permissions on a file, directory, or tree structure, added to the &amp;ldquo;classic&amp;rdquo; permissions (technically, POSIX.1 permissions) of that file. These permissions concern defined users and/or groups. ACL management under GNU/Linux is inspired by the POSIX 1003.1e standard (project 17) but does not fully comply with it.&lt;/p>
&lt;p>With ACLs, you can extend the number of users and groups that have rights to the same file. Remember that in the UNIX world, each file can normally only indicate permissions for a single user and a single group, which are opposed to a single category corresponding to &amp;ldquo;all others&amp;rdquo; (or &amp;ldquo;the rest of the world&amp;rdquo;). With ACLs, you can (among other things) add other users and groups to a file and define their rights separately. This brings the system closer to the permission system used on NT platforms (although many differences remain).&lt;/p></description></item><item><title>AutoSSH: Automatically Reconnect SSH Tunnels</title><link>https://wiki.deimos.fr/Autossh_:_reconnecter_automatiquement_un_tunnel_SSH/</link><pubDate>Wed, 20 Mar 2013 10:44:00 +0200</pubDate><guid>https://wiki.deimos.fr/Autossh_:_reconnecter_automatiquement_un_tunnel_SSH/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/openssh_logo.png" alt="AutoSSH" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>1.4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.harding.motd.ca/autossh/" rel="external" target="_blank">AutoSSH Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>20/03/2013&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Others&lt;/strong>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If like me you need to maintain a permanent tunnel, and you want it to automatically reconnect in case of disconnection, you need to use a tool like AutoSSH. I&amp;rsquo;ll skip the details of its complete operation, but you should know that it can work in 2 ways:&lt;/p></description></item><item><title>Parted: Solving Partitioning Problems on Large Filesystems</title><link>https://wiki.deimos.fr/Parted_:_r%C3%A9soudre_les_probl%C3%A8mes_de_partionnnement_sur_gros_filesystems/</link><pubDate>Wed, 13 Feb 2013 12:54:00 +0200</pubDate><guid>https://wiki.deimos.fr/Parted_:_r%C3%A9soudre_les_probl%C3%A8mes_de_partionnnement_sur_gros_filesystems/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/parted_logo.png" alt="Parted logo" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>2.1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 6&lt;br>Red Hat 6.3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>13/02/2013&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>GNU Parted is a program for creating, destroying, resizing, checking, and copying partitions, and the file systems on them. This is useful for creating space for new operating systems, reorganizing hard disk usage, copying data between hard disks, and disk imaging. It was written by Andrew Clausen and Lennert Buytenhek.&lt;/p>
&lt;p>It consists of a library, libparted, and a command-line frontend, parted, that also serves as reference implementation.&lt;/p></description></item><item><title>BTRFS: Using the Ext4 Replacement</title><link>https://wiki.deimos.fr/BTRFS_:_Utilisation_du_rempla%C3%A7ant_de_l%27Ext4/</link><pubDate>Thu, 05 Jul 2012 21:08:00 +0200</pubDate><guid>https://wiki.deimos.fr/BTRFS_:_Utilisation_du_rempla%C3%A7ant_de_l%27Ext4/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/btrfs_logo.png" alt="BTRFS" loading="lazy">

&lt;/p>







&lt;table class="table table-hover table-striped">
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Software version&lt;/strong>&lt;/td>
 &lt;td>0.19&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Operating System&lt;/strong>&lt;/td>
 &lt;td>Debian 7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Website&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://btrfs.wiki.kernel.org" rel="external" target="_blank">BTRFS Website&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Last Update&lt;/strong>&lt;/td>
 &lt;td>05/07/2012&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Others&lt;/strong>&lt;/td>
 &lt;td>Kernel used:&lt;br>3.2.0-2-amd64&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>

&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://btrfs.wiki.kernel.org/" rel="external" target="_blank">BTRFS&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is the perfect replacement for the aging ExtX filesystem. For those familiar with &lt;a href="zfs:_le_filesystem_par_excellence/" rel="external" target="_blank">the ZFS filesystem&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>, BTRFS draws heavily from it.&lt;/p></description></item><item><title>Tmpfs: RAM filesystem or how to write to RAM</title><link>https://wiki.deimos.fr/Tmpfs_:_un_filesystem_en_ram_ou_comment_%C3%A9crire_en_ram/</link><pubDate>Sat, 18 Feb 2012 18:47:00 +0200</pubDate><guid>https://wiki.deimos.fr/Tmpfs_:_un_filesystem_en_ram_ou_comment_%C3%A9crire_en_ram/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>TmpFS (Temporary File System) is the generic name given to any temporary Unix filesystem. Any file created in such a filesystem disappears when the system shuts down.&lt;/p>
&lt;p>The default implementation of tmpfs in Linux 2.6.x kernels is based on ramfs which uses the caching mechanism to optimize memory management.&lt;br>
It is also available on Solaris 10.&lt;/p>
&lt;p>However, for security reasons, tmpfs additionally offers a memory size limit set at mount time that can be changed on-the-fly with the &amp;ldquo;remount&amp;rdquo; option. Tmpfs also allows the system to use swap when necessary, which provides an additional guarantee.&lt;/p></description></item><item><title>ZFS On Linux: Setting up ZFS on Linux</title><link>https://wiki.deimos.fr/ZFS_On_Linux_:_Mise_en_place_de_ZFS_sous_Linux/</link><pubDate>Tue, 06 Dec 2011 20:57:00 +0200</pubDate><guid>https://wiki.deimos.fr/ZFS_On_Linux_:_Mise_en_place_de_ZFS_sous_Linux/</guid><description>&lt;p>










&lt;img src="https://wiki.deimos.fr/images/zfs-linux.png" alt="ZFS on Linux Logo" loading="lazy">

&lt;/p>
&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If like me you&amp;rsquo;re a fan of this filesystem and find it a shame that it&amp;rsquo;s not natively available on Linux, there are currently several solutions to have this filesystem:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.oracle.com" rel="external" target="_blank">Solaris&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>/OpenSolaris: This is where ZFS comes from, but it remains a proprietary OS&lt;/li>
&lt;li>&lt;a href="https://www.freebsd.org/" rel="external" target="_blank">FreeBSD&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>: The first port of ZFS appeared on FreeBSD, but we&amp;rsquo;re looking to use Linux here&lt;/li>
&lt;li>&lt;a href="https://www.debian.org/ports/kfreebsd-gnu/" rel="external" target="_blank">Kfreebsd&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>: not really Linux (although Debian), but a FreeBSD kernel that allows ZFS to run with a Debian-style layer on top&lt;/li>
&lt;li>&lt;a href="https://zfs-fuse.net/" rel="external" target="_blank">ZFS on Fuse&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>: works on Linux, slow (because it runs on FUSE) but historically the first to be released for Linux (so supposedly the most mature)&lt;/li>
&lt;li>&lt;a href="https://zfsonlinux.org" rel="external" target="_blank">ZFS on Linux&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>: newer, but has the advantage of running as a Linux kernel module&lt;/li>
&lt;/ul>
&lt;p>I chose this last solution because I wanted to keep a Linux machine (Debian/Ubuntu) and have ZFS.&lt;/p></description></item><item><title>Smartmontools: Hard Drive Monitoring</title><link>https://wiki.deimos.fr/Smartmontool_:_Surveillance_des_disques_dur/</link><pubDate>Fri, 14 Jan 2011 20:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/Smartmontool_:_Surveillance_des_disques_dur/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Smartmontools is a tool for analyzing hard drives and their most critical physical characteristics. It consists of two parts: smartd daemon, which checks parameters every 30 minutes and writes the results to &lt;code>/var/log/syslog&lt;/code>, and the smartctl command which requires root privileges and is used to display all the information.&lt;/p>
&lt;h2 id="activation--installation-of-smartmontools">Activation / Installation of smartmontools &lt;a href="#activation--installation-of-smartmontools" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="debian">Debian &lt;a href="#debian" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Installation requires root privileges. The package name varies depending on your Debian version. The example below is for Sarge.&lt;/p></description></item><item><title>Scalpel: Recovering Deleted Data</title><link>https://wiki.deimos.fr/Scalpel_:_r%C3%A9cup%C3%A9rer_des_donn%C3%A9es_supprim%C3%A9es/</link><pubDate>Mon, 30 Nov 2009 20:45:00 +0200</pubDate><guid>https://wiki.deimos.fr/Scalpel_:_r%C3%A9cup%C3%A9rer_des_donn%C3%A9es_supprim%C3%A9es/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Scalpel is a tool that allows you to recover files and folders that have been deleted from your hard drive.&lt;/p>
&lt;h2 id="resources">Resources &lt;a href="#resources" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;a href="https://wiki.deimos.fr/pdf/recover_deleted_files_with_scalpel.pdf">Recover Deleted Files With Scalpel&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Limiting I/O usage by an application</title><link>https://wiki.deimos.fr/O_par_une_application/</link><pubDate>Thu, 19 Nov 2009 07:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/O_par_une_application/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Want to know why your load average is so high? Run this command to see what processes are on the run queue. Runnable processes have a status of &amp;ldquo;R&amp;rdquo;, and commands waiting on I/O have a status of &amp;ldquo;D&amp;rdquo;.&lt;/p>
&lt;p>Once found, you may need to reduce its I/O requests, so we&amp;rsquo;ll use ionice.&lt;/p>
&lt;h2 id="get-io-apps">Get I/O apps &lt;a href="#get-io-apps" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>To get the biggest I/O consuming applications:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="cec5452" class="language-bash ">
 &lt;code>ps -eo stat,pid,user,command &lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>On some older versions of Linux may require -emo instead of -eo.&lt;/p></description></item><item><title>SWAP: Creating Dynamic Swap</title><link>https://wiki.deimos.fr/SWAP_:_Cr%C3%A9ation_de_swap_dynamique/</link><pubDate>Sat, 19 Sep 2009 21:47:00 +0200</pubDate><guid>https://wiki.deimos.fr/SWAP_:_Cr%C3%A9ation_de_swap_dynamique/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Creating a swap partition is quite straightforward but extremely useful when you&amp;rsquo;re running out of RAM.&lt;/p>
&lt;h2 id="creating-swap">Creating Swap &lt;a href="#creating-swap" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="on-a-partition">On a Partition &lt;a href="#on-a-partition" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Use fdisk on the target partition:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="ee700a7" class="language-bash ">
 &lt;code>fdisk /dev/hdc1&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Then create a primary partition with the key combination &lt;strong>&amp;ldquo;n p 1&amp;rdquo;&lt;/strong>. Next, change the ID to indicate it&amp;rsquo;s a swap partition with &lt;strong>&amp;ldquo;t 82&amp;rdquo;&lt;/strong>.&lt;/p>
&lt;p>Save everything with the &amp;ldquo;w&amp;rdquo; key. To finish setting up our partition, we need to initialize it:&lt;/p></description></item><item><title>Filesystem Conversion</title><link>https://wiki.deimos.fr/Conversion_de_filesystems/</link><pubDate>Fri, 08 May 2009 06:39:00 +0200</pubDate><guid>https://wiki.deimos.fr/Conversion_de_filesystems/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Sometimes you need to convert your filesystem to a more recent one when possible, without having to reformat everything.&lt;/p>
&lt;h2 id="ext3---ext4">EXT3 -&amp;gt; EXT4 &lt;a href="#ext3---ext4" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>It&amp;rsquo;s obvious that the partition to be converted must be unmounted beforehand. Here, I&amp;rsquo;ll use an LVM partition in ext3 to convert it to ext4:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e013435" class="language-bash ">
 &lt;code>tune2fs -O extents,uninit_bg,dir_index /dev/mapper/lvm-home
fsck -pf /dev/mapper/lvm-home&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If you&amp;rsquo;re modifying the boot partition, you need to boot from a live CD for example, then run this command to revalidate grub:&lt;/p></description></item><item><title>No space left on device while there is space available</title><link>https://wiki.deimos.fr/No_space_left_on_device_alors_qu%5C%27il_y_a_de_la_place/</link><pubDate>Mon, 13 Oct 2008 20:43:00 +0200</pubDate><guid>https://wiki.deimos.fr/No_space_left_on_device_alors_qu%5C%27il_y_a_de_la_place/</guid><description>&lt;h2 id="the-problem">The problem &lt;a href="#the-problem" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Sometimes the system can no longer write to a partition and reports &amp;ldquo;No Space Left On Device&amp;rdquo; even though &amp;ldquo;df -h&amp;rdquo; shows that there is enough space available.&lt;/p>
&lt;p>For example, I can no longer write at all to my &amp;ldquo;/var&amp;rdquo; partition. Let&amp;rsquo;s check the space with df -h:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="d6f54e3" class="language-bash ">
 &lt;code>Sys. de fich. Tail. Occ. Disp. %Occ. Monté sur
/dev/sda3 9,7G 2,4G 6,9G 26% /
tmpfs 498M 0 498M 0% /lib/init/rw
tmpfs 498M 0 498M 0% /dev/shm
/dev/sda1 122M 9,9M 106M 9% /boot
/dev/sda6 132G 3,6G 121G 3% /mnt/datas
/dev/sda5 4,9G 4,0G 629M 87% /var&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="the-solution">The solution &lt;a href="#the-solution" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>BUT WHY??? After some reflection and research&amp;hellip; OF COURSE! The inodes!!!&lt;/p></description></item><item><title>Incron: Execute Automatic Actions When File States Change</title><link>https://wiki.deimos.fr/Incron_:_ex%C3%A9cuter_des_actions_automatiques_lors_de_changements_d%27%C3%A9tats_d%27%C3%A9l%C3%A9ments/</link><pubDate>Mon, 13 Oct 2008 19:42:00 +0200</pubDate><guid>https://wiki.deimos.fr/Incron_:_ex%C3%A9cuter_des_actions_automatiques_lors_de_changements_d%27%C3%A9tats_d%27%C3%A9l%C3%A9ments/</guid><description>&lt;p>Also known as files trigger, Incron allows you to perform actions when certain files change their state:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/triggering_commands_on_file_directory_changes_with_incron.pdf">Triggering Commands On File Directory Changes With Incron&lt;/a>&lt;/p></description></item><item><title>Setting up quotas on Linux</title><link>https://wiki.deimos.fr/Mise_en_place_des_quotas_sous_Linux/</link><pubDate>Fri, 23 May 2008 14:43:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_des_quotas_sous_Linux/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The assignment of quotas in a file system is a tool that allows control of disk space usage. Quotas consist of setting a space limit for a user or a group of users.&lt;/p>
&lt;p>For the creation of these quotas, &lt;strong>2 types of limits&lt;/strong> are defined:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>The soft limit&lt;/strong>: indicates the maximum amount of space that a user can occupy on the file system. If this limit is reached, the user receives warning messages about exceeding their assigned quota. When used in combination with grace periods, if the user continues to exceed the soft limit after the grace period has elapsed, they will face the same restriction as when reaching a hard limit.&lt;/p></description></item><item><title>Anatomy of a Linux Filesystem</title><link>https://wiki.deimos.fr/anatomie-d-un-filesystem-linux/</link><pubDate>Wed, 07 Nov 2007 10:42:00 +0100</pubDate><guid>https://wiki.deimos.fr/anatomie-d-un-filesystem-linux/</guid><description>&lt;p>Here is good documentation for people who want to understand how the Linux filesystem works:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/anatomy_of_linux_filesystem.pdf">Documentation on Anatomy of a Linux FileSystem&lt;/a>&lt;/p></description></item><item><title>AutoFsck: Changing Filesystem Checks on Ubuntu</title><link>https://wiki.deimos.fr/AutoFsck_:_Changer_les_checks_filesystem_sur_Ubuntu/</link><pubDate>Sat, 25 Aug 2007 21:57:00 +0200</pubDate><guid>https://wiki.deimos.fr/AutoFsck_:_Changer_les_checks_filesystem_sur_Ubuntu/</guid><description>&lt;p>If you&amp;rsquo;ve used Ubuntu Linux for longer than a month, you&amp;rsquo;ve no doubt realized that every 30 times you boot up you are forced to run a filesystem check. This filesystem check is necessary in order to keep your filesystem healthy. Some people advise turning the check off completely, but that is generally not a recommended solution. Another solution is to increase the number of maximum mounts from 30 to some larger number like 100. That way it&amp;rsquo;s about 3 times less annoying. But this solution is also not recommended. Enter AutoFsck.&lt;/p></description></item><item><title>TestDisk: Recovering Lost Data</title><link>https://wiki.deimos.fr/Testdisk_:_r%C3%A9cup%C3%A9rer_des_donn%C3%A9es_perdues/</link><pubDate>Fri, 13 Jul 2007 20:07:00 +0200</pubDate><guid>https://wiki.deimos.fr/Testdisk_:_r%C3%A9cup%C3%A9rer_des_donn%C3%A9es_perdues/</guid><description>&lt;p>If you need to recover lost data, here is a solution:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/data_recovery_with_testdisk.pdf">TestDisk Documentation&lt;/a>&lt;/p></description></item><item><title>Creating Blank Images for Testing Filesystems</title><link>https://wiki.deimos.fr/Cr%C3%A9er_des_images_vierges_pour_tester_des_filesystems/</link><pubDate>Wed, 20 Jun 2007 08:16:00 +0200</pubDate><guid>https://wiki.deimos.fr/Cr%C3%A9er_des_images_vierges_pour_tester_des_filesystems/</guid><description>&lt;p>If, like me, you want to test a new filesystem or hardware speed without risking damage to one of your partitions, here&amp;rsquo;s a small tip that allows you to create a blank disk image to work with:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1d60cb4" class="language-bash ">
 &lt;code>dd if=/dev/zero of=./mon_image.img bs=1M count=128&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>or&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="29440af" class="language-bash ">
 &lt;code>dd if=/dev/zero of=./10M.img bs=10m count=1&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>The second line is more for BSD systems.&lt;/p>
&lt;p>Here, I&amp;rsquo;ll have a 128 MB image. Change the last number if you want a different size.&lt;/p></description></item><item><title>Ext3: Resize partitions without data loss</title><link>https://wiki.deimos.fr/Ext3_:_redimensionner_ses_partitions_sans_pertes_de_donn%C3%A9es/</link><pubDate>Sun, 07 Jan 2007 18:41:00 +0200</pubDate><guid>https://wiki.deimos.fr/Ext3_:_redimensionner_ses_partitions_sans_pertes_de_donn%C3%A9es/</guid><description>&lt;p>Here is an interesting and quick documentation:&lt;/p>
&lt;p>&lt;a href="https://wiki.deimos.fr/pdf/resize_ext3_nodatalost.pdf">Resize ext3 without data loss&lt;/a>&lt;/p></description></item><item><title>Hdparm: Optimizing Disk Access</title><link>https://wiki.deimos.fr/Hdparm_:_Optimiser_les_acc%C3%A8s_disques/</link><pubDate>Wed, 18 Oct 2006 09:14:00 +0200</pubDate><guid>https://wiki.deimos.fr/Hdparm_:_Optimiser_les_acc%C3%A8s_disques/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>When you copy large files from one hard drive to another or copy the contents of a CD-ROM to a hard drive, you may have noticed a significant slowdown in your system. During the transfer, music might begin to crackle, for example, or DVD-ROM playback is particularly slow.&lt;/p>
&lt;ul>
&lt;li>Considerations&lt;/li>
&lt;/ul>
&lt;p>Throughout this article, we consider that your hard drive is the master on the first IDE interface, meaning it is connected to the entry point &lt;code>/dev/hda&lt;/code>.&lt;/p></description></item><item><title>FUSE: Unable to Mount Disks Due to /dev/fuse</title><link>https://wiki.deimos.fr/fuse-refus-de-monter-les-disques-a-cause-de-dev-fuse/</link><pubDate>Sat, 05 Aug 2006 12:58:00 +0200</pubDate><guid>https://wiki.deimos.fr/fuse-refus-de-monter-les-disques-a-cause-de-dev-fuse/</guid><description>&lt;p>I once encountered this problem. I didn&amp;rsquo;t look into it for long, but it&amp;rsquo;s quite annoying, and the worst part is that I don&amp;rsquo;t have an explanation for it.&lt;/p>
&lt;p>After a reboot, I got an error message saying that FUSE could not mount my encrypted disks because &amp;ldquo;/dev/fuse&amp;rdquo; did not allow it.&lt;/p>
&lt;p>Indeed, the device file didn&amp;rsquo;t exist, which is why I had to run this command to recreate it:&lt;/p></description></item></channel></rss>