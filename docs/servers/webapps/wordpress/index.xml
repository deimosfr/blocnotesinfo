<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wordpress on Tech Notebook</title><link>https://wiki.deimos.fr/docs/servers/webapps/wordpress/</link><description>Recent content in Wordpress on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 04 Apr 2025 17:45:45 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/docs/servers/webapps/wordpress/index.xml" rel="self" type="application/rss+xml"/><item><title>Advanced WordPress Usage</title><link>https://wiki.deimos.fr/Utilisation_avanc%C3%A9e_de_Wordpress/</link><pubDate>Tue, 07 May 2013 07:28:00 +0200</pubDate><guid>https://wiki.deimos.fr/Utilisation_avanc%C3%A9e_de_Wordpress/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>WordPress is great, but it also has limitations that can quickly become annoying. There are ways to overcome these limitations, which I&amp;rsquo;m going to explain here.&lt;/p>
&lt;h2 id="nginx-configuration">Nginx Configuration &lt;a href="#nginx-configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For WordPress configuration under Nginx, here&amp;rsquo;s an example:&lt;/p>



 
 
 

 
 
 
 
 
 

 
 

 &lt;div class="prism-codeblock linenos">
 &lt;pre id="a03c2d2" class="language-nginx line-numbers">
 &lt;code>server {
 include listen_port.conf;
 listen 443 ssl;

 ssl_certificate /etc/nginx/ssl/deimos.fr/server-unified.crt;
 ssl_certificate_key /etc/nginx/ssl/deimos.fr/server.key;
 ssl_session_timeout 5m;

 server_name blog.deimos.fr;
 root /usr/share/nginx/www/deimos.fr/blog;
 index index.php;

 access_log /var/log/nginx/blog.deimos.fr_access.log;
 error_log /var/log/nginx/blog.deimos.fr_error.log;

 location / {
 try_files $uri $uri/ /index.php?$args;
 }

 location ~ \.php$ {
 fastcgi_cache mycache;
 fastcgi_cache_key $request_method$host$request_uri;
 fastcgi_cache_valid any 1h;
 include fastcgi_params;
 fastcgi_pass unix:/var/run/php5-fpm.sock;
 fastcgi_intercept_errors on;
 }

 # Drop config
 include drop.conf;

 # BEGIN W3TC Browser Cache
 gzip on;
 gzip_types text/css application/x-javascript text/x-component text/richtext image/svg&amp;#43;xml text/plain text/xsd text/xsl text/xml image/x-icon;
 location ~ \.(css|js|htc)$ {
 expires 31536000s;
 add_header Pragma &amp;#34;public&amp;#34;;
 add_header Cache-Control &amp;#34;public, must-revalidate, proxy-revalidate&amp;#34;;
 add_header X-Powered-By &amp;#34;W3 Total Cache/0.9.2.4&amp;#34;;
 }

 location ~ \.(html|htm|rtf|rtx|svg|svgz|txt|xsd|xsl|xml)$ {
 expires 3600s;
 add_header Pragma &amp;#34;public&amp;#34;;
 add_header Cache-Control &amp;#34;public, must-revalidate, proxy-revalidate&amp;#34;;
 add_header X-Powered-By &amp;#34;W3 Total Cache/0.9.2.4&amp;#34;;
 }

 location ~ \.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|eot|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|otf|odb|odc|odf|odg|odp|ods|odt|ogg|pdf|png|pot|pps|ppt|pptx|ra|ram|svg|svgz|swf|tar|tif|tiff|ttf|ttc|wav|wma|wri|xla|xls|xlsx|xlt|xlw|zip)$ {
 expires 31536000s;
 add_header Pragma &amp;#34;public&amp;#34;;
 add_header Cache-Control &amp;#34;public, must-revalidate, proxy-revalidate&amp;#34;;
 add_header X-Powered-By &amp;#34;W3 Total Cache/0.9.2.4&amp;#34;;
 }
 # END W3TC Browser Cache

 # BEGIN W3TC Minify core
 rewrite ^/wp-content/w3tc/min/w3tc_rewrite_test$ /wp-content/w3tc/min/index.php?w3tc_rewrite_test=1 last;
 rewrite ^/wp-content/w3tc/min/(.&amp;#43;\.(css|js))$ /wp-content/w3tc/min/index.php?file=$1 last;
 # END W3TC Minify core
}
}&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="using-javascript-in-a-post">Using JavaScript in a Post &lt;a href="#using-javascript-in-a-post" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>I want to use JavaScript here to prevent my email address from being captured by spam robots. We first need to insert this in a post:&lt;/p></description></item><item><title>WordPress: Useful Extensions</title><link>https://wiki.deimos.fr/Wordpress_:_les_extentions_pratiques/</link><pubDate>Mon, 12 Apr 2010 20:35:00 +0200</pubDate><guid>https://wiki.deimos.fr/Wordpress_:_les_extentions_pratiques/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>WordPress is, in my opinion, THE ultimate blogging platform. Like Firefox, it really shines with its plugins. Here&amp;rsquo;s my list of plugins that I currently use or have used in the past that I find interesting.&lt;/p>
&lt;h2 id="tips">Tips &lt;a href="#tips" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="adding-file-extensions-for-upload">Adding File Extensions for Upload &lt;a href="#adding-file-extensions-for-upload" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>You may have noticed that you can&amp;rsquo;t upload just anything to WordPress, which can be frustrating. By looking into the source code, you can add more extensions. For example, I needed to add the ogv format:&lt;/p></description></item><item><title>Setting up Memcached on WordPress</title><link>https://wiki.deimos.fr/Mise_en_place_de_Memcached_sur_Wordpress/</link><pubDate>Tue, 08 Sep 2009 21:38:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_de_Memcached_sur_Wordpress/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Memcached is a cache server that, unlike some PHP accelerators, does not consume additional CPU. It&amp;rsquo;s therefore an ideal compromise. For WordPress, there is currently no simple solution to quickly set up this solution (although it&amp;rsquo;s not very time-consuming anyway).&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>On Debian, it&amp;rsquo;s easy:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="162ea94" class="language-bash ">
 &lt;code>apt-get install memcached&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Your memcached server is now running on port 11211.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="server">Server &lt;a href="#server" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Nothing special needs to be done, the basic configuration is sufficient.&lt;/p></description></item></channel></rss>