<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Applications on Tech Notebook</title><link>https://wiki.deimos.fr/docs/solaris/applications/</link><description>Recent content in Applications on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 May 2025 20:33:41 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/docs/solaris/applications/index.xml" rel="self" type="application/rss+xml"/><item><title>Setting up OpenLDAP Client</title><link>https://wiki.deimos.fr/Mise_en_place_du_client_OpenLDAP/</link><pubDate>Wed, 23 Sep 2009 09:00:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_du_client_OpenLDAP/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>OpenLDAP is unfortunately not available as standard on Solaris, however it is possible to install it via pkg-get.&lt;/p>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Configure the &lt;code>/etc/pam.conf&lt;/code> file:&lt;/li>
&lt;/ul>
&lt;p>For each line:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="1c0ea0a" class="language-bash ">
 &lt;code>service auth required pam_unix_auth.so.1&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>replace &amp;ldquo;required&amp;rdquo; with &amp;ldquo;sufficient&amp;rdquo; and add behind the line:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="6af2348" class="language-bash ">
 &lt;code>service auth sufficient pam_ldap.so.1 try_first_pass&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>This should result in something like this (&lt;code>/etc/pam.conf&lt;/code>):&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="b261686" class="language-bash ">
 &lt;code>#
#ident &amp;#34;@(#)pam.conf 1.28 04/04/21 SMI&amp;#34;
#
# Copyright 2004 Sun Microsystems, Inc. All rights reserved.
# Use is subject to license terms.
#
# PAM configuration
#
# Unless explicitly defined, all services use the modules
# defined in the &amp;#34;other&amp;#34; section.
#
# Modules are defined with relative pathnames, i.e., they are
# relative to /usr/lib/security/$ISA. Absolute path names, as
# present in this file in previous releases are still acceptable.
#
# Authentication management
#
# login service (explicit because of pam_dial_auth)
#
login auth requisite pam_authtok_get.so.1
login auth required pam_dhkeys.so.1
login auth required pam_unix_cred.so.1
login auth sufficient pam_ldap.so.1 try_first_pass
login auth sufficient pam_unix_auth.so.1
login auth required pam_dial_auth.so.1
#
# rlogin service (explicit because of pam_rhost_auth)
#
rlogin auth sufficient pam_rhosts_auth.so.1
rlogin auth requisite pam_authtok_get.so.1
rlogin auth required pam_dhkeys.so.1
rlogin auth required pam_unix_cred.so.1
rlogin auth sufficient pam_ldap.so.1 try_first_pass
rlogin auth sufficient pam_unix_auth.so.1
#
# Kerberized rlogin service
#
krlogin auth required pam_unix_cred.so.1
krlogin auth binding pam_krb5.so.1
krlogin auth sufficient pam_ldap.so.1
krlogin auth sufficient pam_unix_auth.so.1
#
# rsh service (explicit because of pam_rhost_auth,
# and pam_unix_auth for meaningful pam_setcred)
#
rsh auth sufficient pam_rhosts_auth.so.1
rsh auth required pam_unix_cred.so.1
#
# Kerberized rsh service
#
krsh auth required pam_unix_cred.so.1
krsh auth binding pam_krb5.so.1
krsh auth sufficient pam_ldap.so.1
krsh auth sufficient pam_unix_auth.so.1
#
# Kerberized telnet service
#
ktelnet auth required pam_unix_cred.so.1
ktelnet auth binding pam_krb5.so.1
ktelnet auth sufficient pam_ldap.so.1
ktelnet auth sufficient pam_unix_auth.so.1
#
# PPP service (explicit because of pam_dial_auth)
#
ppp auth requisite pam_authtok_get.so.1
ppp auth required pam_dhkeys.so.1
ppp auth required pam_unix_cred.so.1
ppp auth sufficient pam_ldap.so.1
ppp auth sufficient pam_unix_auth.so.1
ppp auth required pam_dial_auth.so.1
#
# Default definitions for Authentication management
# Used when service name is not explicitly mentioned for authentication
#
other auth requisite pam_authtok_get.so.1
other auth required pam_dhkeys.so.1
other auth required pam_unix_cred.so.1
other auth sufficient pam_ldap.so.1
other auth sufficient pam_unix_auth.so.1
#
# passwd command (explicit because of a different authentication module)
#
passwd auth required pam_passwd_auth.so.1
#
# cron service (explicit because of non-usage of pam_roles.so.1)
#
cron account required pam_unix_account.so.1
#
# Default definition for Account management
# Used when service name is not explicitly mentioned for account management
#
other account requisite pam_roles.so.1
other account required pam_unix_account.so.1
#
# Default definition for Session management
# Used when service name is not explicitly mentioned for session management
#
other session required pam_unix_session.so.1
#
# Default definition for Password management
# Used when service name is not explicitly mentioned for password management
#
other password required pam_dhkeys.so.1
other password requisite pam_authtok_get.so.1
other password requisite pam_authtok_check.so.1
other password required pam_authtok_store.so.1
#
# Support for Kerberos V5 authentication and example configurations can
# be found in the pam_krb5(5) man page under the &amp;#34;EXAMPLES&amp;#34; section.
#&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;ul>
&lt;li>Configure the &lt;code>/etc/nsswitch.ldap&lt;/code> file&lt;/li>
&lt;/ul>
&lt;p>Keep &amp;ldquo;ldap&amp;rdquo; only where it&amp;rsquo;s useful: for now on the passwd: and group: lines.
For the rest, use the content of the &lt;code>/etc/nsswitch.dns&lt;/code> file.
This gives:&lt;/p></description></item><item><title>Jumpstart: Automating Solaris Installations Without Networks</title><link>https://wiki.deimos.fr/Jumpstart:_automatiser_les_installations_Solaris_sans_r%C3%A9seaux/</link><pubDate>Fri, 21 Aug 2009 15:17:00 +0200</pubDate><guid>https://wiki.deimos.fr/Jumpstart:_automatiser_les_installations_Solaris_sans_r%C3%A9seaux/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>For my job, I had to automate Solaris installations. Jumpstart exists for this purpose. The problem is that in a new datacenter, you don&amp;rsquo;t always have what you need. That&amp;rsquo;s the real issue. That&amp;rsquo;s why I researched documentation on the internet, which often doesn&amp;rsquo;t work properly, and I&amp;rsquo;ll try to create a comprehensible guide that works (hopefully).&lt;/p>
&lt;h2 id="prerequisites">Prerequisites &lt;a href="#prerequisites" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>You&amp;rsquo;ll need a fresh Solaris installation on which you&amp;rsquo;ll do minimal configuration. Also install anything else you&amp;rsquo;re interested in.&lt;/p></description></item><item><title>DTrace: Real-time Problem Detection</title><link>https://wiki.deimos.fr/DTrace_:_d%C3%A9tection_de_probl%C3%A8mes_en_temps_r%C3%A9el/</link><pubDate>Fri, 26 Dec 2008 18:24:00 +0200</pubDate><guid>https://wiki.deimos.fr/DTrace_:_d%C3%A9tection_de_probl%C3%A8mes_en_temps_r%C3%A9el/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://fr.wikipedia.org/wiki/DTrace" rel="external" target="_blank">DTrace&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> is a tracing system designed by Sun Microsystems for real-time problem detection at both kernel and application levels. It has been available since November 2003 and was integrated as part of Solaris 10 in January 2005. DTrace is the first component of the OpenSolaris project whose code was released under the Common Development and Distribution License (CDDL).&lt;/p></description></item><item><title>Setting up VNC server on Solaris</title><link>https://wiki.deimos.fr/Mise_en_place_de_vncserver_sur_Solaris/</link><pubDate>Wed, 03 Dec 2008 15:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_de_vncserver_sur_Solaris/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Solaris, my love! You who never have packages and are never very convenient to use! In short, my difficult love! And yes, VNC server is doable! Recompiling manually is too difficult and time-consuming, so I opted for packages. But even that isn&amp;rsquo;t all roses!&lt;/p>
&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="method-1">Method 1 &lt;a href="#method-1" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Add this line to your profile:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="5ad5131" class="language-bash ">
 &lt;code>PATH=$PATH:/usr/openwin/bin:/usr/X11/bin&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="method-2">Method 2 &lt;a href="#method-2" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>For prerequisites, you need pkg-get! Then let&amp;rsquo;s get started:&lt;/p></description></item><item><title>Using the Web Console</title><link>https://wiki.deimos.fr/Utiliser_la_webconsole/</link><pubDate>Thu, 27 Nov 2008 15:55:00 +0200</pubDate><guid>https://wiki.deimos.fr/Utiliser_la_webconsole/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The web console is a tool that allows you to access SUN application management via a web interface. For example, it&amp;rsquo;s possible to administer ZFS pools and partitions or manage your cluster entirely through a web interface.&lt;/p>
&lt;p>This is very convenient for the average user and even more so when you can save time by delegating recurring tasks to a third party (non-experienced) person. That&amp;rsquo;s why I find the web console very useful. To use it, simply connect to this address: https://127.0.0.1:6789&lt;/p></description></item><item><title>Setting up Nagios NRPE on Solaris 10</title><link>https://wiki.deimos.fr/Mise_en_place_de_Nagios_NRPE_sur_Solaris_10/</link><pubDate>Sat, 05 Apr 2008 10:22:00 +0200</pubDate><guid>https://wiki.deimos.fr/Mise_en_place_de_Nagios_NRPE_sur_Solaris_10/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Traditionally Linux is the platform of choice for running Nagios however Solaris takes some beating for performance and reliability. Installing Nagios on Solaris is pretty straightforward however there are some tricks to make the install smoother.&lt;/p>
&lt;p>Usually our installation comprises Nagios 2.0, Nagios Plugins 1.4.2 and NRPE 2.4 so we&amp;rsquo;ll cover these here.&lt;/p>
&lt;p>Our target system is a Sun Ultra 60 so we&amp;rsquo;re using the SPARC version of Solaris 10. The same principles should apply to Solaris on Intel though.&lt;/p></description></item><item><title>SSH: Setting up SSH Server on a Minimal Solaris Installation</title><link>https://wiki.deimos.fr/SSH_:_Mise_en_place_du_serveur_SSH_Solaris_sur_une_installation_minimale/</link><pubDate>Sat, 05 Apr 2008 10:16:00 +0200</pubDate><guid>https://wiki.deimos.fr/SSH_:_Mise_en_place_du_serveur_SSH_Solaris_sur_une_installation_minimale/</guid><description>&lt;p>If you need to manage a Solaris 10 box with a minimal install, and SSH is not available, you can install it off of the 2nd CD. Rather than figure out the path to your CDROM (see this article), it was easier in our case to just tar up the needed packages and FTP them to our Solaris box:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="7de8f50" class="language-bash ">
 &lt;code>root@srv-3 Product # cp -R SUNWsshcu SUNWsshdr SUNWsshdu SUNWsshr 
SUNWsshu /home/srv-1/sshpkg/
root@srv-3 Product # cd /home/srv-1/sshpkg/
root@srv-3 sshpkg # ls
SUNWsshcu SUNWsshdr SUNWsshdu SUNWsshr SUNWsshu
root@srv-3 sshpkg # tar -cf ../ssh.tar *
root@srv-3 sshpkg # tar -tf ../ssh.tar
SUNWsshcu/
SUNWsshcu/archive/
.
.
.
SUNWsshu/reloc/
SUNWsshu/reloc/usr/
SUNWsshu/reloc/usr/bin/
SUNWsshu/reloc/usr/lib/
SUNWsshu/reloc/usr/lib/ssh/
root@srv-3 sshpkg #&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>On the Solaris side, FTP these to /tmp, then from tmp:&lt;/p></description></item></channel></rss>