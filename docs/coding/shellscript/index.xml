<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shell script on Tech Notebook</title><link>https://wiki.deimos.fr/docs/coding/shellscript/</link><description>Recent content in Shell script on Tech Notebook</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 May 2025 20:33:41 +0200</lastBuildDate><atom:link href="https://wiki.deimos.fr/docs/coding/shellscript/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Shell Scripting</title><link>https://wiki.deimos.fr/Introduction_au_Script_Shell/</link><pubDate>Tue, 03 May 2011 11:53:00 +0200</pubDate><guid>https://wiki.deimos.fr/Introduction_au_Script_Shell/</guid><description>&lt;h2 id="introduction">Introduction &lt;a href="#introduction" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Bourne-again shell is the free command interpreter of the GNU project. Its name is a play on words (Bourne again / born again) referring to the historic Unix shell, the Bourne shell. Based on the latter, it brings many improvements, notably from the Korn shell and the C shell.&lt;/p>
&lt;p>The original author is Brian Fox of the Free Software Foundation, later succeeded by Chet Ramey. The original Bourne shell was written by Steve Bourne.&lt;/p></description></item><item><title>Different Shell Script Loops</title><link>https://wiki.deimos.fr/Les_diff%C3%A9rentes_boucles_du_shell_script/</link><pubDate>Tue, 21 Oct 2008 15:22:00 +0200</pubDate><guid>https://wiki.deimos.fr/Les_diff%C3%A9rentes_boucles_du_shell_script/</guid><description>&lt;h2 id="1-if">1. if &lt;a href="#1-if" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Conditional binary structure: depending on whether a condition is true or false, we execute a block or we don&amp;rsquo;t.&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="91cc772" class="language-bash ">
 &lt;code>if condition ; then
 instruction
fi&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If the condition is true, then instruction (which can be a block of instructions) is executed.&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="29ded5a" class="language-bash ">
 &lt;code>if condition ; then
 instruction1
else
 instruction2
fi&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>For the same construction but with multiple conditions:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="4cd5041" class="language-bash ">
 &lt;code>if [condition1] || [condition2] ; then
 instruction1
else
 instruction2
fi&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If the condition is true, then instruction1 is executed and the second is ignored, otherwise instruction2 is executed and the first is ignored.&lt;/p></description></item><item><title>Debugging a Shell Script</title><link>https://wiki.deimos.fr/Debugger_un_script_shell/</link><pubDate>Wed, 05 Mar 2008 09:49:00 +0200</pubDate><guid>https://wiki.deimos.fr/Debugger_un_script_shell/</guid><description>&lt;p>Shell scripts are often criticized for not having an integrated debugger. But this is false!&lt;/p>
&lt;p>When programming in bash, there are command line options to see what is being read and then executed in a script.&lt;/p>
&lt;h2 id="example">Example &lt;a href="#example" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Let&amp;rsquo;s say we have the script MyScript.sh:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="908b808" class="language-bash ">
 &lt;code>#!/bin/sh
touch unFichier
if [ -f ./unFichier ]; then
 rm ./unFichier
fi&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>If we execute it this way:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="37370e2" class="language-bash ">
 &lt;code>/bin/bash -v -x ./MyScript.sh&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>We&amp;rsquo;ll get output like this:&lt;/p></description></item></channel></rss>